{"version":3,"sources":["serviceWorker.ts","models/follow-model.ts","config.ts","api/axios.ts","redux/action-type.ts","redux/store.ts","redux/reducer.ts","redux/app-state.ts","services/auth.ts","components/nav-bar/navBar.tsx","components/home/home.tsx","models/user-model.ts","services/user-validation.ts","components/registration/registration.tsx","components/login/login.tsx","components/admin/admin.tsx","services/date.ts","services/vacation-validation.ts","components/edit-vacation/editVacation.tsx","models/vacation-model.ts","components/add-vacation/addVacation.tsx","components/reports/reports.tsx","services/color.ts","components/purchase/purchase.tsx","components/purchases/purchases.tsx","components/app/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","FollowModel","followId","userName","vacationId","Config","serverUrl","captchaKey","_initialize","axios","ActionType","create","baseURL","axiosPrivate","headers","withCredentials","store","createStore","oldAppState","action","newAppState","type","SaveAllFollows","follows","payload","SaveAllVacations","vacations","saveToken","token","saveAllPurchases","purchases","saveUser","user","isLoggedIn","saveOneVacation","i","isFollow","addOneVacation","push","deleteOneVacation","filter","v","AddFollow","RemoveFollow","f","setFollowsPerVacation","counter","forEach","sortVacations","isNotFollow","concat","addPurchase","cookies","Cookies","this","get","props","getState","pathname","alert","history","isAdmin","disconnect","a","console","log","remove","dispatch","errorHandling","error","response","data","NavBar","logOut","state","className","to","exact","firstName","Button","onClick","Component","withRouter","Home","unsubscribeStore","socket","getComponentData","length","addFollow","followToAdd","post","followAdded","emit","removeFollow","followToRemove","find","delete","io","connect","subscribe","setState","map","Card","key","Img","variant","src","img","Body","color","size","Title","destination","Text","description","ListGroup","ListGroupItem","Date","startingDate","toDateString","endingDate","price","UserModel","lastName","password","captchaToken","validateUserName","validatePassword","Registration","recaptchaRef","setUserName","args","nameError","target","value","usersNames","validateAvailableUserName","errors","userNameError","setFirstName","validateFirstName","firstNameError","setLastName","validateLastName","lastNameError","setPassword","passwordError","verifyPasswordUser","verifyPassword","verifyPasswordError","isFormLegal","prop","toString","register","e","preventDefault","executeAsync","reset","accessToken","set","path","maxAge","captchaIsVerified","captcha","process","getAllUsersNames","name","id","placeholder","onChange","sitekey","ref","domObject","disabled","Login","login","onSubmit","Admin","getDataWithAjax","JsonToString","date","d","setDate","getDate","toISOString","split","StringToJson","setHours","toJSON","validateDescription","validateDestination","validatePrice","EditVacation","setDescription","descriptionError","vacation","setDestination","destinationError","onFileChange","file","files","setImgUrl","fileName","imgError","setStartingDate","startingDateError","setEndingDate","endingDateError","setPrice","priceError","update","formData","FormData","append","vacationToUpdate","put","params","Form","Group","controlId","Label","Control","VacationModel","AddVacation","add","addedVacation","Reports","updateGraphState","vacationsDestinations","vacationsFollows","colors","r","Math","floor","random","g","b","getRandomColor","labels","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","userCallback","index","Purchase","purchase","priceForTicket","setAmountOfTickets","tickets","totalPrice","send","dateNow","Header","alt","pattern","onInput","bind","Purchases","getComponentDataWithAxios","p","Table","striped","bordered","hover","purchaseId","App","reqInterceptor","req","resInterceptor","res","resErrInterceptor","err","config","url","prevRequest","newAccessToken","interceptors","request","use","on","vacationUpdated","vacationAdded","vacationRemoved","render","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"+dAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oFClBOC,G,OAET,WACWC,EACAC,EACAC,GAAsB,yBAFtBF,WAEqB,KADrBC,WACqB,KAArBC,e,iBCLFC,EAAb,2GAOYA,EAAOC,UAAU,2CAP7B,KAAaD,EAEKC,e,EAFLD,EAGKE,gB,EAalBF,EAAOG,cCZQC,ICJHC,EDIGD,MAAME,OAAO,CACxBC,QAASP,EAAOC,YAGPO,EAAeJ,IAAME,OAAO,CACjCC,QAASP,EAAOC,UAChBQ,QAAS,CAAC,eAAe,oBACzBC,iBAAiB,I,2CCXbL,O,uCAAAA,I,mCAAAA,I,uCAAAA,I,yBAAAA,I,uBAAAA,I,iDAAAA,I,iCAAAA,I,qCAAAA,I,mCAAAA,I,yCAAAA,I,0BAAAA,I,gCAAAA,I,+BAAAA,M,iBCICM,EAAQC,aCDd,SAAgBC,EAAuBC,GAE1C,IAAMC,EAAW,eAAQF,GAEzB,OAAQC,EAAOE,MAGX,KAAKX,EAAWY,eACZF,EAAYG,QAAUJ,EAAOK,QAC7B,MAEJ,KAAKd,EAAWe,iBACZL,EAAYM,UAAYP,EAAOK,QAC/B,MAEJ,KAAKd,EAAWiB,UACZP,EAAYQ,MAAQT,EAAOK,QAC3B,MAEJ,KAAKd,EAAWmB,iBACZT,EAAYU,UAAYX,EAAOK,QAC/B,MAEJ,KAAKd,EAAWqB,SACZX,EAAYY,KAAOb,EAAOK,QAC1BJ,EAAYa,aAAad,EAAOK,QAChC,MAEJ,KAAKd,EAAWwB,gBAEZ,IAAK,IAAIC,KAAKf,EAAYM,UACtB,GAAIN,EAAYM,UAAUS,GAAG/B,aAAee,EAAOK,QAAQpB,WAAY,CACnE,IAAMmB,EAAUH,EAAYM,UAAUS,GAAGZ,QACnCa,EAAWhB,EAAYM,UAAUS,GAAGC,SAC1ChB,EAAYM,UAAUS,GAAKhB,EAAOK,QAClCJ,EAAYM,UAAUS,GAAGZ,QAAUA,EACnCH,EAAYM,UAAUS,GAAGC,SAAWA,EAK5C,MAEJ,KAAK1B,EAAW2B,eACZjB,EAAYM,UAAUY,KAAKnB,EAAOK,SAClC,MAEJ,KAAKd,EAAW6B,kBAEZnB,EAAYM,UAAYN,EAAYM,UAAUc,QAAO,SAAAC,GAAC,OAAIA,EAAErC,aAAee,EAAOK,WAClF,MAEJ,KAAKd,EAAWgC,UACZtB,EAAYG,QAAQe,KAAKnB,EAAOK,SAChC,MAEJ,KAAKd,EAAWiC,aAEZvB,EAAYG,QAAUH,EAAYG,QAAQiB,QAAO,SAAAI,GAAC,OAAKA,EAAE1C,WAAaiB,EAAOK,WAC7E,MAEJ,KAAKd,EAAWmC,sBAEZ,IAAIC,EAAU,EACd1B,EAAYM,UAAUqB,SAAQ,SAACN,GAC3BA,EAAEL,UAAW,EACbhB,EAAYG,QAAQwB,SAAQ,SAACH,GACrBA,EAAExC,aAAeqC,EAAErC,aACnB0C,IACIF,EAAEzC,WAAaiB,EAAYY,KAAK7B,WAChCsC,EAAEL,UAAW,OAIzBK,EAAElB,QAAUuB,EACZA,EAAU,KAEd,MAGJ,KAAKpC,EAAWsC,cAEZ,IAAMZ,EAAWhB,EAAYM,UAAUc,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAEL,YACjDa,EAAc7B,EAAYM,UAAUc,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAEL,YAC1DhB,EAAYM,UAAYU,EAASc,OAAOD,GAExC,MAEJ,KAAKvC,EAAWyC,YACZ/B,EAAYU,UAAUQ,KAAKnB,EAAOK,SAM1C,OAAOJ,ID9F8B,IEWrC,aAAsB,yBAPfM,eAOc,OANdH,aAMc,OALdO,eAKc,OAJdE,UAIc,OAHdJ,WAGc,OAFdK,gBAEc,EACjB,IAAMmB,EAAU,IAAIC,IAEpBC,KAAK5B,UAAY,GACjB4B,KAAK/B,QAAQ,GACb+B,KAAKxB,UAAU,GAEfwB,KAAKtB,KAAKoB,EAAQG,IAAI,QACtBD,KAAKrB,aAAYqB,KAAKtB,KAEtBsB,KAAK1B,MAAM,O,kDCKZ,SAASK,EAAWuB,GAEvB,QAAKxC,EAAMyC,WAAWxB,aACW,MAA1BuB,EAAM1D,SAAS4D,UACdC,MAAM,gCACVH,EAAMI,QAAQtB,KAAK,WACZ,GAOR,SAASuB,EAAQL,GAAiB,IAAD,EAEpC,SAAI,UAACxC,EAAMyC,WAAWzB,YAAlB,aAAC,EAAuB6B,WACxBF,MAAM,4BACNH,EAAMI,QAAQtB,KAAK,MACZ,GAOR,SAAewB,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEAECC,QAAQC,IAAI,cAFb,SAGOxD,EAAM8C,IAAI,mBAAoB,CAAExC,iBAAiB,IAHxD,QAIiB,IAAIsC,KACZa,OAAO,QAEflD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWqB,SAAUP,QAAS,OACrDR,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWiB,UAAWH,QAAS,OARvD,kDAWCmC,MAAM,EAAD,IAXN,2D,sBAeA,SAAeS,EAAtB,oC,4CAAO,WAA6BC,EAAOb,GAApC,uBAAAO,EAAA,yDAEEM,EAFF,oDAIW,yBAAVA,EAJD,uBAKCV,MAAMU,GALP,6BAS0C,2BAAzC,UAACA,EAAqBC,gBAAtB,eAAgCC,MATjC,iCAUOT,IAVP,cAWCH,MAAM,gCACNH,EAAMI,QAAQtB,KAAK,UAZpB,8BAgB0C,oCAAzC,UAAC+B,EAAqBC,gBAAtB,eAAgCC,MAhBjC,kCAiBOT,IAjBP,eAkBCH,MAAM,yCACNH,EAAMI,QAAQtB,KAAK,UAnBpB,8BAuB0C,wBAAzC,UAAC+B,EAAqBC,gBAAtB,eAAgCC,MAvBjC,kCAwBOT,IAxBP,eAyBCH,MAAM,6BACNH,EAAMI,QAAQtB,KAAK,UA1BpB,8BA8B0C,kCAAzC,UAAC+B,EAAqBC,gBAAtB,eAAgCC,MA9BjC,wBA+BCZ,MAAM,uCA/BP,2BAoCHA,MAAK,QAAE,EAAAU,EAAqBC,gBAAvB,aAAC,EAAgCC,MApCnC,6C,0BCxDDC,E,kDAEF,WAAmBhB,GAAa,IAAD,8BAC3B,cAAMA,IAOFiB,OARuB,sBAQf,sBAAAV,EAAA,sEACND,IADM,OAEZ,EAAKN,MAAMI,QAAQtB,KAAK,UAFZ,2CALZ,EAAKoC,MAAQ,CACT1C,KAAMhB,EAAMyC,WAAWzB,MAJA,E,qDAad,IAAD,IACZ,OACI,yBAAK2C,UAAU,WACX,yBAAKA,UAAU,iBACX,8BACK,UAAArB,KAAKoB,MAAM1C,YAAX,eAAiB6B,SACd,4BACI,4BACI,kBAAC,IAAD,CAASe,GAAG,IAAIC,OAAK,GAArB,SAEJ,4BACI,kBAAC,IAAD,CAASD,GAAG,SAASC,OAAK,GAA1B,oBAEJ,4BACI,kBAAC,IAAD,CAASD,GAAG,aAAaC,OAAK,GAA9B,kBAEJ,4BACI,kBAAC,IAAD,CAASD,GAAG,aAAaC,OAAK,GAA9B,eAEJ,4BACI,kBAAC,IAAD,CAASD,GAAG,WAAWC,OAAK,GAA5B,eAIR,4BACI,4BACI,kBAAC,IAAD,CAASD,GAAG,IAAIC,OAAK,GAArB,UAKZ,yBAAKF,UAAU,QACX,iDAAarB,KAAKoB,MAAM1C,YAAxB,aAAa,EAAiB8C,UAA9B,KAEA,6BACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKmB,QAAtB,eAQhB,yBAAKE,UAAU,e,GA1DVM,aAqENC,cAAWV,GChDbW,EAAb,kDAKI,WAAmB3B,GAAa,IAAD,8BAC3B,cAAMA,IAJF4B,sBAGuB,IAFvBC,YAEuB,IAiCvBC,iBAjCuB,sBAiCJ,kCAAAvB,EAAA,kEAGuB,IAAtC/C,EAAMyC,WAAW/B,UAAU6D,OAHZ,gCAKX1E,EAAa0C,IAAqB,kBALvB,OAITe,EAJS,OAMT5C,EAAY4C,EAASC,KAC3BvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWe,iBAAkBD,QAASE,IAP9C,UAUqB,IAApCV,EAAMyC,WAAWlC,QAAQgE,OAVV,kCAYX1E,EAAa0C,IAAmB,gBAZrB,QAWTe,EAXS,OAaT/C,EAAU+C,EAASC,KACzBvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWY,eAAgBE,QAASD,IAC3DP,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWmC,wBAClC7B,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWsC,gBAhBnB,0DAqBnBoB,EAAc,EAAD,GAAM,EAAKZ,OArBL,0DAjCI,EA4DvBgC,UA5DuB,uCA4DX,WAAOpF,GAAP,mBAAA2D,EAAA,6DACV0B,EAAc,IAAIxF,GACZE,SAAWa,EAAMyC,WAAWzB,KAAK7B,SAC7CsF,EAAYrF,WAAaA,EAHT,kBAMWS,EAAa6E,KAAkB,eAAgBD,GAN1D,QAMNnB,EANM,QAOCC,OACHoB,EAAcrB,EAASC,KAC7B,EAAKc,OAAOO,KAAK,kCAAmCD,IAT5C,kDAcZvB,EAAc,EAAD,GAAM,EAAKZ,OAdZ,0DA5DW,wDA+EvBqC,aA/EuB,uCA+ER,WAAOzF,GAAP,iBAAA2D,EAAA,6DAEb5D,EAAWa,EAAMyC,WAAWzB,KAAK7B,SAEjC2F,EAAiB,EAAKpB,MAAMnD,QAAQwE,MAAK,SAAAnD,GAC3C,OAAOA,EAAEzC,WAAaA,GAAYyC,EAAExC,aAAeA,KALpC,kBASTS,EAAamF,OAAb,uBAAoCF,EAAe5F,WAT1C,OAUf,EAAKmF,OAAOO,KAAK,oCAAqCE,EAAe5F,UAVtD,gDAcfkE,EAAc,EAAD,GAAM,EAAKZ,OAdT,yDA/EQ,sDAI3B,EAAKkB,MAAQ,CACThD,UAAWV,EAAMyC,WAAW/B,UAC5BH,QAASP,EAAMyC,WAAWlC,QAC1BU,WAAYjB,EAAMyC,WAAWxB,YAPN,EALnC,wLAoBaA,EAAWqB,KAAKE,OApB7B,iDAuBQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WACpC,IAAMzE,EAAYV,EAAMyC,WAAW/B,UAC7BH,EAAUP,EAAMyC,WAAWlC,QAC3BU,EAAajB,EAAMyC,WAAWxB,WACpC,EAAKmE,SAAS,CAAE1E,YAAWH,UAASU,kBAIxCqB,KAAKgC,mBAlCb,mJAuGyC,IAAD,IAChC,UAAAhC,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eAzGrB,+BA6GqB,IAAD,OAEZ,OACI,yBAAKa,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACVrB,KAAKoB,MAAMhD,UAAU2E,KAAI,SAAA5D,GAAC,OAGvB,kBAAC6D,EAAA,EAAD,CAAMC,IAAK9D,EAAErC,YACT,yBAAKuE,UAAU,yBACX,yBAAKA,UAAU,cACX,kBAAC2B,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAM9B,UAAU,MAAM+B,IAAKrG,EAAOC,UAAY,4BAA8BmC,EAAEkE,QAGxG,kBAACL,EAAA,EAAKM,KAAN,KACKnE,EAAEL,SAAW,kBAAC,IAAD,CAAUuC,UAAU,YAAYkC,MAAM,SAASC,KAAM,SAAU9B,QAAS,kBAAM,EAAKa,aAAapD,EAAErC,eAAkB,kBAAC,IAAD,CAAUuE,UAAU,YAAYkC,MAAM,OAAOC,KAAM,SAAU9B,QAAS,kBAAM,EAAKQ,UAAU/C,EAAErC,eAE/N,kBAACkG,EAAA,EAAKS,MAAN,KAAatE,EAAEuE,aACf,kBAACV,EAAA,EAAKW,KAAN,KACKxE,EAAEyE,cAGX,kBAACC,EAAA,EAAD,CAAWxC,UAAU,oBACjB,kBAACyC,EAAA,EAAD,iBAAyB3E,EAAElB,SAC3B,kBAAC6F,EAAA,EAAD,eAAuB,IAAIC,KAAK5E,EAAE6E,cAAcC,gBAChD,kBAACH,EAAA,EAAD,aAAqB,IAAIC,KAAK5E,EAAE+E,YAAYD,gBAC5C,kBAACH,EAAA,EAAD,cAAsB3E,EAAEgF,MAAxB,KACA,kBAACL,EAAA,EAAD,KAAe,kBAAC,IAAD,CAASzC,UAAU,WAAWC,GAAI,aAAenC,EAAErC,WAAYyE,OAAK,GAApE,0BAzI/C,GAA0BI,aClCbyC,G,OAET,WACW5C,EACA6C,EACAxH,EACAyH,EACA/D,EACAgE,GACJ,yBANI/C,YAML,KALK6C,WAKL,KAJKxH,WAIL,KAHKyH,WAGL,KAFK/D,UAEL,KADKgE,iBCCR,SAASC,EAAiB3H,GAE7B,MAAiB,KAAbA,EACO,oBAGHA,EAASoF,OAAS,EACf,sBAGFpF,EAASoF,OAAS,GAChB,qBAEJ,GA+CJ,SAASwC,EAAiBH,GAC7B,MAAiB,KAAbA,EACO,mBAGHA,EAASrC,OAAS,EACf,wBAGFqC,EAASrC,OAAS,GAChB,uBAEJ,G,aC/BEyC,EAAb,kDAII,WAAmBxE,GAAa,IAAD,8BAC3B,cAAMA,IAHFyE,kBAEuB,IAqCvBC,YAAc,SAACC,GACnB,IAEIC,EAFEjI,EAAWgI,EAAKE,OAAOC,MAKX,gCADlBF,EDjGD,SAAmCjI,EAASoI,GAC/C,IAAIlE,EAAM,GAMV,OALAkE,EAAWxF,SAAQ,SAAAf,GACZ7B,IAAW6B,EAAK7B,WACfkE,EAAM,iCAGPA,EC0FSmE,CAA0BrI,EAAU,EAAKuE,MAAM6D,eAEvDH,EAAYN,EAAiB3H,IAGjC,IAAMsI,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOC,cAAgBN,EACvB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK7B,SAAWA,EAChB,EAAKiG,SAAS,CAAEpE,UArDW,EAwDvB2G,aAAe,SAACR,GACpB,IAAMrD,EAAYqD,EAAKE,OAAOC,MAE1BF,EDvFL,SAA2BtD,GAC9B,MAAkB,KAAdA,EACO,qBAGHA,EAAUS,OAAS,EACf,0BAGHT,EAAUS,OAAS,GAChB,yBAGF,KAAKT,EAAU,IAAMA,EAAU,IAAK,IAIvC,GAHK,8CCyEQ8D,CAAkB9D,GAE5B2D,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOI,eAAiBT,EACxB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK8C,UAAYA,EACjB,EAAKsB,SAAS,CAAEpE,UAnEW,EAuEvB8G,YAAc,SAACX,GACnB,IAAMR,EAAWQ,EAAKE,OAAOC,MAEzBF,EDjFL,SAA0BT,GAC7B,MAAiB,KAAbA,EACQ,oBAGJA,EAASpC,OAAS,EACd,yBAGHoC,EAASpC,OAAS,GACf,wBAGF,KAAKoC,EAAS,IAAMA,EAAS,IAAK,IAIrC,GAHK,8CCmEQoB,CAAiBpB,GAE3Bc,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOO,cAAgBZ,EACvB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK2F,SAAWA,EAChB,EAAKvB,SAAS,CAAEpE,UAlFW,EAsFvBiH,YAAc,SAACd,GACnB,IAAMP,EAAWO,EAAKE,OAAOC,MAEzBF,EAAYL,EAAiBH,GAE3Ba,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOS,cAAgBd,EACvB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK4F,SAAWA,EAChB,EAAKxB,SAAS,CAAEpE,UAjGW,EAqGvBmH,mBAAqB,SAAChB,GAC1B,IAGIC,ED3EL,SAAwBgB,EAAexB,GAC1C,MAAoB,KAAjBwB,EACQ,4BAEFA,IAAmBxB,EACjB,kBAEJ,GCoEawB,CAHSjB,EAAKE,OAAOC,MAC3B,eAAQ,EAAK5D,MAAM1C,MAEyB4F,UAEhDa,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOY,oBAAsBjB,EAC7B,EAAKhC,SAAS,CAAEqC,YA7GW,EAgHvBa,YAAc,WAClB,IAAK,IAAMC,KAAQ,EAAK7E,MAAM+D,OAC1B,GAA2C,KAAvC,EAAK/D,MAAM+D,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,GAtHoB,EAyHvBC,SAzHuB,uCAyHZ,WAAOC,GAAP,mBAAA3F,EAAA,sEAEX2F,EAAEC,iBAFS,SAIS,EAAK1B,aAAa2B,eAJ3B,cAILhI,EAJK,OAKXoC,QAAQC,IAAIrC,GAEZ,EAAKqG,aAAa4B,SAGZ7H,EAVK,eAUO,EAAK0C,MAAM1C,OACxB6F,aAAajG,EAXP,UAaYnB,EAAMiF,KAAK,qBAC9B1D,EAAM,CAAEjB,iBAAiB,IAdlB,QAaLuD,EAbK,OAgBXtD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWqB,SAAUP,QAAS8C,EAASC,KAAKvC,OACnEhB,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWiB,UAAWH,QAAS8C,EAASC,KAAKuF,eAEpD,IAAIzG,KACZ0G,IAAI,OAAQzF,EAASC,KAAKvC,KAAM,CAAEgI,KAAM,IAAKC,OAAQ,QAE7D,EAAKzG,MAAMI,QAAQtB,KAAK,KAtBb,kDA0BX8B,EAAc,EAAD,GAAM,EAAKZ,OA1Bb,0DAzHY,sDAE3B,EAAKkB,MAAQ,CACT1C,KAAM,IAAI0F,EACVa,WAAY,GACZ2B,mBAAmB,EACnBzB,OAAQ,CAAEC,cAAe,IAAKG,eAAgB,IAAKG,cAAe,IAAKE,cAAe,IAAKG,oBAAqB,IAAKc,QAAS,KANvG,EAJnC,6KAgBQnG,QAAQC,IAAImG,yLAAa,QAGrBpJ,EAAMyC,WAAWzB,KAnB7B,uBAoBYsB,KAAKE,MAAMI,QAAQtB,KAAK,KApBpC,0BAwBQgB,KAAK+G,mBAxBb,0RA8BmC5J,EAAM8C,IAAiB,wBA9B1D,OA8BkBe,EA9BlB,OA+BkBiE,EAAajE,EAASC,KAE5BjB,KAAK8C,SAAS,CAAEmC,eAjC5B,gDAqCYnE,EAAc,EAAD,GAAMd,KAAKE,OArCpC,8IA6JqB,IAAD,OACZ,OAEI,yBAAKmB,UAAU,gBACX,yBAAKA,UAAU,qBACX,uCACA,0BAAMxD,OAAO,IACT,yBAAKwD,UAAU,aACX,2BAAOtD,KAAK,OAAOiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUnH,KAAK4E,cAC/E,0BAAMvD,UAAU,SAA6C,MAApCrB,KAAKoB,MAAM+D,OAAOC,cAAwB,GAAKpF,KAAKoB,MAAM+D,OAAOC,gBAE9F,yBAAK/D,UAAU,aACX,2BAAOtD,KAAK,OAAOiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,aAAaC,SAAUnH,KAAKqF,eAChF,0BAAMhE,UAAU,SAA8C,MAArCrB,KAAKoB,MAAM+D,OAAOI,eAAyB,GAAKvF,KAAKoB,MAAM+D,OAAOI,iBAE/F,yBAAKlE,UAAU,aACX,2BAAOtD,KAAK,OAAOiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUnH,KAAKwF,cAC/E,0BAAMnE,UAAU,SAA6C,MAApCrB,KAAKoB,MAAM+D,OAAOO,cAAwB,GAAK1F,KAAKoB,MAAM+D,OAAOO,gBAE9F,yBAAKrE,UAAU,aACX,2BAAOtD,KAAK,WAAWiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,WAAWC,SAAUnH,KAAK2F,cAClF,0BAAMtE,UAAU,SAA6C,MAApCrB,KAAKoB,MAAM+D,OAAOS,cAAwB,GAAK5F,KAAKoB,MAAM+D,OAAOS,gBAE9F,yBAAKvE,UAAU,aACX,2BAAOtD,KAAK,WAAWiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,kBAAkBC,SAAUnH,KAAK6F,qBACzF,0BAAMxE,UAAU,SAAmD,MAA1CrB,KAAKoB,MAAM+D,OAAOY,oBAA8B,GAAK/F,KAAKoB,MAAM+D,OAAOY,sBAEpG,kBAAC,IAAD,CACIqB,QAASN,2CACTtD,KAAK,YACL6D,IAAK,SAAAC,GAAS,OAAI,EAAK3C,aAAe2C,KAG1C,kBAAC7F,EAAA,EAAD,CAAQ0B,QAAQ,UAAUpF,KAAK,SAASwJ,UAAWvH,KAAKgG,cAAetE,QAAS1B,KAAKmG,UAArF,YAGJ,kBAAC,IAAD,CAAS9E,UAAU,WAAWC,GAAG,SAASC,OAAK,GAA/C,2BAAwE,6BAAxE,sBAjMpB,GAAkCI,aCjBrB6F,G,OAAb,kDAEI,WAAmBtH,GAAa,IAAD,8BAC3B,cAAMA,IAgBF0E,YAAc,SAACC,GACnB,IAAMhI,EAAWgI,EAAKE,OAAOC,MAEzBF,EAAYN,EAAiB3H,GAE3BsI,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOC,cAAgBN,EACvB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK7B,SAAWA,EAChB,EAAKiG,SAAS,CAAEpE,UA5BW,EAgCvBiH,YAAc,SAACd,GACnB,IAAMP,EAAWO,EAAKE,OAAOC,MAEzBF,EAAYL,EAAiBH,GAE3Ba,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOS,cAAgBd,EACvB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAMzG,EAAI,eAAQ,EAAK0C,MAAM1C,MAC7BA,EAAK4F,SAAWA,EAChB,EAAKxB,SAAS,CAAEpE,UA3CW,EA+CvBsH,YAAc,WAClB,IAAK,IAAMC,KAAQ,EAAK7E,MAAM+D,OAC1B,GAA2C,KAAvC,EAAK/D,MAAM+D,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,GArDoB,EAyDvBuB,MAzDuB,uCAyDf,WAAOrB,GAAP,eAAA3F,EAAA,sEAGR2F,EAAEC,iBAHM,SAIe9I,EAAa6E,KAAK,kBACrC,EAAKhB,MAAM1C,KAAM,CAAEjB,iBAAiB,IALhC,OAIFuD,EAJE,OAORtD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWqB,SAAUP,QAAS8C,EAASC,KAAKvC,OACnEhB,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWiB,UAAWH,QAAS8C,EAASC,KAAKuF,eAEpD,IAAIzG,KACZ0G,IAAI,OAAQzF,EAASC,KAAKvC,KAAM,CAAEgI,KAAM,IAAKC,OAAQ,QAE7D,EAAKzG,MAAMI,QAAQtB,KAAK,KAbhB,kDAiBR8B,EAAc,EAAD,GAAM,EAAKZ,OAjBhB,0DAzDe,sDAE3B,EAAKkB,MAAQ,CACT1C,KAAM,IAAI0F,EACVe,OAAQ,CAAEC,cAAe,IAAKQ,cAAe,MAJtB,EAFnC,gEAaYlI,EAAMyC,WAAWzB,MACjBsB,KAAKE,MAAMI,QAAQtB,KAAK,OAdpC,+BAkFQ,OACI,yBAAKqC,UAAU,SACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,aAAaqG,SAAU1H,KAAKyH,OACxC,qCACA,2BAAO1J,KAAK,OAAOiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUnH,KAAK4E,cAC/E,2BAAO7G,KAAK,WAAWiJ,KAAK,GAAGC,GAAG,UAAUC,YAAY,WAAWC,SAAUnH,KAAK2F,cAClF,6BACA,kBAAClE,EAAA,EAAD,CAAQ0B,QAAQ,UAAUpF,KAAK,SAASwJ,UAAWvH,KAAKgG,eAAxD,UAIJ,kBAAC,IAAD,CAAS3E,UAAU,WAAWC,GAAG,gBAAgBC,OAAK,GAAtD,mCA9FpB,GAA2BI,c,2BCCdgG,EAAb,kDAKI,WAAmBzH,GAAa,IAAD,8BAC3B,cAAMA,IAJF4B,sBAGuB,IAFvBC,YAEuB,IAqCvB6F,gBArCuB,sBAqCL,8BAAAnH,EAAA,+EAGdlD,EAAa0C,IAAqB,kBAHpB,OAEZe,EAFY,OAIZ5C,EAAY4C,EAASC,KAC3BvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWe,iBAAkBD,QAASE,IAL3C,gDASlB0C,EAAc,EAAD,GAAM,EAAKZ,OATN,yDAjCtB,EAAKkB,MAAQ,CACThD,UAAWV,EAAMyC,WAAW/B,UAC5BO,WAAYjB,EAAMyC,WAAWxB,YANN,EALnC,wLAkBYA,EAAWqB,KAAKE,OAlB5B,oDAmBYK,EAAQP,KAAKE,OAnBzB,oDAsBQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WACpC,IAAMzE,EAAYV,EAAMyC,WAAW/B,UACnC,EAAK0E,SAAS,CAAE1E,mBAKhB4B,KAAKoB,MAAMhD,UAAU6D,OAAS,GAhC1C,iDAqCQjC,KAAK4H,kBArCb,4KAyDyB9K,GAzDzB,0FA2DkBS,EAAamF,OAAb,yBAAsC5F,IA3DxD,OA4DYkD,KAAK+B,OAAOO,KAAK,uCAAwCxF,GA5DrE,+CAgEYgE,EAAc,EAAD,GAAMd,KAAKE,OAhEpC,4JAsEyC,IAAD,IAChC,UAAAF,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eAxErB,+BA2EqB,IAAD,OACZ,OACI,yBAAKa,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACVrB,KAAKoB,MAAMhD,UAAU2E,KAAI,SAAA5D,GAAC,OAEvB,kBAAC6D,EAAA,EAAD,CAAMC,IAAK9D,EAAErC,YACT,yBAAKuE,UAAU,yBACX,yBAAKA,UAAU,cACX,kBAAC2B,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAM9B,UAAU,MAAM+B,IAAKrG,EAAOC,UAAY,4BAA8BmC,EAAEkE,QAGxG,kBAACL,EAAA,EAAKM,KAAN,KACI,kBAAC,IAAD,CAAGjC,UAAU,SAASkC,MAAM,QAAQC,KAAM,SAAU9B,QAAS,kBAAM,EAAKgB,OAAOvD,EAAErC,eACjF,kBAAC,IAAD,CAASwE,GAAI,UAAYnC,EAAErC,YACvB,kBAAC,IAAD,CAAQyG,MAAM,QAAQC,KAAM,YAEhC,kBAACR,EAAA,EAAKS,MAAN,KAAatE,EAAEuE,aACf,kBAACV,EAAA,EAAKW,KAAN,KACKxE,EAAEyE,cAIX,kBAACC,EAAA,EAAD,CAAWxC,UAAU,oBACjB,kBAACyC,EAAA,EAAD,eAAuB,IAAIC,KAAK5E,EAAE6E,cAAcC,gBAChD,kBAACH,EAAA,EAAD,aAAqB,IAAIC,KAAK5E,EAAE+E,YAAYD,gBAC5C,kBAACH,EAAA,EAAD,cAAsB3E,EAAEgF,MAAxB,WAKhB,kCA3GhB,GAA2BxC,a,eCnCpB,SAASkG,EAAaC,GACzB,IAAMC,EAAE,IAAIhE,KAAK+D,GAIlB,OAHCC,EAAEC,QAAQD,EAAEE,UAAU,GACLF,EAAEG,cACEC,MAAM,KACjB,GAIP,SAASC,GAAaN,GACzB,IAAMC,EAAE,IAAIhE,KAAK+D,GAIjB,OAHAC,EAAEC,QAAQD,EAAEE,UAAU,GACtBF,EAAEM,SAAS,IACMN,EAAEO,SCZhB,SAASC,GAAoB3E,GAEhC,MAAoB,KAAhBA,EACO,sBAGHA,EAAY3B,OAAS,EAClB,2BAGF2B,EAAY3B,OAAS,IACnB,0BAEJ,GAIJ,SAASuG,GAAoB9E,GAChC,MAAoB,KAAhBA,EACO,sBAGHA,EAAYzB,OAAS,EACjB,2BAGHyB,EAAYzB,OAAS,GAClB,0BAGF,KAAKyB,EAAY,IAAMA,EAAY,IAAK,IAG3C,GAFK,+CAqBT,SAAS+E,GAActE,GAE1B,OAAKA,EAIGA,EAAQ,EACL,0BAGFA,EAAQ,IACN,oBAEJ,GAVI,gB,YCXFuE,GAAb,kDAKI,WAAmBxI,GAAa,IAAD,8BAC3B,cAAMA,IAJF4B,sBAGuB,IAFvBC,YAEuB,IA8DxB4G,eAAiB,SAAC9D,GACrB,IACIC,EADElB,EAAciB,EAAKE,OAAOC,MAGhCF,EAAYyD,GAAoB3E,GAEhC,IAAMuB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOyD,iBAAmB9D,EAC1B,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASjF,YAAcA,EACvB,EAAKd,SAAS,CAAE+F,cA1EW,EA6ExBC,eAAiB,SAACjE,GACrB,IACIC,EADEpB,EAAcmB,EAAKE,OAAOC,MAGhCF,EAAY0D,GAAoB9E,GAEhC,IAAMyB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAO4D,iBAAmBjE,EAC1B,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASnF,YAAcA,EACvB,EAAKZ,SAAS,CAAE+F,cAzFW,EA4FvBG,aAAe,SAACnE,GACpB,IAAMoE,EAAOpE,EAAKE,OAAOmE,MAAM,GAC/B,EAAKC,UAAUF,EAAKjC,MACpB,EAAKlE,SAAS,CAAEmG,UA/FW,EAkGvBE,UAAY,SAACC,GACjB,IAAM/F,EAAM+F,EAKZ,IAAMjE,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOkE,SDpHJ,GCqHH,EAAKvG,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASxF,IAAMA,EACf,EAAKP,SAAS,CAAE+F,cA9GW,EAiHxBS,gBAAkB,SAACzE,GACtB,IAAMb,EAAea,EAAKE,OAAOC,MAKjC,IAAMG,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOoE,kBD/HJ,GCgIH,EAAKzG,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS7E,aAAeA,EACxB,EAAKlB,SAAS,CAAE+F,cA7HW,EAgIxBW,cAAgB,SAAC3E,GACpB,IAAMX,EAAaW,EAAKE,OAAOC,MAK/B,IAAMG,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOsE,gBD1IJ,GC2IH,EAAK3G,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS3E,WAAaA,EACtB,EAAKpB,SAAS,CAAE+F,cA5IW,EA+IvBa,SAAW,SAAC7E,GAChB,IACIC,EADEX,GAASU,EAAKE,OAAOC,MAG3BF,EAAY2D,GAActE,GAE1B,IAAMgB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOwE,WAAa7E,EACpB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS1E,MAAQA,EACjB,EAAKrB,SAAS,CAAE+F,cA3JW,EAwKxBe,OAxKwB,sBAwKf,8BAAAnJ,EAAA,mEAGJ,EAAKW,MAAM6H,KAHP,uBAIEY,EAAW,IAAIC,UACZC,OACL,OACA,EAAK3I,MAAM6H,MAPX,SASE1L,EAAa6E,KAAK,gBAAiByH,GATrC,cAYFG,EAZE,eAYsB,EAAK5I,MAAMyH,UAZjC,SAaFtL,EAAa0M,IAAb,0BAAoC,EAAK/J,MAAMxD,MAAMwN,OAAOjD,IAC9D+C,GAdI,OAgBRA,EAAiBhG,aAAeoE,GAAa4B,EAAiBhG,cAC9DgG,EAAiB9F,WAAakE,GAAa4B,EAAiB9F,YAC5D,EAAKnC,OAAOO,KAAK,uCAAwC0H,GACzD,EAAK9J,MAAMI,QAAQtB,KAAK,UAnBhB,kDAuBR8B,EAAc,EAAD,GAAM,EAAKZ,OAvBhB,0DApKZ,EAAKkB,MAAQ,CACThD,UAAWV,EAAMyC,WAAW/B,UAC5ByK,SAAU,GACVlK,WAAYjB,EAAMyC,WAAWxB,WAC7BsK,KAAM,KACN9D,OAAQ,CAAEyD,iBAAkB,GAAIG,iBAAkB,GAAIM,SAAU,GAAIE,kBAAmB,GAAIE,gBAAiB,GAAIE,WAAY,KATrG,EALnC,kMAsBYhL,EAAWqB,KAAKE,OAtB5B,oDAuBYK,EAAQP,KAAKE,OAvBzB,oDA0BQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WACpC,IAAMzE,EAAYV,EAAMyC,WAAW/B,UAC7BO,EAAajB,EAAMyC,WAAWxB,WACpC,EAAKmE,SAAS,CAAE1E,YAAWO,oBAM3BqB,KAAKoB,MAAMhD,UAAU6D,OAAS,GAtC1C,+BAuC0BjC,KAAKoB,MAAMhD,WAvCrC,IAuCY,4BAASe,EAA2B,SAC1BrC,cAAgBkD,KAAKE,MAAMxD,MAAMwN,OAAOjD,KAC1C4B,EAAQ,eAAS1J,IAzCrC,WAAAiH,EAAA,oEAkDoB7I,EAAa0C,IAAb,0BAAmDD,KAAKE,MAAMxD,MAAMwN,OAAOjD,KAlD/F,QAiDsBjG,EAjDtB,OAmDgB6H,EAAW7H,EAASC,KAnDpC,mDAuDgBH,EAAc,EAAD,GAAMd,KAAKE,OAvDxC,QA4DQ2I,EAAS7E,aAAe6D,EAAagB,EAAS7E,cAC9C6E,EAAS3E,WAAa2D,EAAagB,EAAS3E,YAC5ClE,KAAK8C,SAAS,CAAE+F,aA9DxB,qJAoKQ,IAAK,IAAM5C,KAAQjG,KAAKoB,MAAM+D,OAC1B,GAA2C,KAAvCnF,KAAKoB,MAAM+D,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,IAzKf,6CAyMyC,IAAD,IAChC,UAAAlG,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eA3MrB,+BA+MQ,OACI,yBAAKa,UAAU,gBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,6CACA,6BACA,kBAAC8I,GAAA,EAAKC,MAAN,CAAYC,UAAU,uBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAASnF,aAAe,GAAIyD,SAAUnH,KAAK8I,iBACvH,kBAACqB,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cAChBrB,KAAKoB,MAAM+D,OAAO4D,mBAI3B,kBAACoB,GAAA,EAAKC,MAAN,CAAYC,UAAU,uBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAASjF,aAAe,GAAIuD,SAAUnH,KAAK2I,iBACvH,kBAACwB,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cAChBrB,KAAKoB,MAAM+D,OAAOyD,mBAI3B,kBAACuB,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,qBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOiJ,KAAK,OAAOG,SAAUnH,KAAKgJ,gBAGzD,kBAACmB,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,mBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAAS7E,cAAgB,GAAImD,SAAUnH,KAAKsJ,kBACxH,kBAACa,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cAChBrB,KAAKoB,MAAM+D,OAAOoE,oBAI3B,kBAACY,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAAS3E,YAAc,GAAIiD,SAAUnH,KAAKwJ,gBACtH,kBAACW,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cAChBrB,KAAKoB,MAAM+D,OAAOsE,kBAI3B,kBAACU,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,cACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAAS1E,OAAS,GAAIgD,SAAUnH,KAAK0J,WACjH,kBAACS,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cAChBrB,KAAKoB,MAAM+D,OAAOwE,aAI3B,kBAAClI,EAAA,EAAD,CAAQ0B,QAAQ,UAAUpF,KAAK,SAASwJ,UAAWvH,KAAKgG,cAAetE,QAAS1B,KAAK4J,QAArF,gBAlQpB,GAAkCjI,aC7CrB6I,I,OAET,WACW1N,EACA8G,EACAF,EACAL,EACAW,EACAE,EACAC,EACAlG,EACAa,GAAqB,yBARrBhC,aAQoB,KAPpB8G,cAOoB,KANpBF,cAMoB,KALpBL,MAKoB,KAJpBW,eAIoB,KAHpBE,aAGoB,KAFpBC,QAEoB,KADpBlG,UACoB,KAApBa,aCuCF2L,GAAb,kDAII,WAAmBvK,GAAa,IAAD,8BAC3B,cAAMA,IAHF6B,YAEuB,IAuBvB4G,eAAiB,SAAC9D,GACtB,IACIC,EADElB,EAAciB,EAAKE,OAAOC,MAGhCF,EAAYyD,GAAoB3E,GAEhC,IAAMuB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOyD,iBAAmB9D,EAC1B,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASjF,YAAcA,EACvB,EAAKd,SAAS,CAAE+F,cAnCW,EAuCvBC,eAAiB,SAACjE,GACtB,IACIC,EADEpB,EAAcmB,EAAKE,OAAOC,MAIhCF,EAAY0D,GAAoB9E,GAEhC,IAAMyB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAO4D,iBAAmBjE,EAC1B,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASnF,YAAcA,EACvB,EAAKZ,SAAS,CAAE+F,cApDW,EAuDvBG,aAAe,SAACnE,GACpB,IAAMoE,EAAOpE,EAAKE,OAAOmE,MAAM,GAC/BxI,QAAQC,IAAI,UACZD,QAAQC,IAAIsI,GACRA,IACA,EAAKE,UAAUF,EAAKjC,MACpB,EAAKlE,SAAS,CAAEmG,WA7DO,EAkEvBE,UAAY,SAACC,GACjB,IAAM/F,EAAM+F,EAKZ,IAAMjE,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOkE,SHxFJ,GGyFH,EAAKvG,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAASxF,IAAMA,EACf,EAAKP,SAAS,CAAE+F,cA9EW,EAiFvBS,gBAAkB,SAACzE,GACvB,IAAMb,EAAea,EAAKE,OAAOC,MAKjC,IAAMG,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOoE,kBHnGJ,GGoGH,EAAKzG,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS7E,aAAeA,EACxB,EAAKlB,SAAS,CAAE+F,cA7FW,EAgGvBW,cAAgB,SAAC3E,GACrB,IAAMX,EAAaW,EAAKE,OAAOC,MAK/B,IAAMG,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOsE,gBH9GJ,GG+GH,EAAK3G,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS3E,WAAaA,EACtB,EAAKpB,SAAS,CAAE+F,cA5GW,EAgHvBa,SAAW,SAAC7E,GAChB,IACIC,EADEX,GAASU,EAAKE,OAAOC,MAI3BF,EAAY2D,GAActE,GAE1B,IAAMgB,EAAM,eAAQ,EAAK/D,MAAM+D,QAC/BA,EAAOwE,WAAa7E,EACpB,EAAKhC,SAAS,CAAEqC,WAEhB,IAAM0D,EAAQ,eAAQ,EAAKzH,MAAMyH,UACjCA,EAAS1E,MAAQA,EACjB,EAAKrB,SAAS,CAAE+F,cA7HW,EA6IvB6B,IA7IuB,sBA6IjB,kCAAAjK,EAAA,6DAEJoI,EAFI,eAEY,EAAKzH,MAAMyH,UAEjCnI,QAAQC,IAAI,mBACZD,QAAQC,IAAI,EAAKS,MAAM6H,OAEjBY,EAAW,IAAIC,UACZC,OAEL,OACA,EAAK3I,MAAM6H,MAXL,kBAmBA1L,EAAa6E,KAAW,gBAAiByH,EAAU,CACrDrM,QAAS,CACP,eAAgB,yBArBhB,wBA0BiBD,EAAa6E,KAAoB,iBACpDyG,GA3BE,QA0BA7H,EA1BA,QA4BA2J,EAAgB3J,EAASC,MAEjBhD,QAAU,EACxB0M,EAAc3G,aAAeoE,GAAauC,EAAc3G,cACxD2G,EAAczG,WAAakE,GAAauC,EAAczG,YAEtD,EAAKnC,OAAOO,KAAK,qCAAsCqI,GACvD,EAAKzK,MAAMI,QAAQtB,KAAK,UAnClB,kDAuCN8B,EAAc,EAAD,GAAM,EAAKZ,OAvClB,0DA1IV,EAAKkB,MAAQ,CACTyH,SAAU,IAAI2B,GACd7L,WAAYjB,EAAMyC,WAAWxB,WAC7BsK,KAAM,KACN9D,OAAQ,CAAEyD,iBAAkB,IAAKG,iBAAkB,IAAKM,SAAU,IAAKE,kBAAmB,IAAKE,gBAAiB,IAAKE,WAAY,MAP1G,EAJnC,6KAkBYhL,EAAWqB,KAAKE,OAlB5B,oDAmBYK,EAAQP,KAAKE,OAnBzB,iDAsBQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAtBxC,0IAsIQ,IAAK,IAAMiJ,KAAQjG,KAAKoB,MAAM+D,OAC1B,GAA2C,KAAvCnF,KAAKoB,MAAM+D,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,IA3If,6CA6LyC,IAAD,EAChC,UAAAlG,KAAK+B,cAAL,SAAavB,eA9LrB,+BAmMQ,OACI,yBAAKa,UAAU,gBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,4CACA,6BACA,kBAAC8I,GAAA,EAAKC,MAAN,CAAYC,UAAU,uBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAASnF,aAAe,GAAIyD,SAAUnH,KAAK8I,iBACvH,kBAACqB,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cACuB,MAAvCrB,KAAKoB,MAAM+D,OAAO4D,iBAA2B,GAAK/I,KAAKoB,MAAM+D,OAAO4D,mBAI7E,kBAACoB,GAAA,EAAKC,MAAN,CAAYC,UAAU,uBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAASjF,aAAe,GAAIuD,SAAUnH,KAAK2I,iBACvH,kBAACwB,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cACuB,MAAvCrB,KAAKoB,MAAM+D,OAAOyD,iBAA2B,GAAK5I,KAAKoB,MAAM+D,OAAOyD,mBAI7E,kBAACuB,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,qBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOiJ,KAAK,OAAOG,SAAUnH,KAAKgJ,gBAGzD,kBAACmB,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,mBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOiH,MAAOhF,KAAKoB,MAAMyH,SAAS7E,cAAgB,GAAImD,SAAUnH,KAAKsJ,kBACxF,kBAACa,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cACwB,MAAxCrB,KAAKoB,MAAM+D,OAAOoE,kBAA4B,GAAKvJ,KAAKoB,MAAM+D,OAAOoE,oBAI9E,kBAACY,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOiH,MAAOhF,KAAKoB,MAAMyH,SAAS3E,YAAc,GAAIiD,SAAUnH,KAAKwJ,gBACtF,kBAACW,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cACsB,MAAtCrB,KAAKoB,MAAM+D,OAAOsE,gBAA0B,GAAKzJ,KAAKoB,MAAM+D,OAAOsE,kBAI5E,kBAACU,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,GAAA,EAAKG,MAAN,cACA,kBAACH,GAAA,EAAKI,QAAN,CAAcxM,KAAK,OAAOmJ,YAAY,oBAAoBlC,MAAOhF,KAAKoB,MAAMyH,SAAS1E,OAAS,GAAIgD,SAAUnH,KAAK0J,WACjH,kBAACS,GAAA,EAAKxG,KAAN,CAAWtC,UAAU,cACiB,MAAjCrB,KAAKoB,MAAM+D,OAAOwE,WAAqB,GAAK3J,KAAKoB,MAAM+D,OAAOwE,aAIvE,kBAAClI,EAAA,EAAD,CAAQ0B,QAAQ,UAAUpF,KAAK,SAASwJ,UAAWvH,KAAKgG,cAAetE,QAAS1B,KAAK0K,KAArF,gBAtPpB,GAAiC/I,a,mBChB1B,IAAMiJ,GAAb,kDAKI,WAAmB1K,GAAa,IAAD,8BAC3B,cAAMA,IAJF6B,YAGuB,IAFvBD,sBAEuB,IAkEvB+I,iBAAmB,WACvB,IAAMC,EAAwB,GACxBC,EAAmB,GACnBC,EAAS,GAGftN,EAAMyC,WAAW/B,UAAUqB,SAAQ,SAAAN,GAC3BA,EAAElB,QAAU,IACZ6M,EAAsB9L,KAAKG,EAAEuE,aAC7BqH,EAAiB/L,KAAKG,EAAElB,SACxB+M,EAAOhM,KCnHhB,WACH,IAAMiM,EAAEC,KAAKC,MAAoB,IAAdD,KAAKE,UAClBC,EAAEH,KAAKC,MAAoB,IAAdD,KAAKE,UAClBE,EAAEJ,KAAKC,MAAoB,IAAdD,KAAKE,UAExB,MAAM,QAAN,OAAeH,EAAf,YAAoBI,EAApB,YAAyBC,EAAzB,SD8GwBC,QAIpB,EAAKzI,SAAS,CAAEgI,wBAAuBC,mBAAkBC,YA9EzD,EAAK5J,MAAQ,CACTzC,WAAYjB,EAAMyC,WAAWxB,WAC7BmM,sBAAuB,GACvBC,iBAAkB,GAClBC,OAAQ,IANe,EALnC,wLAkBYrM,EAAWqB,KAAKE,OAlB5B,oDAmBYK,EAAQP,KAAKE,OAnBzB,iDAsBQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WAEpC,IAAMlE,EAAajB,EAAMyC,WAAWxB,WACpC,EAAKmE,SAAS,CAAEnE,eAEbjB,EAAMyC,WAAW/B,UAAU6D,OAAO,GAAKvE,EAAMyC,WAAWlC,QAAQgE,OAAO,GACtE,EAAK4I,sBAIb7K,KAAKgC,mBAnCb,wQAyCY5D,EAAYV,EAAMyC,WAAW/B,UAC7BH,EAAUP,EAAMyC,WAAWlC,QA1CvC,SA8CqC,IAArBG,EAAU6D,OA9C1B,gCAgDoB1E,EAAa0C,IAAqB,kBAhDtD,OA+CsBe,EA/CtB,OAiDgB5C,EAAY4C,EAASC,KACrBvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWe,iBAAkBD,QAASE,IAlD7E,UAoDmC,IAAnBH,EAAQgE,OApDxB,kCAsDoB1E,EAAa0C,IAAmB,gBAtDpD,QAqDsBe,EArDtB,OAuDgB/C,EAAU+C,EAASC,KACnBvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWY,eAAgBE,QAASD,IAxD3E,QA2DYP,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWmC,wBA3D9C,yDA8DYuB,EAAc,EAAD,GAAMd,KAAKE,OA9DpC,2BAmEQF,KAAK6K,mBAnEb,6JA0FyC,IAAD,IAChC,UAAA7K,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eA5FrB,+BAiGQ,OAEI,yBAAKa,UAAU,WACX,kBAAC,EAAD,MACA,6BACA,kBAAC,OAAD,CACIJ,KACI,CACIuK,OAAQxL,KAAKoB,MAAM0J,sBACnBW,SAAU,CACN,CACIC,MAAO,UACPzK,KAAMjB,KAAKoB,MAAM2J,iBACjBY,gBAAiB3L,KAAKoB,MAAM4J,UAK5CY,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,EACbC,aAAc,SAAUP,EAAOQ,EAAOV,GAElC,GAAIN,KAAKC,MAAMO,KAAWA,EACtB,OAAOA,eA3HnD,GAA6B/J,aEMhBwK,I,OAAb,kDAKI,WAAmBjM,GAAa,IAAD,8BAC3B,cAAMA,IAJF4B,sBAGuB,IAFvBC,YAEuB,IAiCvBC,iBAjCuB,sBAiCJ,sCAAAvB,EAAA,2DAKnB,EAAKW,MAAMhD,UAAU6D,OAAS,GALX,8BAOL,EAAKb,MAAMhD,WAPN,IAOnB,4BAASe,EAA2B,SAC1BrC,cAAgB,EAAKoD,MAAMxD,MAAMwN,OAAOjD,KAC1C4B,EAAQ,eAAS1J,IATN,8EAkBX5B,EAAa0C,IAAb,0BAAmD,EAAKC,MAAMxD,MAAMwN,OAAOjD,KAlBhE,OAiBTjG,EAjBS,OAmBf6H,EAAW7H,EAASC,KAnBL,kDAuBfH,EAAc,EAAD,GAAM,EAAKZ,OAvBT,QA4BvB2I,EAAS7E,aAAe6D,EAAagB,EAAS7E,cAC9C6E,EAAS3E,WAAa2D,EAAagB,EAAS3E,YAC5C,EAAKpB,SAAS,CAAE+F,cAGVuD,EAjCiB,eAiCD,EAAKhL,MAAMgL,WACxBtP,WAAa+L,EAAS/L,WAC/BsP,EAASvP,SAAWa,EAAMyC,WAAWzB,KAAK7B,SAC1CuP,EAASC,eAAiBxD,EAAS1E,MACnC,EAAKrB,SAAS,CAAEsJ,aArCO,0DAjCI,EA0EvBE,mBAAqB,SAACzH,GAE1B,IAAMuH,EAAQ,eAAQ,EAAKhL,MAAMgL,UACjCA,EAASG,SAAW1H,EAAKE,OAAOC,MAChCoH,EAASI,WAAaJ,EAASG,QAAU,EAAKnL,MAAMyH,SAAS1E,MAE7D,EAAKrB,SAAS,CAAEsJ,cAhFW,EA6FvBK,KA7FuB,sBA6FhB,gCAAAhM,EAAA,6DACLiM,EAAU,IAAI3I,MAChBqI,EAFO,eAES,EAAKhL,MAAMgL,WACtBtE,KAAO4E,EAHL,kBAMgBnP,EAAa6E,KAAoB,iBACpDgK,GAPG,OAMDpL,EANC,OAQPoL,EAAWpL,EAASC,KACpB,EAAKc,OAAOO,KAAK,oCAAqC8J,GAEtD,EAAKlM,MAAMI,QAAQtB,KAAK,KAXjB,kDAeP8B,EAAc,EAAD,GAAM,EAAKZ,OAfjB,0DAzFX,EAAKkB,MAAQ,CACThD,UAAWV,EAAMyC,WAAW/B,UAC5BgO,SAAU,GACVvD,SAAU,GACVlK,WAAYjB,EAAMyC,WAAWxB,WAC7BwG,OAAQ,CAAEyD,iBAAkB,GAAIG,iBAAkB,GAAIM,SAAU,GAAIE,kBAAmB,GAAIE,gBAAiB,GAAIE,WAAY,KATrG,EALnC,wLAsBYhL,EAAWqB,KAAKE,OAtB5B,iDAyBQF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WACpC,IAAMzE,EAAYV,EAAMyC,WAAW/B,UACnC,EAAK0E,SAAS,CAAE1E,iBAGpB4B,KAAKgC,mBAjCb,0IA0FQ,QAAIhC,KAAKoB,MAAMgL,SAASI,YAAc,KA1F9C,6CAuHyC,IAAD,IAChC,UAAAxM,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eAzHrB,+BA6HQ,OACI,yBAAKa,UAAU,oBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,kBAAC2B,EAAA,EAAD,CAAM3B,UAAU,iBACZ,kBAAC2B,EAAA,EAAK2J,OAAN,KACI,yBAAKtL,UAAU,UACX,yBAAKA,UAAU,MAAMuL,IAAI,WAAWxJ,IAAG,UAAKrG,EAAOC,UAAZ,oCAAiDgD,KAAKoB,MAAMyH,SAASxF,OAC5G,0BAAMhC,UAAU,eAAerB,KAAKoB,MAAMyH,SAASnF,aAAe,MAG1E,kBAACV,EAAA,EAAKM,KAAN,KACI,kBAACN,EAAA,EAAKS,MAAN,qBACA,kBAACT,EAAA,EAAKW,KAAN,KACK3D,KAAKoB,MAAMyH,SAASjF,aAAe,IAExC,kBAACZ,EAAA,EAAKS,MAAN,uBACA,kBAACT,EAAA,EAAKW,KAAN,aACU,IAAII,KAAK/D,KAAKoB,MAAMyH,SAAS7E,cAAcC,eADrD,QAC0E,IAAIF,KAAK/D,KAAKoB,MAAMyH,SAAS3E,YAAYD,gBAEnH,kBAACjB,EAAA,EAAKS,MAAN,yBACA,kBAACT,EAAA,EAAKW,KAAN,KACK3D,KAAKoB,MAAMyH,SAAS1E,OAAS,GADlC,MAIJ,kBAACnB,EAAA,EAAK2J,OAAN,KACI,yCAEJ,kBAAC3J,EAAA,EAAKM,KAAN,KACI,kBAACN,EAAA,EAAKW,KAAN,2BACuB,2BAAO5F,KAAK,OAAO8O,QAAQ,SAASC,QAAS9M,KAAKsM,mBAAmBS,KAAK/M,MAAOgF,MAAOhF,KAAKoB,MAAMgL,SAASG,WAEnI,kBAACvJ,EAAA,EAAKW,KAAN,qBACkB3D,KAAKoB,MAAMgL,SAASI,YAAc,GADpD,KAGA,kBAACxJ,EAAA,EAAKW,KAAN,KACI,kBAAClC,EAAA,EAAD,CAAQ0B,QAAQ,UAAUpF,KAAK,SAASwJ,UAAWvH,KAAKgG,cAAetE,QAAS1B,KAAKyM,MAArF,gBAjKhC,GAA8B9K,c,mBCTjBqL,GAAb,kDAKI,WAAmB9M,GAAa,IAAD,8BAC3B,cAAMA,IAJF4B,sBAGuB,IAFvBC,YAEuB,IA+BvBkL,0BA/BuB,sBA+BK,kCAAAxM,EAAA,kEAKc,IAAtC/C,EAAMyC,WAAW/B,UAAU6D,OALH,gCAOpB1E,EAAa0C,IAAb,kBAPoB,OAMlBe,EANkB,OAQlB5C,EAAY4C,EAASC,KAC3BvD,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWe,iBAAkBD,QAASE,IATrC,UAYc,IAAtCV,EAAMyC,WAAW3B,UAAUyD,OAZH,kCAcpB1E,EAAa0C,IAAb,kBAdoB,QAalBe,EAbkB,QAelBxC,EAAYwC,EAASC,MAEjBxB,SAAQ,SAAAyN,GACdA,EAAErE,SAAWnL,EAAMyC,WAAW/B,UAAUqE,MAAK,SAAAtD,GAAC,OAAIA,EAAErC,aAAeoQ,EAAEpQ,iBAGzEY,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWmB,iBAAkBL,QAASM,IArBrC,0DA0B5BsC,EAAc,EAAD,GAAM,EAAKZ,OA1BI,0DA3BhC,EAAKkB,MAAQ,CACT5C,UAAWd,EAAMyC,WAAW3B,UAC5BG,WAAYjB,EAAMyC,WAAWxB,YANN,EALnC,gEAiBgC,IAAD,OAEnBA,EAAWqB,KAAKE,QAChBK,EAAQP,KAAKE,SAGjBF,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK8B,iBAAmBpE,EAAMmF,WAAU,WAEpC,IAAMrE,EAAYd,EAAMyC,WAAW3B,UACnC,EAAKsE,SAAS,CAAEtE,iBAGpBwB,KAAKiN,+BAhCb,6CAmEyC,IAAD,IAChC,UAAAjN,KAAK8B,wBAAL,cAAA9B,MACA,UAAAA,KAAK+B,cAAL,SAAavB,eArErB,+BA2EQ,OACI,yBAAKa,UAAU,aACX,kBAAC,EAAD,MAEA,yBAAKA,UAAU,mBACX,yCACA,6BACA,kBAAC8L,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,yCACA,iDACA,2CACA,wCACA,sCAGR,+BACKtN,KAAKoB,MAAM5C,UAAYwB,KAAKoB,MAAM5C,UAAUuE,KAAI,SAAAmK,GAAC,OAE9C,wBAAIjK,IAAKiK,EAAEK,YACP,4BAAKL,EAAErQ,UACP,4BAAKqQ,EAAEX,SACP,4BAAKW,EAAEV,WAAP,KACA,4BAAKU,EAAErE,SAASnF,aAChB,4BAAK,IAAIK,KAAKmJ,EAAEpF,MAAM7D,oBAG1B,WAvGhC,GAA+BtC,aCAlB6L,GAAb,kDAII,WAAmBtN,GAAa,IAAD,8BAC3B,cAAMA,IAHF6B,YAEuB,IAYvB0L,eAAiB,SAAAC,GAkBrB,OAhBKA,EAAIlQ,QAAJ,gBACDkQ,EAAIlQ,QAAJ,+BAAyCE,EAAMyC,WAAW7B,QAW9DoC,QAAQC,IAAI,wBACZD,QAAQC,IAAI+M,EAAIlQ,SAChBkD,QAAQC,IAAI,gBACZD,QAAQC,IAAI+M,GACLA,GA9BoB,EAiCvBC,eAAiB,SAAAC,GAGrB,OAFAlN,QAAQC,IAAI,OACZD,QAAQC,IAAIiN,GACLA,GApCoB,EAuCvBC,kBAvCuB,uCAuCH,WAAMC,GAAN,uBAAArN,EAAA,yDAMxBC,QAAQC,IAAR,OAAYmN,QAAZ,IAAYA,OAAZ,EAAYA,EAAKC,QACjBrN,QAAQC,IAAR,OAAYmN,QAAZ,IAAYA,OAAZ,EAAYA,EAAKC,OAAOC,KAGlBC,EAVkB,OAUJH,QAVI,IAUJA,OAVI,EAUJA,EAAKC,OAIH,uBAAf,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKC,OAAOC,MAAsD,2BAArB,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAK9M,gBAAL,eAAeC,OAA4D,oCAArB,OAAH6M,QAAG,IAAHA,GAAA,UAAAA,EAAK9M,gBAAL,eAAeC,MAdxF,iCAkBhBP,QAAQC,IAAI,WAlBI,SAmBOpD,EAAa0C,IAAI,qBAnBxB,cAmBVe,EAnBU,OAoBhBN,QAAQC,IAAI,iBACNuN,EAAiBlN,EAASC,KAAKuF,YACrC9I,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWiB,UAAWH,QAASgQ,IACtDD,EAAYzQ,QAAZ,+BAAiD0Q,GAvBjC,kBAwBT/Q,EAAM8Q,IAxBG,2DAoClBH,EApCkB,0DAvCG,sDAI+B,IAAvDvQ,EAAa4Q,aAAaC,QAA1B,SAA8CnM,SAC7C1E,EAAa4Q,aAAaC,QAAQC,IAAI,EAAKZ,gBAC3ClQ,EAAa4Q,aAAanN,SAASqN,IAAI,EAAKV,eAAe,EAAKE,oBANzC,EAJnC,gEAmFQnN,QAAQC,IAAI,yBAGZX,KAAK+B,OAASY,IAAGC,QAAQ7F,EAAOC,WAGhCgD,KAAK+B,OAAOuM,GAAG,wCAAwC,SAAAC,GAC/C7Q,EAAMyC,WAAW/B,UAAU6D,OAAS,GACpCvE,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWwB,gBAAiBV,QAASqQ,OAGpEvO,KAAK+B,OAAOuM,GAAG,8BAA8B,SAAAE,GACrC9Q,EAAMyC,WAAW/B,UAAU6D,OAAS,GACpCvE,EAAMmD,SAAS,CAAE9C,KAAMX,EAAW2B,eAAgBb,QAASsQ,OAGnExO,KAAK+B,OAAOuM,GAAG,gCAAgC,SAAAG,GACvC/Q,EAAMyC,WAAW/B,UAAU6D,OAAS,GACpCvE,EAAMmD,SAAS,CAAE9C,KAAMX,EAAW6B,kBAAmBf,QAASuQ,OAGtEzO,KAAK+B,OAAOuM,GAAG,4BAA4B,SAAAjM,GACnC3E,EAAMyC,WAAW/B,UAAU6D,OAAS,GAAKvE,EAAMyC,WAAWlC,QAAQgE,OAAS,IAC3EvE,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWgC,UAAWlB,QAASmE,IACtD3E,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWmC,wBAClC7B,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWsC,oBAI1CM,KAAK+B,OAAOuM,GAAG,8BAA8B,SAAA1R,GACrCc,EAAMyC,WAAW/B,UAAU6D,OAAS,GAAKvE,EAAMyC,WAAWlC,QAAQgE,OAAS,IAC3EvE,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWiC,aAAcnB,QAAStB,IACzDc,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWmC,wBAClC7B,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWsC,oBAI1CM,KAAK+B,OAAOuM,GAAG,8BAA8B,SAAClC,GACtC1O,EAAMyC,WAAW/B,UAAU6D,OAAS,GAAKvE,EAAMyC,WAAW3B,UAAUyD,OAAS,IAC7EmK,EAASvD,SAAWnL,EAAMyC,WAAW/B,UAAUqE,MAAK,SAAAtD,GAAC,OAAIA,EAAErC,aAAesP,EAAStP,cACnFY,EAAMmD,SAAS,CAAE9C,KAAMX,EAAWyC,YAAa3B,QAASkO,UA3HxE,6CAoIyC,IAAD,EAChC1L,QAAQC,IAAI,wBACZ,UAAAX,KAAK+B,cAAL,SAAavB,eAtIrB,+BA0IQ,OACI,yBAAKa,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIE,OAAK,EACLmF,KAAM,IACNgI,OAAQ,SAAAxO,GAAK,OACT,kBAAC,EAAD,iBACQA,EADR,CACe+C,IAAK,eAI5B,kBAAC,IAAD,CACI1B,OAAK,EACLmF,KAAM,SAAUzD,IAAK,QACrByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,gBAAiBzD,IAAK,eAC5ByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,gBAAiBzD,IAAK,WAC5ByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,GACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,aAAczD,IAAK,YACzByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,GACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,SAAUzD,IAAK,eACrByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,aAAczD,IAAK,MACzByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,GACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,aAAczD,IAAK,OACzByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,GACOA,MAIhB,kBAAC,IAAD,CACIqB,OAAK,EACLmF,KAAM,WAAYzD,IAAK,UACvByL,OAAQ,SAAAxO,GAAK,OACT,kBAAC,GACOA,aA3NxC,GAAyByB,aCxBzBgN,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,S1BgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtO,GACLL,QAAQK,MAAMA,EAAMuO,c","file":"static/js/main.0ea942ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export class FollowModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public followId?: number,\r\n        public userName?: string,\r\n        public vacationId?: number) {\r\n    }\r\n}\r\n\r\n","export class Config{\r\n\r\n    public static serverUrl;\r\n    public static captchaKey;\r\n\r\n    public static _initialize(){\r\n        if(process.env.NODE_ENV === \"production\"){\r\n            Config.serverUrl=\"https://itay-vacations.herokuapp.com\";\r\n        }\r\n\r\n        else{\r\n            Config.serverUrl=\"http://localhost:3000\";\r\n        }\r\n    }\r\n}\r\n\r\nConfig._initialize();","import axios from \"axios\";\r\nimport { Config } from \"../config\";\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: Config.serverUrl\r\n});\r\n\r\nexport const axiosPrivate = axios.create({\r\n        baseURL: Config.serverUrl,\r\n        headers: {\"Content-Type\":\"application/json\"},\r\n        withCredentials: true\r\n    });\r\n\r\n","export enum ActionType {\r\n    SaveAllVacations,\r\n    SaveAllFollows,\r\n    saveAllPurchases,\r\n    saveToken,\r\n    saveUser,\r\n    setFollowsPerVacation,\r\n    sortVacations,\r\n    saveOneVacation,\r\n    addOneVacation,\r\n    deleteOneVacation,\r\n    AddFollow,\r\n    RemoveFollow,\r\n    addPurchase\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { reduce } from \"./reducer\";\r\nimport { AppState } from \"./app-state\";\r\n\r\nexport const store = createStore(reduce, new AppState());\r\n\r\n","import { AppState } from \"./app-state\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./action-type\";\r\nexport function reduce(oldAppState: AppState, action: Action): AppState {\r\n\r\n    const newAppState = { ...oldAppState }; // Duplicate the old state into a new state.\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case ActionType.SaveAllFollows:\r\n            newAppState.follows = action.payload;\r\n            break;\r\n\r\n        case ActionType.SaveAllVacations:\r\n            newAppState.vacations = action.payload;\r\n            break;\r\n\r\n        case ActionType.saveToken:\r\n            newAppState.token = action.payload;\r\n            break;\r\n\r\n        case ActionType.saveAllPurchases:\r\n            newAppState.purchases = action.payload;\r\n            break;\r\n\r\n        case ActionType.saveUser:\r\n            newAppState.user = action.payload;\r\n            newAppState.isLoggedIn = action.payload? true : false;\r\n            break;\r\n\r\n        case ActionType.saveOneVacation:\r\n\r\n            for (let i in newAppState.vacations) {\r\n                if (newAppState.vacations[i].vacationId === action.payload.vacationId) {\r\n                    const follows = newAppState.vacations[i].follows;\r\n                    const isFollow = newAppState.vacations[i].isFollow;\r\n                    newAppState.vacations[i] = action.payload;\r\n                    newAppState.vacations[i].follows = follows;\r\n                    newAppState.vacations[i].isFollow = isFollow;\r\n\r\n                }\r\n            }\r\n\r\n            break;\r\n\r\n        case ActionType.addOneVacation:\r\n            newAppState.vacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.deleteOneVacation:\r\n            // for(let i in newAppState.vacations){\r\n            newAppState.vacations = newAppState.vacations.filter(v => v.vacationId !== action.payload );\r\n            break;\r\n\r\n        case ActionType.AddFollow:\r\n            newAppState.follows.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.RemoveFollow:\r\n            // for(let i in newAppState.vacations){\r\n            newAppState.follows = newAppState.follows.filter(f =>  f.followId !== action.payload );\r\n            break;\r\n\r\n        case ActionType.setFollowsPerVacation:\r\n            //add per vacation number of followers and if the user is following\r\n            let counter = 0;\r\n            newAppState.vacations.forEach((v) => {\r\n                v.isFollow = false;\r\n                newAppState.follows.forEach((f) => {\r\n                    if (f.vacationId === v.vacationId) {\r\n                        counter++;\r\n                        if (f.userName === newAppState.user.userName) {\r\n                            v.isFollow = true;\r\n                        }\r\n                    }\r\n                });\r\n                v.follows = counter;\r\n                counter = 0;\r\n            });\r\n            break;\r\n\r\n\r\n        case ActionType.sortVacations:\r\n            //sort array by followed vacations first\r\n            const isFollow = newAppState.vacations.filter((v) => v.isFollow === true);\r\n            const isNotFollow = newAppState.vacations.filter((v) => v.isFollow === false);\r\n            newAppState.vacations = isFollow.concat(isNotFollow);\r\n\r\n            break;\r\n\r\n        case ActionType.addPurchase:\r\n            newAppState.purchases.push(action.payload);\r\n            break;\r\n\r\n        default: break;\r\n    }\r\n\r\n    return newAppState;\r\n}","import { PurchaseModel } from './../models/purchase-model';\r\nimport { VacationModel } from \"../models/vacation-model\";\r\nimport { FollowModel } from \"../models/follow-model\";\r\nimport { UserModel } from \"../models/user-model\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport class AppState {\r\n    \r\n    public vacations: VacationModel[];\r\n    public follows: FollowModel[];\r\n    public purchases: PurchaseModel[];\r\n    public user: UserModel;\r\n    public token: string;\r\n    public isLoggedIn: boolean;\r\n\r\n    public constructor() {\r\n        const cookies = new Cookies();\r\n\r\n        this.vacations = [];\r\n        this.follows=[];\r\n        this.purchases=[];\r\n\r\n        this.user=cookies.get('user');\r\n        this.isLoggedIn= this.user? true :false;\r\n\r\n        this.token=null;\r\n    }\r\n}","// import axios, { AxiosError } from \"axios\";\r\nimport { AxiosError } from \"axios\";\r\nimport axios from \"../api/axios\";\r\nimport privateAxios from \"../api/axios\";\r\nimport { store } from \"../redux/store\";\r\nimport { ActionType } from \"../redux/action-type\";\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\nexport async function refreshToken() {\r\n    try {\r\n        const response = await privateAxios.get(\"/api/auth/refresh\", { withCredentials: true });\r\n        store.dispatch({ type: ActionType.saveToken, payload: response.data.accessToken });\r\n        return response.data;\r\n    }\r\n\r\n    catch (error) {\r\n        if ((error as AxiosError).response?.data === \"Your login session has expired\") {\r\n            console.log(\"Your login session has expired\");\r\n            return;\r\n        }\r\n\r\n        else {\r\n            console.log(\"refresh err\");\r\n            alert((error as AxiosError).response?.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport function isLoggedIn(props): boolean {\r\n    //if not loggedIn, navigate to the login page\r\n    if (!store.getState().isLoggedIn) {\r\n        if(props.location.pathname!==\"/\")\r\n            alert(\"Error: You are not logged-in\");\r\n        props.history.push(\"/login\");\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function isAdmin(props): boolean {\r\n    //if user is not admin, navigate to the Home page\r\n    if (!store.getState().user?.isAdmin) {\r\n        alert(\"Error: You are not admin\");\r\n        props.history.push(\"/\");\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport async function disconnect() {\r\n    try {\r\n        console.log(\"disconnect\");\r\n        await axios.get(\"/api/auth/logout\", { withCredentials: true });\r\n        const cookies = new Cookies();\r\n        cookies.remove('user');\r\n\r\n        store.dispatch({ type: ActionType.saveUser, payload: null });\r\n        store.dispatch({ type: ActionType.saveToken, payload: null });\r\n\r\n    } catch (error) {\r\n        alert(error);\r\n    }\r\n}\r\n\r\nexport async function errorHandling(error, props) {\r\n\r\n    if (!error) return;\r\n\r\n    if (error === \"Error: Network Error\") {\r\n        alert(error);\r\n        return;\r\n    }\r\n\r\n    if ((error as AxiosError).response?.data === \"You are not logged-in\") {\r\n        await disconnect();\r\n        alert(\"Error: You are not logged-in\");\r\n        props.history.push(\"/login\");\r\n        return;\r\n    }\r\n\r\n    if ((error as AxiosError).response?.data === \"Your login session has expired\") {\r\n        await disconnect();\r\n        alert(\"Error: Your login session has expired\");\r\n        props.history.push(\"/login\");\r\n        return;\r\n    }\r\n\r\n    if ((error as AxiosError).response?.data === \"You are not admin!\") {\r\n        await disconnect();\r\n        alert(\"Error: You are not admin!\");\r\n        props.history.push(\"/login\");\r\n        return;\r\n    }\r\n\r\n    if ((error as AxiosError).response?.data === \"Illegal username or password\") {\r\n        alert(\"Error: Illegal username or password\");\r\n        return;\r\n    }\r\n\r\n\r\n    alert((error as AxiosError).response?.data);\r\n\r\n}","import React, { Component } from \"react\";\r\nimport \"./navBar.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserModel } from \"../../models/user-model\";\r\nimport { store } from \"../../redux/store\";\r\nimport { disconnect } from \"../../services/auth\"\r\nimport { withRouter } from 'react-router-dom';\r\n\r\ninterface userState {\r\n    user: UserModel\r\n}\r\n\r\n\r\nclass NavBar extends Component<any, userState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: store.getState().user\r\n        }\r\n    }\r\n\r\n    private logOut =async () => {\r\n        await disconnect();\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"nav-bar\">\r\n                <div className=\"nav-container\">\r\n                    <nav>\r\n                        {this.state.user?.isAdmin ? (\r\n                            <ul>\r\n                                <li>\r\n                                    <NavLink to=\"/\" exact>Home</NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/admin\" exact> Edit Vacation </NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/admin/add\" exact> Add Vacation</NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/purchases\" exact> Purchases</NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/reports\" exact> Reports </NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        ) :\r\n                            <ul>\r\n                                <li>\r\n                                    <NavLink to=\"/\" exact>Home</NavLink>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        }\r\n                        <div className=\"user\">\r\n                            <div> Hello {this.state.user?.firstName} </div>\r\n\r\n                            <div>\r\n                                <Button onClick={this.logOut}>Log out</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </nav>\r\n\r\n                </div>\r\n                <div className=\"space\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar);","import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport { FollowModel } from \"../../models/follow-model\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//components\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { StarFill } from 'react-bootstrap-icons';\r\nimport NavBar from \"../nav-bar/navBar\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//services\r\nimport { errorHandling, isLoggedIn } from \"../../services/auth\"\r\n\r\n\r\ninterface VacationsState {\r\n    vacations: VacationModel[];\r\n    follows: FollowModel[];\r\n    isLoggedIn: boolean; //for listener event\r\n}\r\n\r\nexport class Home extends Component<any, VacationsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations and follows from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            follows: store.getState().follows,\r\n            isLoggedIn: store.getState().isLoggedIn\r\n        };\r\n\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        if (!isLoggedIn(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations and the follows from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            const follows = store.getState().follows;\r\n            const isLoggedIn = store.getState().isLoggedIn;\r\n            this.setState({ vacations, follows, isLoggedIn });\r\n        });\r\n\r\n        //if the store is empty, get the data with ajax\r\n        this.getComponentData();\r\n\r\n    }\r\n\r\n    private getComponentData = async () => {\r\n\r\n        try {\r\n            if (store.getState().vacations.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<VacationModel[]>(\"/api/vacations\");\r\n                const vacations = response.data;\r\n                store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n            }\r\n\r\n            if (store.getState().follows.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<FollowModel[]>(\"/api/follows\");\r\n                const follows = response.data;\r\n                store.dispatch({ type: ActionType.SaveAllFollows, payload: follows });\r\n                store.dispatch({ type: ActionType.setFollowsPerVacation });\r\n                store.dispatch({ type: ActionType.sortVacations });\r\n            }\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n\r\n    }\r\n\r\n    //add a follow for vacation in the database, and emit\r\n    private addFollow = async (vacationId) => {\r\n        const followToAdd = new FollowModel();\r\n        followToAdd.userName = store.getState().user.userName;\r\n        followToAdd.vacationId = vacationId;\r\n\r\n        try {\r\n            const response = await axiosPrivate.post<FollowModel>(\"/api/follows\", followToAdd);\r\n            if (response.data) {\r\n                const followAdded = response.data;\r\n                this.socket.emit(\"user-added-a-follow-from-client\", followAdded);\r\n            }\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    //remove a follow for vacation in the database, and emit\r\n    private removeFollow = async (vacationId) => {\r\n\r\n        const userName = store.getState().user.userName;\r\n\r\n        const followToRemove = this.state.follows.find(f => {\r\n            return f.userName === userName && f.vacationId === vacationId\r\n        });\r\n\r\n        try {\r\n            await axiosPrivate.delete(`/api/follows/${followToRemove.followId}`);\r\n            this.socket.emit(\"user-removed-a-follow-from-client\", followToRemove.followId);\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        return (\r\n            <div className=\"home\">\r\n                <NavBar />\r\n                <div className=\"card-container\">\r\n                    {this.state.vacations.map(v =>\r\n\r\n\r\n                        <Card key={v.vacationId}>\r\n                            <div className=\"zoom-effect-container\">\r\n                                <div className=\"image-card\">\r\n                                    <Card.Img variant=\"top\" className=\"img\" src={Config.serverUrl + \"/assets/images/vacations/\" + v.img} />\r\n                                </div>\r\n                            </div>\r\n                            <Card.Body>\r\n                                {v.isFollow ? <StarFill className=\"star-fill\" color=\"yellow\" size={\"1.5rem\"} onClick={() => this.removeFollow(v.vacationId)} /> : <StarFill className=\"star-fill\" color=\"grey\" size={\"1.5rem\"} onClick={() => this.addFollow(v.vacationId)} />}\r\n\r\n                                <Card.Title>{v.destination}</Card.Title>\r\n                                <Card.Text>\r\n                                    {v.description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem>Follows: {v.follows}</ListGroupItem>\r\n                                <ListGroupItem>Start: {new Date(v.startingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>end: {new Date(v.endingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>Cost: {v.price}$</ListGroupItem>\r\n                                <ListGroupItem><NavLink className=\"purchase\" to={\"/purchase/\" + v.vacationId} exact> purchase </NavLink></ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nexport class UserModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public firstName?: string,\r\n        public lastName?: string,\r\n        public userName?: string,\r\n        public password?: string,\r\n        public isAdmin?: boolean,\r\n        public captchaToken?: string\r\n        ) {\r\n    }\r\n}\r\n","export function validateAvailableUserName(userName,usersNames){\r\n    let error=\"\";\r\n    usersNames.forEach(user=>{\r\n        if(userName===user.userName){\r\n            error=\"user name is not available\";\r\n        }\r\n    });\r\n    return error;\r\n}\r\n\r\nexport function validateUserName(userName){\r\n\r\n    if (userName === \"\") {\r\n        return \"Missing user name\";\r\n    }\r\n\r\n    else if(userName.length < 2){\r\n        return \"User name too short\";\r\n    }\r\n\r\n    else if (userName.length > 15) {\r\n        return \"User name too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateFirstName(firstName){\r\n    if (firstName === \"\") {\r\n        return \"Missing first name\";\r\n    }\r\n\r\n    else if(firstName.length < 2){\r\n        return  \"first name is too short\";\r\n    }\r\n    \r\n    else if (firstName.length > 10) {\r\n        return  \"first name is too long\";\r\n    }\r\n\r\n    else if(!('A'<=firstName[0] && firstName[0] <='Z')){\r\n        return  \"first name must start with a capital letter\";\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateLastName(lastName){\r\n    if (lastName === \"\") {\r\n        return  \"Missing last name\";\r\n    }\r\n\r\n    else if(lastName.length < 2){\r\n        return  \"last name is too short\";\r\n    }\r\n    \r\n    else if (lastName.length > 10) {\r\n        return  \"last name is too long\";\r\n    }\r\n\r\n    else if(!('A'<=lastName[0] && lastName[0] <='Z')){\r\n        return  \"first name must start with a capital letter\";\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\n\r\n\r\nexport function validatePassword(password){\r\n    if (password === \"\") {\r\n        return \"Missing password\";\r\n    }\r\n\r\n    else if(password.length < 6){\r\n        return \"password is too short\";\r\n    }\r\n    \r\n    else if (password.length > 10) {\r\n        return \"password is too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport function verifyPassword(verifyPassword,password){\r\n    if(verifyPassword===\"\"){\r\n        return \"Missing verified password\";\r\n    }\r\n    else if (verifyPassword !== password) {\r\n        return \"verify password\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\n// export function verifyCarpatcha(verifyCarpatcha){\r\n//     if(verifyCarpatcha===\"\"){\r\n//         return \"Missing carpatcha\";\r\n//     }\r\n\r\n//     return \"\";\r\n// }","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./registration.css\";\r\n\r\n//server\r\nimport axios from \"../../api/axios\";\r\nimport { Config } from \"../../config\";\r\n\r\n//models\r\nimport { UserModel } from \"../../models/user-model\";\r\n\r\n//components\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//validation\r\nimport {\r\n    validateAvailableUserName,\r\n    validateUserName,\r\n    validateFirstName,\r\n    validateLastName,\r\n    validatePassword,\r\n    verifyPassword\r\n}\r\n    from \"../../services/user-validation\";\r\n\r\n//store\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//services\r\nimport { errorHandling } from \"../../services/auth\"\r\nimport Cookies from 'universal-cookie';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\n\r\n\r\n\r\ninterface UserState {\r\n    user: UserModel;\r\n    usersNames: UserModel[];\r\n    captchaIsVerified: boolean;\r\n    errors: {\r\n        userNameError: string,\r\n        firstNameError: string,\r\n        lastNameError: string,\r\n        passwordError: string,\r\n        captcha: string,\r\n        verifyPasswordError: string\r\n    };\r\n}\r\n\r\nexport class Registration extends Component<any, UserState>{\r\n\r\n    private recaptchaRef: ReCAPTCHA;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: new UserModel(),\r\n            usersNames: [],\r\n            captchaIsVerified: false,\r\n            errors: { userNameError: \"*\", firstNameError: \"*\", lastNameError: \"*\", passwordError: \"*\", verifyPasswordError: \"*\", captcha: \"\" }\r\n        };\r\n\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        console.log(process.env, \"env\");\r\n\r\n        //if the user is logged in, navigate to home page\r\n        if (store.getState().user) {\r\n            this.props.history.push(\"/\");\r\n            return;\r\n        }\r\n\r\n        this.getAllUsersNames();\r\n\r\n    }\r\n\r\n    private async getAllUsersNames() {\r\n        try {\r\n            const response = await axios.get<UserModel[]>(\"/api/auth/usersNames\");\r\n            const usersNames = response.data;\r\n\r\n            this.setState({ usersNames });\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = args.target.value;\r\n\r\n        let nameError;\r\n\r\n        nameError = validateAvailableUserName(userName, this.state.usersNames);\r\n        if (nameError !== \"user name is not available\") {\r\n            nameError = validateUserName(userName);\r\n        }\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.userNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.userName = userName;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private setFirstName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const firstName = args.target.value;\r\n\r\n        let nameError = validateFirstName(firstName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.firstNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.firstName = firstName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setLastName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const lastName = args.target.value;\r\n\r\n        let nameError = validateLastName(lastName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.lastNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.lastName = lastName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n\r\n        let nameError = validatePassword(password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.passwordError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.password = password;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private verifyPasswordUser = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const verifiedPassword = args.target.value;\r\n        const user = { ...this.state.user };\r\n\r\n        let nameError = verifyPassword(verifiedPassword, user.password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.verifyPasswordError = nameError;\r\n        this.setState({ errors });\r\n    }\r\n\r\n    private isFormLegal = () => {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private register = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            const token = await this.recaptchaRef.executeAsync();\r\n            console.log(token);\r\n\r\n            this.recaptchaRef.reset();\r\n\r\n\r\n            const user = { ...this.state.user };\r\n            user.captchaToken=token;\r\n\r\n            const response = await axios.post(\"/api/auth/register\",\r\n                user, { withCredentials: true });\r\n\r\n            store.dispatch({ type: ActionType.saveUser, payload: response.data.user });\r\n            store.dispatch({ type: ActionType.saveToken, payload: response.data.accessToken });\r\n\r\n            const cookies = new Cookies();\r\n            cookies.set('user', response.data.user, { path: '/', maxAge: 24 * 60 * 60 });\r\n\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n\r\n            <div className=\"registration\">\r\n                <div className=\"card-registration\">\r\n                    <h1>Sign up</h1>\r\n                    <form action=\"\">\r\n                        <div className=\"input-box\">\r\n                            <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"User Name\" onChange={this.setUserName} />\r\n                            <span className=\"error\">{this.state.errors.userNameError === \"*\" ? \"\" : this.state.errors.userNameError}</span>\r\n                        </div>\r\n                        <div className=\"input-box\">\r\n                            <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"First Name\" onChange={this.setFirstName} />\r\n                            <span className=\"error\">{this.state.errors.firstNameError === \"*\" ? \"\" : this.state.errors.firstNameError}</span>\r\n                        </div>\r\n                        <div className=\"input-box\">\r\n                            <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"Last Name\" onChange={this.setLastName} />\r\n                            <span className=\"error\">{this.state.errors.lastNameError === \"*\" ? \"\" : this.state.errors.lastNameError}</span>\r\n                        </div>\r\n                        <div className=\"input-box\">\r\n                            <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Password\" onChange={this.setPassword} />\r\n                            <span className=\"error\">{this.state.errors.passwordError === \"*\" ? \"\" : this.state.errors.passwordError}</span>\r\n                        </div>\r\n                        <div className=\"input-box\">\r\n                            <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Verify Password\" onChange={this.verifyPasswordUser} />\r\n                            <span className=\"error\">{this.state.errors.verifyPasswordError === \"*\" ? \"\" : this.state.errors.verifyPasswordError}</span>\r\n                        </div>\r\n                        <ReCAPTCHA\r\n                            sitekey={process.env.REACT_APP_CAPTCHA_SITE_KEY}\r\n                            size=\"invisible\"\r\n                            ref={domObject => this.recaptchaRef = domObject}\r\n                        />\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.register}>Sign up</Button>\r\n\r\n                    </form>\r\n                    <NavLink className=\"navigate\" to=\"/login\" exact>Do you have an account? <br /> Sign in now</NavLink>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./login.css\";\r\n\r\n//server\r\n// import axios from \"../../api/axios\";\r\nimport {axiosPrivate} from \"../../api/axios\";\r\n\r\n//models\r\nimport { UserModel } from \"../../models/user-model\";\r\n\r\n//validation\r\nimport { validateUserName, validatePassword } from \"../../services/user-validation\";\r\n\r\n//components\r\nimport Button from 'react-bootstrap/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//services\r\nimport Cookies from 'universal-cookie';\r\nimport { errorHandling } from \"../../services/auth\"\r\n\r\n//store\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n\r\ninterface UserState {\r\n    user: UserModel;\r\n    errors: {\r\n        userNameError: string,\r\n        passwordError: string,\r\n    };\r\n}\r\n\r\nexport class Login extends Component<any, UserState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: new UserModel(),\r\n            errors: { userNameError: \"*\", passwordError: \"*\" }\r\n\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        //if the user is logged in, navigate to Home page\r\n        if (store.getState().user) {\r\n            this.props.history.push(\"/\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = args.target.value;\r\n\r\n        let nameError = validateUserName(userName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.userNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.userName = userName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n\r\n        let nameError = validatePassword(password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.passwordError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.password = password;\r\n        this.setState({ user });\r\n    }\r\n\r\n    //check if the form is legal\r\n    private isFormLegal = () => {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    private login = async (e) => {\r\n\r\n        try {\r\n            e.preventDefault();\r\n            const response = await axiosPrivate.post(\"/api/auth/login\",\r\n                this.state.user, { withCredentials: true });\r\n\r\n            store.dispatch({ type: ActionType.saveUser, payload: response.data.user });\r\n            store.dispatch({ type: ActionType.saveToken, payload: response.data.accessToken });\r\n\r\n            const cookies = new Cookies();\r\n            cookies.set('user', response.data.user, { path: '/', maxAge: 24 * 60 * 60 });\r\n\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"card-login\">\r\n                    <form className=\"form-login\" onSubmit={this.login}>\r\n                        <h1>Login</h1>\r\n                        <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"User Name\" onChange={this.setUserName} />\r\n                        <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Password\" onChange={this.setPassword} />\r\n                        <br />\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} >\r\n                            Login\r\n                        </Button >\r\n                    </form>\r\n                    <NavLink className=\"navigate\" to=\"/registration\" exact>Not a member? Sign up now</NavLink>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./admin.css\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//components\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { Pencil } from 'react-bootstrap-icons';\r\nimport NavBar from \"../nav-bar/navBar\";\r\n\r\n//services\r\nimport { errorHandling, isLoggedIn, isAdmin } from \"../../services/auth\"\r\n\r\n\r\n\r\ninterface VacationsState {\r\n    vacations: VacationModel[];\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nexport class Admin extends Component<any, VacationsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            isLoggedIn: store.getState().isLoggedIn\r\n        };\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        if(!isLoggedIn(this.props)) return;\r\n        if(!isAdmin(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            this.setState({ vacations });\r\n        });\r\n\r\n\r\n        // if the store is not empty, cancel the function and don't use axios\r\n        if (this.state.vacations.length > 0) {\r\n            return;\r\n        }\r\n\r\n        //if the store is empty, get the data with ajax\r\n        this.getDataWithAjax();\r\n\r\n    }\r\n\r\n    //function for getting the vacations with ajax and save in the store\r\n    private getDataWithAjax = async () => {\r\n        try {\r\n            const response = await\r\n                axiosPrivate.get<VacationModel[]>(\"/api/vacations\");\r\n            const vacations = response.data;\r\n            store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n\r\n    //delete a vacation from the database and the store, and emit\r\n    private async delete(vacationId) {\r\n        try {\r\n            await axiosPrivate.delete(`/api/vacations/${vacationId}`);\r\n            this.socket.emit(\"Admin-removed-a-vacation-from-client\", vacationId);\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <NavBar />\r\n                <div className=\"card-container\">\r\n                    {this.state.vacations.map(v =>\r\n\r\n                        <Card key={v.vacationId}>\r\n                            <div className=\"zoom-effect-container\">\r\n                                <div className=\"image-card\">\r\n                                    <Card.Img variant=\"top\" className=\"img\" src={Config.serverUrl + \"/assets/images/vacations/\" + v.img} />\r\n                                </div>\r\n                            </div>\r\n                            <Card.Body>\r\n                                <X className=\"delete\" color=\"black\" size={\"1.5rem\"} onClick={() => this.delete(v.vacationId)} />\r\n                                <NavLink to={\"/admin/\" + v.vacationId}>\r\n                                    <Pencil color=\"black\" size={\"1.5rem\"} />\r\n                                </NavLink>\r\n                                <Card.Title>{v.destination}</Card.Title>\r\n                                <Card.Text>\r\n                                    {v.description}\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem>Start: {new Date(v.startingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>end: {new Date(v.endingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>Cost: {v.price}$</ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    )}\r\n                </div>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","export function JsonToString(date){\r\n    const d=new Date(date);\r\n    d.setDate(d.getDate()+1);\r\n    const stringDate=d.toISOString();\r\n    const arr=stringDate.split(\"T\");\r\n   return arr[0];\r\n   \r\n}\r\n\r\nexport function StringToJson(date){\r\n    const d=new Date(date);\r\n    d.setDate(d.getDate()-1);\r\n    d.setHours(24);\r\n    const stringDate=d.toJSON();\r\n    return stringDate;\r\n}","\r\nexport function validateDescription(description){\r\n\r\n    if (description === \"\") {\r\n        return \"Missing description\";\r\n    }\r\n\r\n    else if(description.length < 3){\r\n        return \"Description is too short\";\r\n    }\r\n\r\n    else if (description.length > 200) {\r\n        return \"Description is too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateDestination(destination){\r\n    if (destination === \"\") {\r\n        return \"Missing destination\";\r\n    }\r\n\r\n    else if(destination.length < 2){\r\n        return  \"Destination is too short\";\r\n    }\r\n    \r\n    else if (destination.length > 30) {\r\n        return  \"Destination is too long\";\r\n    }\r\n\r\n    else if(!('A'<=destination[0] && destination[0] <='Z')){\r\n        return  \"Destination must start with a capital letter\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateImgUrl(img){\r\n    return \"\";\r\n}\r\n\r\nexport function validateStartingDate(date){\r\n    return \"\";\r\n}\r\n\r\nexport function validateEndingDate(date){\r\n    return \"\";\r\n\r\n}\r\n\r\n\r\n\r\nexport function validatePrice(price){\r\n\r\n    if (!price) {\r\n        return \"Missing price\";\r\n    }\r\n\r\n    else if(price < 0){\r\n        return \"Price can't be negative\";\r\n    }\r\n    \r\n    else if (price > 50000) {\r\n        return \"Price is too high\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./editVacation.css\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\n\r\n//services\r\nimport { JsonToString } from \"../../services/date\";\r\nimport { StringToJson } from \"../../services/date\";\r\nimport { errorHandling, isLoggedIn, isAdmin } from \"../../services/auth\"\r\n\r\n//validations\r\nimport { validateDescription, validateDestination, validateImgUrl, validateStartingDate, validateEndingDate, validatePrice } from \"../../services/vacation-validation\";\r\n\r\n//components\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport NavBar from \"../nav-bar/navBar\";\r\n\r\n//server\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\nimport {axiosPrivate} from \"../../api/axios\";\r\n\r\n\r\n\r\ninterface VacationState {\r\n    vacations: VacationModel[];\r\n    vacation: VacationModel;\r\n    isLoggedIn: boolean; //for listener event\r\n    file: any;\r\n    errors: {\r\n        descriptionError: string,\r\n        destinationError: string,\r\n        imgError: string,\r\n        startingDateError: string,\r\n        endingDateError: string,\r\n        priceError: string\r\n    };\r\n}\r\n\r\nexport class EditVacation extends Component<any, VacationState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations and login status from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            vacation: {},\r\n            isLoggedIn: store.getState().isLoggedIn,\r\n            file: null,\r\n            errors: { descriptionError: \"\", destinationError: \"\", imgError: \"\", startingDateError: \"\", endingDateError: \"\", priceError: \"\" }\r\n        };\r\n\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        if(!isLoggedIn(this.props)) return;\r\n        if(!isAdmin(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            const isLoggedIn = store.getState().isLoggedIn;\r\n            this.setState({ vacations, isLoggedIn });\r\n        });\r\n\r\n        let vacation;\r\n\r\n        //if the store is not empty, find the vacation for edit and don't use axios at all\r\n        if (this.state.vacations.length > 0) {\r\n            for (let v of this.state.vacations) {\r\n                if (v.vacationId === +this.props.match.params.id) {\r\n                    vacation = ({ ...v });\r\n                }\r\n            }\r\n        }\r\n\r\n        // if the store is empty, get the vacation for edit with axios\r\n        else {\r\n            try {\r\n                const response = await\r\n                    axiosPrivate.get<VacationModel>(`/api/vacations/${+this.props.match.params.id}`);\r\n                vacation = response.data;\r\n            }\r\n\r\n            catch (err) {\r\n                errorHandling(err, this.props);\r\n            }\r\n        }\r\n\r\n        //treatment with json date format\r\n        vacation.startingDate = JsonToString(vacation.startingDate);\r\n        vacation.endingDate = JsonToString(vacation.endingDate);\r\n        this.setState({ vacation });\r\n    }\r\n\r\n\r\n    //get the data from inputs to the state\r\n    public setDescription = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const description = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDescription(description);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.descriptionError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.description = description;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    public setDestination = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const destination = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDestination(destination);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.destinationError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.destination = destination;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private onFileChange = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const file = args.target.files[0];\r\n        this.setImgUrl(file.name);\r\n        this.setState({ file });\r\n    }\r\n\r\n    private setImgUrl = (fileName: string) => {\r\n        const img = fileName;\r\n        let nameError;\r\n\r\n        nameError = validateImgUrl(img);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.imgError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.img = img;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    public setStartingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const startingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateStartingDate(startingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.startingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.startingDate = startingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    public setEndingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const endingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateEndingDate(endingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.endingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.endingDate = endingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const price = +args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validatePrice(price);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.priceError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.price = price;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private isFormLegal() {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public update = async () => {\r\n        try {\r\n            \r\n            if (this.state.file){\r\n                const formData = new FormData();\r\n                formData.append(\r\n                    \"file\",\r\n                    this.state.file\r\n                );\r\n                await axiosPrivate.post(\"/upload-image\", formData);\r\n            }\r\n\r\n            const vacationToUpdate = { ...this.state.vacation }\r\n            await axiosPrivate.put(`/api/vacations/${+this.props.match.params.id}`,\r\n                vacationToUpdate);\r\n\r\n            vacationToUpdate.startingDate = StringToJson(vacationToUpdate.startingDate);\r\n            vacationToUpdate.endingDate = StringToJson(vacationToUpdate.endingDate);\r\n            this.socket.emit(\"Admin-updated-a-vacation-from-client\", vacationToUpdate);\r\n            this.props.history.push(\"/admin\");\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"EditVacation\">\r\n                <NavBar />\r\n                <div className=\"form-container\">\r\n                    <h1>Edit Vacation</h1>\r\n                    <br />\r\n                    <Form.Group controlId=\"formTextDestination\">\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.destination || \"\"} onChange={this.setDestination} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.destinationError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formTextDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.description || \"\"} onChange={this.setDescription} />\r\n                        <Form.Text className=\"text-muted\" >\r\n                            {this.state.errors.descriptionError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formFileImage\">\r\n                        <Form.Label>Upload image</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"file\" onChange={this.onFileChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formStartDate\">\r\n                        <Form.Label>Start Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Enter description\" value={this.state.vacation.startingDate || \"\"} onChange={this.setStartingDate} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.startingDateError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEndingDate\">\r\n                        <Form.Label>Ending Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Enter description\" value={this.state.vacation.endingDate || \"\"} onChange={this.setEndingDate} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.endingDateError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formTextPrice\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.price || \"\"} onChange={this.setPrice} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.priceError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.update}>\r\n                        Submit\r\n                    </Button >\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","export class VacationModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public vacationId?: number,\r\n        public description?: string,\r\n        public destination?: string,\r\n        public img?: string,\r\n        public startingDate?: string,\r\n        public endingDate?: string,\r\n        public price?: number,\r\n        public follows?: number,\r\n        public isFollow?: boolean) {\r\n    }\r\n}\r\n\r\n","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./addVacation.css\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport axios from \"../../api/axios\";\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\n\r\n//store\r\nimport { store } from \"../../redux/store\";\r\n\r\n//validation\r\nimport {\r\n    validateDescription,\r\n    validateDestination,\r\n    validateImgUrl,\r\n    validateStartingDate,\r\n    validateEndingDate,\r\n    validatePrice\r\n} from \"../../services/vacation-validation\";\r\n\r\n//components\r\nimport NavBar from \"../nav-bar/navBar\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n//services\r\nimport { StringToJson } from \"../../services/date\";\r\nimport { errorHandling, isLoggedIn, isAdmin, } from \"../../services/auth\"\r\n\r\n\r\ninterface VacationState {\r\n    vacation: VacationModel;\r\n    isLoggedIn: boolean;\r\n    file: File;\r\n    errors: {\r\n        descriptionError: string,\r\n        destinationError: string,\r\n        imgError: string,\r\n        startingDateError: string,\r\n        endingDateError: string,\r\n        priceError: string\r\n    };\r\n\r\n}\r\n\r\nexport class AddVacation extends Component<any, VacationState>{\r\n\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            vacation: new VacationModel(),\r\n            isLoggedIn: store.getState().isLoggedIn,\r\n            file: null,\r\n            errors: { descriptionError: \"*\", destinationError: \"*\", imgError: \"*\", startingDateError: \"*\", endingDateError: \"*\", priceError: \"*\" }\r\n\r\n        };\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n        if(!isLoggedIn(this.props)) return;\r\n        if(!isAdmin(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n    }\r\n\r\n\r\n    //get the data from inputs to the state\r\n    private setDescription = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const description = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDescription(description);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.descriptionError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.description = description;\r\n        this.setState({ vacation });\r\n\r\n    }\r\n\r\n    private setDestination = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const destination = args.target.value;\r\n        let nameError;\r\n\r\n\r\n        nameError = validateDestination(destination);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.destinationError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.destination = destination;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private onFileChange = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const file = args.target.files[0];\r\n        console.log(\"File: \");\r\n        console.log(file);\r\n        if (file) {\r\n            this.setImgUrl(file.name);\r\n            this.setState({ file });\r\n        }\r\n    }\r\n\r\n\r\n    private setImgUrl = (fileName: string) => {\r\n        const img = fileName;\r\n        let nameError;\r\n\r\n        nameError = validateImgUrl(img);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.imgError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.img = img;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setStartingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const startingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateStartingDate(startingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.startingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.startingDate = startingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setEndingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const endingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateEndingDate(endingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.endingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.endingDate = endingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const price = +args.target.value;\r\n        let nameError;\r\n\r\n\r\n        nameError = validatePrice(price);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.priceError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.price = price;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    //check if the form is legal\r\n    private isFormLegal() {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    //add a new vacation, to database and store, emit, and redirect to /login\r\n    private add = async () => {\r\n\r\n        const vacation = { ...this.state.vacation };\r\n\r\n        console.log(\"this.state.file\");\r\n        console.log(this.state.file);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\r\n\r\n            \"file\",\r\n            this.state.file\r\n        );\r\n\r\n        // formData.append('image', this.state.file, this.state.file.name);\r\n\r\n        try {\r\n\r\n            //upload vacation image\r\n            await axiosPrivate.post<File>(\"/upload-image\", formData, {\r\n                headers: {\r\n                  \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n              });\r\n\r\n            //add vacation\r\n            const response = await axiosPrivate.post<VacationModel>(\"/api/vacations\",\r\n                vacation);\r\n            const addedVacation = response.data;\r\n\r\n            addedVacation.follows = 0;\r\n            addedVacation.startingDate = StringToJson(addedVacation.startingDate);\r\n            addedVacation.endingDate = StringToJson(addedVacation.endingDate);\r\n\r\n            this.socket.emit(\"Admin-added-a-vacation-from-client\", addedVacation);\r\n            this.props.history.push(\"/admin\");\r\n\r\n        }\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    //disconnect from the server\r\n    public componentWillUnmount(): void {\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n    public render() {\r\n\r\n        return (\r\n            <div className=\"EditVacation\">\r\n                <NavBar />\r\n                <div className=\"edit-container\">\r\n                    <h1>Add Vacation</h1>\r\n                    <br />\r\n                    <Form.Group controlId=\"formTextDestination\">\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter destination\" value={this.state.vacation.destination || \"\"} onChange={this.setDestination} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.destinationError === \"*\" ? \"\" : this.state.errors.destinationError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formTextDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.description || \"\"} onChange={this.setDescription} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.descriptionError === \"*\" ? \"\" : this.state.errors.descriptionError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formFileImage\">\r\n                        <Form.Label>Upload image</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"file\" onChange={this.onFileChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formStartDate\">\r\n                        <Form.Label>Start Date</Form.Label>\r\n                        <Form.Control type=\"date\" value={this.state.vacation.startingDate || \"\"} onChange={this.setStartingDate} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.startingDateError === \"*\" ? \"\" : this.state.errors.startingDateError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEndingDate\">\r\n                        <Form.Label>Ending Date</Form.Label>\r\n                        <Form.Control type=\"date\" value={this.state.vacation.endingDate || \"\"} onChange={this.setEndingDate} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.endingDateError === \"*\" ? \"\" : this.state.errors.endingDateError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formTextPrice\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.price || \"\"} onChange={this.setPrice} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            {this.state.errors.priceError === \"*\" ? \"\" : this.state.errors.priceError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.add}>\r\n                        Submit\r\n                    </Button >\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./reports.css\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport { FollowModel } from \"../../models/follow-model\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//components\r\nimport { Bar } from 'react-chartjs-2';\r\nimport NavBar from \"../nav-bar/navBar\";\r\n\r\n//server\r\nimport io from \"socket.io-client\";\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport { Config } from \"../../config\";\r\n\r\n//services\r\nimport { getRandomColor } from \"../../services/color\";\r\nimport { errorHandling, isLoggedIn, isAdmin } from \"../../services/auth\"\r\n\r\n\r\n\r\ninterface reportsState {\r\n    isLoggedIn: boolean;\r\n    vacationsDestinations: Array<string>;\r\n    vacationsFollows: Array<number>;\r\n    colors: Array<string>;\r\n}\r\n\r\nexport class Reports extends Component<any, reportsState>{\r\n\r\n    private socket;\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: store.getState().isLoggedIn,\r\n            vacationsDestinations: [],\r\n            vacationsFollows: [],\r\n            colors: []\r\n        }\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        if(!isLoggedIn(this.props)) return;\r\n        if(!isAdmin(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations and the follows from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n\r\n            const isLoggedIn = store.getState().isLoggedIn;            \r\n            this.setState({ isLoggedIn });\r\n\r\n            if(store.getState().vacations.length>0 && store.getState().follows.length>0){\r\n                this.updateGraphState();\r\n            }\r\n        });\r\n\r\n        this.getComponentData();\r\n\r\n    }\r\n\r\n    private async getComponentData() {\r\n\r\n        let vacations = store.getState().vacations;\r\n        let follows = store.getState().follows;\r\n\r\n        // if the store is empty get the data with ajax\r\n        try {\r\n            if (vacations.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<VacationModel[]>(\"/api/vacations\");\r\n                vacations = response.data;\r\n                store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n            }\r\n            if (follows.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<FollowModel[]>(\"/api/follows\");\r\n                follows = response.data;\r\n                store.dispatch({ type: ActionType.SaveAllFollows, payload: follows });\r\n            }\r\n\r\n            store.dispatch({ type: ActionType.setFollowsPerVacation });\r\n        }\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n            return;\r\n        }\r\n\r\n\r\n        this.updateGraphState();\r\n\r\n    }\r\n\r\n    private updateGraphState = () => {\r\n        const vacationsDestinations = [];\r\n        const vacationsFollows = [];\r\n        const colors = [];\r\n\r\n\r\n        store.getState().vacations.forEach(v => {\r\n            if (v.follows > 0) {\r\n                vacationsDestinations.push(v.destination);\r\n                vacationsFollows.push(v.follows);\r\n                colors.push(getRandomColor());\r\n            }\r\n        });\r\n\r\n        this.setState({ vacationsDestinations, vacationsFollows, colors });\r\n    }\r\n\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    } \r\n\r\n\r\n    public render() {\r\n        return (\r\n\r\n            <div className=\"reports\">\r\n                <NavBar />\r\n                <br></br>\r\n                <Bar\r\n                    data={\r\n                        {\r\n                            labels: this.state.vacationsDestinations,\r\n                            datasets: [\r\n                                {\r\n                                    label: 'Follows',\r\n                                    data: this.state.vacationsFollows,\r\n                                    backgroundColor: this.state.colors\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                    options={{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    userCallback: function (label, index, labels) {\r\n                                        // when the floored value is the same as the value we have a whole number\r\n                                        if (Math.floor(label) === label) {\r\n                                            return label;\r\n                                        }\r\n\r\n                                    },\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","export function getRandomColor(){\r\n    const r=Math.floor(Math.random()*255);\r\n    const g=Math.floor(Math.random()*255);\r\n    const b=Math.floor(Math.random()*255);\r\n\r\n    return `rgba(${r},${g},${b},0.5)`;\r\n    \r\n}","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./purchase.css\";\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport { PurchaseModel } from \"../../models/purchase-model\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\n\r\n//components\r\nimport NavBar from \"../nav-bar/navBar\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//services\r\nimport { JsonToString } from \"../../services/date\";\r\nimport { errorHandling, isLoggedIn } from \"../../services/auth\"\r\n\r\ninterface VacationState {\r\n    vacations: VacationModel[];\r\n    purchase: PurchaseModel;\r\n    vacation: VacationModel;\r\n    isLoggedIn: boolean;\r\n    errors: {\r\n        descriptionError: string,\r\n        destinationError: string,\r\n        imgError: string,\r\n        startingDateError: string,\r\n        endingDateError: string,\r\n        priceError: string\r\n    };\r\n}\r\n\r\nexport class Purchase extends Component<any, VacationState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations, and login status from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            purchase: {},\r\n            vacation: {},\r\n            isLoggedIn: store.getState().isLoggedIn,\r\n            errors: { descriptionError: \"\", destinationError: \"\", imgError: \"\", startingDateError: \"\", endingDateError: \"\", priceError: \"\" }\r\n        };\r\n\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        if(!isLoggedIn(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            this.setState({ vacations });\r\n        });\r\n\r\n        this.getComponentData();\r\n    }\r\n\r\n\r\n\r\n    private getComponentData = async () => {\r\n\r\n        let vacation;\r\n\r\n        //if the store is not empty, find the purchase and don't use axios at all\r\n        if (this.state.vacations.length > 0) {\r\n\r\n            for (let v of this.state.vacations) {\r\n                if (v.vacationId === +this.props.match.params.id) {\r\n                    vacation = ({ ...v });\r\n                }\r\n            }\r\n        }\r\n\r\n        // if the store is empty, get the vacation for edit with axios\r\n        else {\r\n            try {\r\n                const response = await\r\n                    axiosPrivate.get<VacationModel>(`/api/vacations/${+this.props.match.params.id}`);\r\n                vacation = response.data;\r\n            }\r\n\r\n            catch (err) {\r\n                errorHandling(err, this.props);\r\n            }\r\n        }\r\n\r\n        //treatment with json date format\r\n        vacation.startingDate = JsonToString(vacation.startingDate);\r\n        vacation.endingDate = JsonToString(vacation.endingDate);\r\n        this.setState({ vacation });\r\n\r\n\r\n        const purchase = { ...this.state.purchase };\r\n        purchase.vacationId = vacation.vacationId;\r\n        purchase.userName = store.getState().user.userName;\r\n        purchase.priceForTicket = vacation.price;\r\n        this.setState({ purchase });\r\n    }\r\n\r\n\r\n    private setAmountOfTickets = (args: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const purchase = { ...this.state.purchase };\r\n        purchase.tickets = +args.target.value;\r\n        purchase.totalPrice = purchase.tickets * this.state.vacation.price;\r\n\r\n        this.setState({ purchase });\r\n\r\n    }\r\n\r\n    private isFormLegal() {\r\n        if (this.state.purchase.totalPrice <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    private send = async () => {\r\n        const dateNow = new Date();\r\n        let purchase = { ...this.state.purchase };\r\n        purchase.date = dateNow;\r\n\r\n        try {\r\n            const response = await axiosPrivate.post<PurchaseModel>(\"/api/purchases\",\r\n                purchase);\r\n            purchase = response.data;\r\n            this.socket.emit(\"user-added-a-purchase-from-client\", purchase);\r\n\r\n            this.props.history.push(\"/\");\r\n\r\n        }\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n\r\n    }\r\n\r\n    //disconnect from the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"purchaseVacation\">\r\n                <NavBar />\r\n                <div className=\"card-container\">\r\n                    <Card className=\"card-purchase\">\r\n                        <Card.Header >\r\n                            <div className=\"header\">\r\n                                <img className=\"img\" alt=\"vacation\" src={`${Config.serverUrl}/assets/images/vacations/${this.state.vacation.img}`} />\r\n                                <span className=\"destination\">{this.state.vacation.destination || \"\"}</span>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Description:</Card.Title>\r\n                            <Card.Text>\r\n                                {this.state.vacation.description || \"\"}\r\n                            </Card.Text>\r\n                            <Card.Title>Vacation Date:</Card.Title>\r\n                            <Card.Text>\r\n                                From {new Date(this.state.vacation.startingDate).toDateString()} to  {new Date(this.state.vacation.endingDate).toDateString()}\r\n                            </Card.Text>\r\n                            <Card.Title>One ticket cost:</Card.Title>\r\n                            <Card.Text>\r\n                                {this.state.vacation.price || \"\"}$\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Header >\r\n                            <h2>Purchase</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Number Of tickets: <input type=\"text\" pattern=\"[0-9]*\" onInput={this.setAmountOfTickets.bind(this)} value={this.state.purchase.tickets} />\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Total price: {this.state.purchase.totalPrice || \"\"}$\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.send} >\r\n                                    Buy\r\n                                </Button >\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./purchases.css\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport io from \"socket.io-client\";\r\nimport { Config } from \"../../config\";\r\n\r\n//store\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//components\r\nimport NavBar from \"../nav-bar/navBar\";\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n//models\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport { PurchaseModel } from \"../../models/purchase-model\";\r\n\r\n//services\r\nimport { errorHandling, isAdmin, isLoggedIn } from \"../../services/auth\"\r\n\r\n\r\n\r\ninterface PurchaseState {\r\n    purchases: PurchaseModel[];\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nexport class Purchases extends Component<any, PurchaseState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get purchases, vacations, and login status from the store\r\n        this.state = {\r\n            purchases: store.getState().purchases,\r\n            isLoggedIn: store.getState().isLoggedIn\r\n        };\r\n\r\n    }\r\n\r\n\r\n    public componentDidMount() {\r\n\r\n        if(!isLoggedIn(this.props)) return;\r\n        if(!isAdmin(this.props)) return;\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n\r\n            const purchases = store.getState().purchases;\r\n            this.setState({ purchases });\r\n        });\r\n\r\n        this.getComponentDataWithAxios();\r\n\r\n    }\r\n\r\n    private getComponentDataWithAxios = async () => {\r\n        try {\r\n\r\n            //if the store is empty, get vacations and purchases data.\r\n\r\n            if (store.getState().vacations.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<VacationModel[]>(`/api/vacations`);\r\n                const vacations = response.data;\r\n                store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n            }\r\n\r\n            if (store.getState().purchases.length === 0) {\r\n                const response = await\r\n                    axiosPrivate.get<PurchaseModel[]>(`/api/purchases`);\r\n                const purchases = response.data;\r\n\r\n                purchases.forEach(p => {\r\n                    p.vacation = store.getState().vacations.find(v => v.vacationId === p.vacationId);\r\n                });\r\n\r\n                store.dispatch({ type: ActionType.saveAllPurchases, payload: purchases });\r\n            }\r\n        }\r\n\r\n        catch (err) {\r\n            errorHandling(err, this.props);\r\n        }\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore?.();\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"purchases\">\r\n                <NavBar />\r\n\r\n                <div className=\"table-container\">\r\n                    <h1>Purchases</h1>\r\n                    <br />\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>User Name</th>\r\n                                <th>Number of Tickets</th>\r\n                                <th>Total price</th>\r\n                                <th>Vacation</th>\r\n                                <th>Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.purchases ? this.state.purchases.map(p =>\r\n\r\n                                <tr key={p.purchaseId}>\r\n                                    <td>{p.userName}</td>\r\n                                    <td>{p.tickets}</td>\r\n                                    <td>{p.totalPrice}$</td>\r\n                                    <td>{p.vacation.destination}</td>\r\n                                    <td>{new Date(p.date).toDateString()}</td>\r\n                                </tr>\r\n\r\n                            ) : \"\"}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./app.css\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\n//components\r\nimport { Home } from \"../home/home\"\r\nimport { Registration } from \"../registration/registration\";\r\nimport { Login } from \"../login/login\";\r\nimport { Admin } from \"../admin/admin\";\r\nimport { EditVacation } from \"../edit-vacation/editVacation\";\r\nimport { AddVacation } from \"../add-vacation/addVacation\";\r\nimport { Reports } from \"../reports/reports\";\r\nimport { Purchase } from \"../purchase/purchase\";\r\nimport { Purchases } from \"../purchases/purchases\";\r\n\r\n//store\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\n//server\r\nimport {axiosPrivate} from \"../../api/axios\";\r\nimport axios from \"../../api/axios\";\r\nimport { Config } from \"../../config\";\r\nimport io from \"socket.io-client\";\r\n\r\n//models\r\nimport { PurchaseModel } from \"../../models/purchase-model\";\r\n\r\n\r\n\r\nexport class App extends Component<any>{\r\n\r\n    private socket;    \r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        \r\n        if(axiosPrivate.interceptors.request[\"handlers\"].length===0){\r\n            axiosPrivate.interceptors.request.use(this.reqInterceptor);\r\n            axiosPrivate.interceptors.response.use(this.resInterceptor,this.resErrInterceptor);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private reqInterceptor = req => {\r\n\r\n        if (!req.headers['authorization']) {\r\n            req.headers[\"authorization\"] = `Bearer ${store.getState().token}`;\r\n            \r\n        }\r\n\r\n        // console.log(\"req.headers[authorization]\");\r\n        // console.log(req.headers[\"authorization\"]);\r\n\r\n        // if (!req.headers['Content-Type']) {\r\n        //     req.headers[\"Content-Type\"] = `multipart/form-data`; \r\n        // }\r\n\r\n        console.log(\"req headers before: \");\r\n        console.log(req.headers);\r\n        console.log(\"req before: \");\r\n        console.log(req);\r\n        return req;\r\n    }\r\n\r\n    private resInterceptor = res => {\r\n        console.log(\"res\");\r\n        console.log(res);\r\n        return res;\r\n    }\r\n\r\n    private resErrInterceptor = async err => {\r\n        // console.log(\"response err\");\r\n        // console.log(err);\r\n        // console.log(\"err?.response?.data\");\r\n        // console.log(err?.response?.data);\r\n        // console.log(\"err?.config = req\");\r\n        console.log(err?.config);\r\n        console.log(err?.config.url);\r\n\r\n\r\n        const prevRequest = err?.config;\r\n        // console.log(\"err?.response?.status\");\r\n        // console.log(err?.response?.status);\r\n        // if(err?.response?.status === 403 || 401 && !prevRequest?.sent){\r\n        if (err?.config.url!==\"/api/auth/refresh\" && (err?.response?.data === \"You are not logged-in\" || err?.response?.data === \"Your login session has expired\")) {\r\n            //try to get access token\r\n            // prevRequest.sent = true;\r\n            try {\r\n                console.log(\"refresh\");\r\n                const response = await axiosPrivate.get(\"/api/auth/refresh\");\r\n                console.log(\"after refresh\");\r\n                const newAccessToken = response.data.accessToken;\r\n                store.dispatch({ type: ActionType.saveToken, payload: newAccessToken });\r\n                prevRequest.headers[\"authorization\"] = `Bearer ${newAccessToken}`;\r\n                return axios(prevRequest);\r\n            } catch (error) {\r\n                // console.log(\"req error\");\r\n                // console.log(err);\r\n                // console.log(err?.response?.data);\r\n                // console.log(\"refresh error\");\r\n                // console.log(error);\r\n                // console.log(error?.response?.data);\r\n                throw error;\r\n            }\r\n\r\n        }\r\n        throw err;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        console.log(\"app componentDidMount\");\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(Config.serverUrl);\r\n\r\n        //listen to actions from the server\r\n        this.socket.on(\"Admin-updated-a-vacation-from-server\", vacationUpdated => {\r\n            if (store.getState().vacations.length > 0)\r\n                store.dispatch({ type: ActionType.saveOneVacation, payload: vacationUpdated });\r\n        });\r\n\r\n        this.socket.on(\"added-vacation-from-server\", vacationAdded => {\r\n            if (store.getState().vacations.length > 0)\r\n                store.dispatch({ type: ActionType.addOneVacation, payload: vacationAdded });\r\n        });\r\n\r\n        this.socket.on(\"removed-vacation-from-server\", vacationRemoved => {\r\n            if (store.getState().vacations.length > 0)\r\n                store.dispatch({ type: ActionType.deleteOneVacation, payload: vacationRemoved });\r\n        });\r\n\r\n        this.socket.on(\"follow-added-from-server\", followAdded => {\r\n            if (store.getState().vacations.length > 0 && store.getState().follows.length > 0) {\r\n                store.dispatch({ type: ActionType.AddFollow, payload: followAdded });\r\n                store.dispatch({ type: ActionType.setFollowsPerVacation });\r\n                store.dispatch({ type: ActionType.sortVacations });\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"follow-removed-from-server\", followId => {\r\n            if (store.getState().vacations.length > 0 && store.getState().follows.length > 0) {\r\n                store.dispatch({ type: ActionType.RemoveFollow, payload: followId });\r\n                store.dispatch({ type: ActionType.setFollowsPerVacation });\r\n                store.dispatch({ type: ActionType.sortVacations });\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"purchase-added-from-server\", (purchase: PurchaseModel) => {\r\n            if (store.getState().vacations.length > 0 && store.getState().purchases.length > 0) {\r\n                purchase.vacation = store.getState().vacations.find(v => v.vacationId === purchase.vacationId);\r\n                store.dispatch({ type: ActionType.addPurchase, payload: purchase });\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    //disconnect from the server\r\n    public componentWillUnmount(): void {\r\n        console.log(\"componentWillUnmount\");\r\n        this.socket?.disconnect();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"layout\">\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path={\"/\"}\r\n                            render={props => (\r\n                                <Home\r\n                                    {...props} key={\"layout\"}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/login\"} key={\"login\"}\r\n                            render={props => (\r\n                                <Login\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/registration\"} key={\"registration\"}\r\n                            render={props => (\r\n                                <Registration\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/purchase/:id\"} key={\"purchase\"}\r\n                            render={props => (\r\n                                <Purchase\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/purchases\"} key={\"purchases\"}\r\n                            render={props => (\r\n                                <Purchases\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin\"} key={\"registration\"}\r\n                            render={props => (\r\n                                <Admin\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin/add\"} key={\"add\"}\r\n                            render={props => (\r\n                                <AddVacation\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin/:id\"} key={\"edit\"}\r\n                            render={props => (\r\n                                <EditVacation\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/reports\"} key={\"reports\"}\r\n                            render={props => (\r\n                                <Reports\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}