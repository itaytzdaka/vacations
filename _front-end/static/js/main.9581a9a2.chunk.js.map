{"version":3,"sources":["serviceWorker.ts","redux/action-type.ts","models/user-model.ts","redux/store.ts","redux/reducer.ts","redux/app-state.ts","models/follow-model.ts","components/nav-bar/navBar.tsx","config.ts","components/home/home.tsx","services/user-validation.ts","components/registration/registration.tsx","components/login/login.tsx","components/admin/admin.tsx","services/date.ts","services/vacation-validation.ts","components/edit-vacation/editVacation.tsx","models/vacation-model.ts","components/add-vacation/addVacation.tsx","services/color.ts","components/reports/reports.tsx","components/app/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionType","UserModel","firstName","lastName","userName","password","isAdmin","store","createStore","oldAppState","action","newAppState","type","SaveAllFollows","follows","payload","SaveAllVacations","vacations","saveOneVacation","i","vacationId","isFollow","addOneVacation","push","deleteOneVacation","filter","v","AddFollow","RemoveFollow","f","followId","PrepareVacationsForUser","counter","forEach","JSON","parse","sessionStorage","getItem","isNotFollow","concat","user","this","FollowModel","NavBar","props","state","setState","clear","className","to","exact","Button","onClick","logOut","Component","Config","serverUrl","_initialize","Home","unsubscribeStore","socket","addFollow","a","followToAdd","axios","post","emit","response","data","history","alert","removeFollow","followToRemove","find","delete","getState","io","connect","subscribe","length","get","response2","dispatch","on","vacationUpdated","vacationAdded","vacationRemoved","map","Card","style","width","key","Img","variant","src","img","Body","color","size","Title","destination","Text","description","ListGroup","ListGroupItem","Date","startingDate","toDateString","endingDate","price","validateUserName","validatePassword","Registration","setUserName","args","nameError","target","value","usersNames","error","validateAvailableUserName","errors","userNameError","setFirstName","validateFirstName","firstNameError","setLastName","validateLastName","lastNameError","setPassword","passwordError","verifyPasswordUser","verifyPassword","verifyPasswordError","isFormLegal","prop","toString","register","setItem","stringify","token","message","getAllUsersNames","name","id","placeholder","onChange","disabled","Login","login","Admin","getDataWithAjax","disconnect","JsonToString","date","d","setDate","getDate","toISOString","split","StringToJson","setHours","toJSON","validateDescription","validateDestination","validatePrice","EditVacation","setDescription","descriptionError","vacation","setDestination","destinationError","setImgUrl","imgError","setStartingDate","startingDateError","setEndingDate","endingDateError","setPrice","priceError","update","vacationToUpdate","console","log","put","params","e","Form","Group","controlId","Label","Control","VacationModel","AddVacation","add","addedVacation","getRandomColor","r","Math","floor","random","g","b","Reports","vacationsDestinations","vacationsFollows","colors","labels","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","userCallback","index","App","interceptors","request","use","req","headers","authorization","res","path","render","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4aAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,IClBMC,E,mIAAAA,O,uCAAAA,I,mCAAAA,I,qDAAAA,I,qCAAAA,I,mCAAAA,I,yCAAAA,I,yBAAAA,I,gCAAAA,M,KCCL,IAAMC,EAET,WACWC,EACAC,EACAC,EACAC,EACAC,GACJ,yBALIJ,YAKL,KAJKC,WAIL,KAHKC,WAGL,KAFKC,WAEL,KADKC,WCJFC,EAAQC,aCDd,SAAgBC,EAAuBC,GAE1C,IAAMC,EAAW,eAAQF,GAEzB,OAAQC,EAAOE,MAGX,KAAKZ,EAAWa,eACZF,EAAYG,QAAUJ,EAAOK,QAC7B,MAEJ,KAAKf,EAAWgB,iBACZL,EAAYM,UAAYP,EAAOK,QAC/B,MAEJ,KAAKf,EAAWkB,gBAEZ,IAAK,IAAIC,KAAKR,EAAYM,UACtB,GAAIN,EAAYM,UAAUE,GAAGC,aAAeV,EAAOK,QAAQK,WAAY,CACnE,IAAMN,EAAQH,EAAYM,UAAUE,GAAGL,QACjCO,EAASV,EAAYM,UAAUE,GAAGE,SACxCV,EAAYM,UAAUE,GAAKT,EAAOK,QAClCJ,EAAYM,UAAUE,GAAGL,QAAQA,EACjCH,EAAYM,UAAUE,GAAGE,SAASA,EAM1C,MAEJ,KAAKrB,EAAWsB,eACZX,EAAYM,UAAUM,KAAKb,EAAOK,SAClC,MAEJ,KAAKf,EAAWwB,kBAEZb,EAAYM,UAAYN,EAAYM,UAAUQ,QAAO,SAAAC,GAAO,OAAOA,EAAEN,aAAeV,EAAOK,WAC3F,MAEJ,KAAKf,EAAW2B,UACZhB,EAAYG,QAAQS,KAAKb,EAAOK,SAChC,MAEJ,KAAKf,EAAW4B,aAEZjB,EAAYG,QAAUH,EAAYG,QAAQW,QAAO,SAAAI,GAAO,OAAOA,EAAEC,WAAapB,EAAOK,WACrF,MAEJ,KAAKf,EAAW+B,wBAEZ,IAAIC,EAAU,EACdrB,EAAYM,UAAUgB,SAAQ,SAACP,GAC3BA,EAAEL,UAAW,EACbV,EAAYG,QAAQmB,SAAQ,SAACJ,GACrBA,EAAET,aAAeM,EAAEN,aACnBY,IACIH,EAAEzB,WAAa8B,KAAKC,MAAMC,eAAeC,QAAQ,SAASjC,WAC1DsB,EAAEL,UAAW,OAIzBK,EAAEZ,QAAUkB,EACZA,EAAU,KAId,IAAMX,EAAWV,EAAYM,UAAUQ,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAEL,YACjDiB,EAAc3B,EAAYM,UAAUQ,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAEL,YAC1DV,EAAYM,UAAYI,EAASkB,OAAOD,GAOhD,OAAO3B,ID3E8B,IEMrC,aAAsB,yBAJfM,eAIc,OAHdH,aAGc,OAFd0B,UAEc,EACjBC,KAAKxB,UAAY,GACjBwB,KAAK3B,QAAQ,GACb2B,KAAKD,KAAK,IAAIvC,ICbTyC,EAET,WACWZ,EACA1B,EACAgB,GAAsB,yBAFtBU,WAEqB,KADrB1B,WACqB,KAArBgB,c,mECMFuB,EAAb,kDAEI,WAAmBC,GAAa,IAAD,8BAC3B,cAAMA,IAEDC,MAAQ,CACTL,KAAM,IAAIvC,GAJa,EAFnC,gEAWQ,GAAImC,eAAeC,QAAQ,QAAS,CAChC,IAAMG,EAAON,KAAKC,MAAMC,eAAeC,QAAQ,SAC/CI,KAAKK,SAAS,CAAEN,YAb5B,+BAmBQJ,eAAeW,UAnBvB,+BAuBQ,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,GAArB,QACCT,KAAKI,MAAML,KAAKlC,QAAW,mCACA,kBAAC,IAAD,CAAS2C,GAAG,SAASC,OAAK,GAA1B,WACA,mCACA,kBAAC,IAAD,CAASD,GAAG,aAAaC,OAAK,GAA9B,iBACA,mCACA,kBAAC,IAAD,CAASD,GAAG,WAAWC,OAAK,GAA5B,cACK,KAEjC,yBAAKF,UAAU,SAAf,SAA8BP,KAAKI,MAAML,KAAKpC,SAA9C,MAEJ,6BACI,kBAAC,IAAD,CAAS6C,GAAG,SAASC,OAAK,GACtB,kBAACC,EAAA,EAAD,CAAQC,QAASX,KAAKY,QAAtB,kBAvCxB,GAA4BC,aCXfC,EAAb,2GAMYA,EAAOC,UAAU,2CAN7B,KAAaD,EAEKC,e,EAelBD,EAAOE,cCMA,IAAMC,EAAb,kDAKI,WAAmBd,GAAa,IAAD,8BAC3B,cAAMA,IAJFe,sBAGuB,IAFvBC,YAEuB,IAoFvBC,UApFuB,uCAoFX,WAAOzC,GAAP,eAAA0C,EAAA,6DACVC,EAAc,IAAIrB,GACZtC,SAAW8B,KAAKC,MAAMC,eAAeC,QAAQ,SAASjC,SAClE2D,EAAY3C,WAAaA,EAHT,kBAKN4C,IAAMC,KAAkBV,EAAOC,UAAU,eAAgBO,GALnD,OAMZ,EAAKH,OAAOM,KAAK,qCANL,mDAUc,mCAAtB,KAAIC,SAASC,KAVL,wBAWRhC,eAAeW,QACf,EAAKH,MAAMyB,QAAQ9C,KAAK,UAZhB,2BAiBR+C,MAAM,EAAD,IAjBG,yDApFW,wDA2GvBC,aA3GuB,uCA2GR,WAAOnD,GAAP,iBAAA0C,EAAA,6DAEb1D,EAAW8B,KAAKC,MAAMC,eAAeC,QAAQ,SAASjC,SAEtDoE,EAAiB,EAAK3B,MAAM/B,QAAQ2D,MAAK,SAAA5C,GAC3C,OAAOA,EAAEzB,WAAaA,GAAYyB,EAAET,aAAeA,KALpC,kBAST4C,IAAMU,OAAN,UAAgBnB,EAAOC,UAAvB,wBAAgDgB,EAAe1C,WATtD,OAUf,EAAK8B,OAAOM,KAAK,qCAVF,mDAcW,mCAAtB,KAAIC,SAASC,KAdF,wBAeXhC,eAAeW,QACf,EAAKH,MAAMyB,QAAQ9C,KAAK,UAhBb,2BAqBX+C,MAAM,EAAD,IArBM,yDA3GQ,sDAI3B,EAAKzB,MAAQ,CACT5B,UAAWV,EAAMoE,WAAW1D,UAC5BH,QAASP,EAAMoE,WAAW7D,SANH,EALnC,gMAqBasB,eAAeC,QAAQ,UAAaD,eAAeC,QAAQ,QArBxE,uBAsBYI,KAAKG,MAAMyB,QAAQ9C,KAAK,UAtBpC,6BA2BQkB,KAAKmB,OAASgB,IAAGC,QAAQ,yBAGzBpC,KAAKkB,iBAAmBpD,EAAMuE,WAAU,WACpC,IAAM7D,EAAYV,EAAMoE,WAAW1D,UAC7BH,EAAUP,EAAMoE,WAAW7D,QACjC,EAAKgC,SAAS,CAAE7B,YAAWH,eAIzBP,EAAMoE,WAAW7D,QAAQiE,OAAS,GAAKxE,EAAMoE,WAAW1D,UAAU8D,OAAS,EArCzF,0CAyCoBf,IAAMgB,IAAqBzB,EAAOC,UAAU,kBAzChE,cAwCsBW,EAxCtB,OA0CsBlD,EAAYkD,EAASC,KA1C3C,UA6CoBJ,IAAMgB,IAAmBzB,EAAOC,UAAU,gBA7C9D,QA4CsByB,EA5CtB,OA8CsBnE,EAAUmE,EAAUb,KAE1B7D,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWa,eAAgBE,QAASD,IAC3DP,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWgB,iBAAkBD,QAASE,IAC7DV,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAW+B,0BAlDlD,qDAsD0C,mCAAtB,KAAIoC,SAASC,KAtDjC,wBAuDoBhC,eAAeW,QACfN,KAAKG,MAAMyB,QAAQ9C,KAAK,UAxD5C,2BA6DoB+C,MAAM,EAAD,IA7DzB,QAmEQ7B,KAAKmB,OAAOuB,GAAG,wCAAwC,SAAAC,GACnD7E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWkB,gBAAiBH,QAASqE,OAEhE3C,KAAKmB,OAAOuB,GAAG,8BAA8B,SAAAE,GACzC9E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWsB,eAAgBP,QAASsE,OAE/D5C,KAAKmB,OAAOuB,GAAG,gCAAgC,SAAAG,GAC3C/E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWwB,kBAAmBT,QAASuE,OAElE7C,KAAKmB,OAAOuB,GAAG,8BAAf,sBAA8C,8BAAArB,EAAA,sEAEtCE,IAAMgB,IAAmBzB,EAAOC,UAAU,gBAFJ,OACpCyB,EADoC,OAGpCnE,EAAUmE,EAAUb,KAC1B7D,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWa,eAAgBE,QAASD,IAC3DP,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAW+B,0BALQ,4CA5EtD,+IAmJqB,IAAD,OAEZ,OACI,yBAAKiB,UAAU,QACX,kBAAC,EAAD,MACA,6BACA,yBAAKA,UAAU,iBACVP,KAAKI,MAAM5B,UAAUsE,KAAI,SAAA7D,GAAC,OAGvB,kBAAC8D,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAW1C,UAAU,OAAQ2C,IAAKjE,EAAEN,YACtD,kBAACoE,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAM7C,UAAU,MAAM8C,IAAK,4BAA8BpE,EAAEqE,MAC7E,kBAACP,EAAA,EAAKQ,KAAN,KACKtE,EAAEL,SAAW,kBAAC,IAAD,CAAU4E,MAAM,SAASC,KAAM,GAAI9C,QAAS,kBAAM,EAAKmB,aAAa7C,EAAEN,eAAkB,kBAAC,IAAD,CAAU6E,MAAM,OAAOC,KAAM,GAAI9C,QAAS,kBAAM,EAAKS,UAAUnC,EAAEN,eAEvK,kBAACoE,EAAA,EAAKW,MAAN,KAAazE,EAAE0E,aACf,kBAACZ,EAAA,EAAKa,KAAN,KACK3E,EAAE4E,cAGX,kBAACC,EAAA,EAAD,CAAWvD,UAAU,oBACjB,kBAACwD,EAAA,EAAD,iBAAyB9E,EAAEZ,SAC3B,kBAAC0F,EAAA,EAAD,eAAuB,IAAIC,KAAK/E,EAAEgF,cAAcC,gBAChD,kBAACH,EAAA,EAAD,aAAqB,IAAIC,KAAK/E,EAAEkF,YAAYD,gBAC5C,kBAACH,EAAA,EAAD,cAAsB9E,EAAEmF,MAAxB,gBA3KhC,GAA0BvD,a,OCbnB,SAASwD,EAAiB1G,GAE7B,MAAiB,KAAbA,EACO,oBAGHA,EAAS2E,OAAS,EACf,sBAGF3E,EAAS2E,OAAS,GAChB,qBAEJ,GA+CJ,SAASgC,EAAiB1G,GAC7B,MAAiB,KAAbA,EACO,mBAGHA,EAAS0E,OAAS,EACf,wBAGF1E,EAAS0E,OAAS,GAChB,uBAEJ,GCvDJ,IAAMiC,EAAb,kDAEI,WAAmBpE,GAAa,IAAD,8BAC3B,cAAMA,IAQFqE,YAAc,SAACC,GACnB,IAEIC,EAFE/G,EAAW8G,EAAKE,OAAOC,MAKd,gCADfF,ED3CD,SAAmC/G,EAASkH,GAC/C,IAAIC,EAAM,GAMV,OALAD,EAAWrF,SAAQ,SAAAO,GACZpC,IAAWoC,EAAKpC,WACfmH,EAAM,iCAGPA,ECoCSC,CAA0BpH,EAAS,EAAKyC,MAAMyE,eAEtDH,EAAUL,EAAiB1G,IAG/B,IAAMqH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOC,cAAgBP,EACvB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKpC,SAAWA,EAChB,EAAK0C,SAAS,CAAEN,UAzBW,EA4BvBmF,aAAe,SAACT,GACpB,IAAMhH,EAAYgH,EAAKE,OAAOC,MAE1BF,EDjCL,SAA2BjH,GAC9B,MAAkB,KAAdA,EACO,qBAGHA,EAAU6E,OAAS,EACf,0BAGH7E,EAAU6E,OAAS,GAChB,yBAGF,KAAK7E,EAAU,IAAMA,EAAU,IAAK,IAIvC,GAHK,8CCmBQ0H,CAAkB1H,GAE5BuH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOI,eAAiBV,EACxB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKtC,UAAYA,EACjB,EAAK4C,SAAS,CAAEN,UAvCW,EA2CvBsF,YAAc,SAACZ,GACnB,IAAM/G,EAAW+G,EAAKE,OAAOC,MAEzBF,ED3BL,SAA0BhH,GAC7B,MAAiB,KAAbA,EACQ,oBAGJA,EAAS4E,OAAS,EACd,yBAGH5E,EAAS4E,OAAS,GACf,wBAGF,KAAK5E,EAAS,IAAMA,EAAS,IAAK,IAIrC,GAHK,8CCaQ4H,CAAiB5H,GAE3BsH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOO,cAAgBb,EACvB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKrC,SAAWA,EAChB,EAAK2C,SAAS,CAAEN,UAtDW,EA0DvByF,YAAc,SAACf,GACnB,IAAM7G,EAAW6G,EAAKE,OAAOC,MAEzBF,EAAYJ,EAAiB1G,GAE3BoH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOS,cAAgBf,EACvB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKnC,SAAWA,EAChB,EAAKyC,SAAS,CAAEN,UArEW,EAyEvB2F,mBAAqB,SAACjB,GAC1B,IAGIC,EDrBL,SAAwBiB,EAAe/H,GAC1C,MAAoB,KAAjB+H,EACQ,4BAEFA,IAAmB/H,EACjB,kBAEJ,GCca+H,CAHSlB,EAAKE,OAAOC,MAC3B,eAAQ,EAAKxE,MAAML,MAEwBnC,UAE/CoH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOY,oBAAsBlB,EAC7B,EAAKrE,SAAS,CAAE2E,YAjFW,EAoFvBa,YAAc,WAClB,IAAK,IAAMC,KAAQ,EAAK1F,MAAM4E,OAC1B,GAA2C,KAAvC,EAAK5E,MAAM4E,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,GA1FoB,EA6FvBC,SA7FuB,sBA6FZ,4BAAA3E,EAAA,+EAGYE,IAAMC,KAAKV,EAAOC,UAAU,qBAC/C,EAAKX,MAAML,MAJJ,OAGL2B,EAHK,OAMX/B,eAAesG,QAAQ,OAAQxG,KAAKyG,UAAUxE,EAASC,KAAK5B,OAC5DJ,eAAesG,QAAQ,QAASvE,EAASC,KAAKwE,OAE9C,EAAKhG,MAAMyB,QAAQ9C,KAAK,KATb,gDAaX+C,MAAM,KAAIuE,SAbC,yDA3Ff,EAAKhG,MAAQ,CACTL,KAAM,IAAIvC,EACVqH,WAAY,GACZG,OAAQ,CAAEC,cAAe,IAAKG,eAAgB,IAAKG,cAAe,IAAIE,cAAc,IAAIG,oBAAoB,MALrF,EAFnC,0MAmHmCrE,IAAMgB,IAAiBzB,EAAOC,UAAU,wBAnH3E,OAmHkBW,EAnHlB,OAoHkBmD,EAAWnD,EAASC,KAE1B3B,KAAKK,SAAS,CAACwE,eAtH3B,gDA2HYhD,MAAM,EAAD,IA3HjB,yJAkIYlC,eAAeC,QAAQ,SACvBI,KAAKG,MAAMyB,QAAQ9C,KAAK,KAI5BkB,KAAKqG,qBAvIb,+BA2IQ,OACI,yBAAK9F,UAAU,gBACX,yBAAKA,UAAU,oBACX,uCACA,2BAAOpC,KAAK,OAAOmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUzG,KAAKwE,cAC/E,8BAAOxE,KAAKI,MAAM4E,OAAOC,eACzB,2BAAO9G,KAAK,OAAOmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,aAAaC,SAAUzG,KAAKkF,eAChF,8BAAOlF,KAAKI,MAAM4E,OAAOI,gBACzB,2BAAOjH,KAAK,OAAOmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUzG,KAAKqF,cAC/E,8BAAOrF,KAAKI,MAAM4E,OAAOO,eACzB,2BAAOpH,KAAK,WAAWmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,WAAWC,SAAUzG,KAAKwF,cAClF,8BAAOxF,KAAKI,MAAM4E,OAAOS,eACzB,2BAAOtH,KAAK,WAAWmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,kBAAkBC,SAAUzG,KAAK0F,qBACzF,8BAAO1F,KAAKI,MAAM4E,OAAOY,qBACzB,6BACA,4BAAQc,UAAW1G,KAAK6F,cAAelF,QAASX,KAAKgG,UAArD,WACA,kBAAC,IAAD,CAASzF,UAAU,gBAAgBC,GAAG,SAASC,OAAK,GAApD,6CA3JpB,GAAkCI,aCTrB8F,G,OAAb,kDAEI,WAAmBxG,GAAa,IAAD,8BAC3B,cAAMA,IAQFqE,YAAc,SAACC,GACnB,IAAM9G,EAAW8G,EAAKE,OAAOC,MAEzBF,EAAYL,EAAiB1G,GAE3BqH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOC,cAAgBP,EACvB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKpC,SAAWA,EAChB,EAAK0C,SAAS,CAAEN,UApBW,EAwBvByF,YAAc,SAACf,GACnB,IAAM7G,EAAW6G,EAAKE,OAAOC,MAEzBF,EAAYJ,EAAiB1G,GAE3BoH,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOS,cAAgBf,EACvB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMjF,EAAI,eAAQ,EAAKK,MAAML,MAC7BA,EAAKnC,SAAWA,EAChB,EAAKyC,SAAS,CAAEN,UAnCW,EAsCvB6G,MAtCuB,sBAsCf,4BAAAvF,EAAA,+EAGeE,IAAMC,KAAKV,EAAOC,UAAU,kBAC/C,EAAKX,MAAML,MAJP,OAGF2B,EAHE,OAKR/B,eAAesG,QAAQ,OAAQxG,KAAKyG,UAAUxE,EAASC,KAAK5B,OAC5DJ,eAAesG,QAAQ,QAASvE,EAASC,KAAKwE,OAE9C,EAAKhG,MAAMyB,QAAQ9C,KAAK,KARhB,mDAYe,iCAApB,KAAI4C,SAASC,KAZR,wBAaJE,MAAM,KAAIH,SAASC,MAbf,2BAkBJE,MAAM,KAAIuE,SAlBN,yDAtCe,EAgEvBP,YAAc,WAClB,IAAK,IAAMC,KAAQ,EAAK1F,MAAM4E,OAC1B,GAA2C,KAAvC,EAAK5E,MAAM4E,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,GApEP,EAAK3F,MAAQ,CACTL,KAAM,IAAIvC,EACVwH,OAAQ,CAAEC,cAAe,IAAIQ,cAAc,MAJpB,EAFnC,gEA8EY9F,eAAeC,QAAQ,UAAYH,KAAKC,MAAMC,eAAeC,QAAQ,UACrEI,KAAKG,MAAMyB,QAAQ9C,KAAK,OA/EpC,+BAqFQ,OACI,yBAAKyB,UAAU,SACX,yBAAKA,UAAU,aACX,qCACA,2BAAOpC,KAAK,OAAOmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,YAAYC,SAAUzG,KAAKwE,cAC/E,2BAAOrG,KAAK,WAAWmI,KAAK,GAAGC,GAAG,UAAUC,YAAY,WAAWC,SAAUzG,KAAKwF,cAClF,6BACA,4BAAQkB,UAAW1G,KAAK6F,cAAelF,QAASX,KAAK4G,OAArD,SACA,kBAAC,IAAD,CAASrG,UAAU,WAAWC,GAAG,gBAAgBC,OAAK,GAAtD,mCA7FpB,GAA2BI,c,2BCKdgG,EAAb,kDAKI,WAAmB1G,GAAa,IAAD,8BAC3B,cAAMA,IAJFe,sBAGuB,IAFvBC,YAEuB,IA6DvB2F,gBA7DuB,sBA6DN,8BAAAzF,EAAA,+EAGbE,IAAMgB,IAAqBzB,EAAOC,UAAU,kBAH/B,OAEXW,EAFW,OAIXlD,EAAYkD,EAASC,KAC3B7D,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWgB,iBAAkBD,QAASE,IAL5C,mDASS,mCAAtB,KAAIkD,SAASC,KATA,wBAUbhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB,EAAKxB,MAAMyB,QAAQ9C,KAAK,UAZX,2BAiBb+C,MAAM,EAAD,IAjBQ,yDAzDrB,EAAKzB,MAAQ,CACT5B,UAAWV,EAAMoE,WAAW1D,WALL,EALnC,wLAiBamB,eAAeC,QAAQ,UAAaD,eAAeC,QAAQ,QAjBxE,uBAkBYI,KAAKG,MAAMyB,QAAQ9C,KAAK,UAlBpC,0BAuBkBW,KAAKC,MAAMC,eAAeC,QAAQ,SAAS/B,SACjDmC,KAAKG,MAAMyB,QAAQ9C,KAAK,KAxBpC,UA4BQkB,KAAKmB,OAASgB,IAAGC,QAAQ,yBAGzBpC,KAAKkB,iBAAmBpD,EAAMuE,WAAU,WACpC,IAAM7D,EAAYV,EAAMoE,WAAW1D,UACnC,EAAK6B,SAAS,CAAE7B,mBAKhBwB,KAAKI,MAAM5B,UAAU8D,OAAS,GAtC1C,mDA2CQtC,KAAK8G,kBAGL9G,KAAKmB,OAAOuB,GAAG,wCAAwC,SAAAC,GACnD7E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWkB,gBAAiBH,QAASqE,OAEhE3C,KAAKmB,OAAOuB,GAAG,8BAA8B,SAAAE,GACzC9E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWsB,eAAgBP,QAASsE,OAE/D5C,KAAKmB,OAAOuB,GAAG,gCAAgC,SAAAG,GAC3C/E,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWwB,kBAAmBT,QAASuE,OArD1E,oJA6DQ7C,KAAKkB,mBACLlB,KAAKmB,OAAO4F,eA9DpB,sEA0FyBpI,GA1FzB,0FA4FkB4C,IAAMU,OAAN,UAAgBnB,EAAOC,UAAvB,0BAAkDpC,IA5FpE,OA6FYb,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWwB,kBAAmBT,QAASK,IAC9DqB,KAAKmB,OAAOM,KAAK,uCAAwC9C,GA9FrE,mDAkGsC,mCAAtB,KAAI+C,SAASC,KAlG7B,wBAmGgBhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB3B,KAAKG,MAAMyB,QAAQ9C,KAAK,UArGxC,2BA0GgB+C,MAAM,EAAD,IA1GrB,+IA+GqB,IAAD,OACZ,OACI,yBAAKtB,UAAU,QACX,kBAAC,EAAD,MACA,6BAEA,yBAAKA,UAAU,iBACdP,KAAKI,MAAM5B,UAAUsE,KAAI,SAAA7D,GAAC,OAEvB,kBAAC8D,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAYC,IAAKjE,EAAEN,YACrC,kBAACoE,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAM7C,UAAU,MAAM8C,IAAK,4BAA4BpE,EAAEqE,MAC3E,kBAACP,EAAA,EAAKQ,KAAN,KACI,kBAAC,IAAD,CAAGC,MAAM,QAAQC,KAAM,GAAI9C,QAAS,kBAAM,EAAKsB,OAAOhD,EAAEN,eACxD,kBAAC,IAAD,CAAS6B,GAAI,UAAYvB,EAAEN,YACvB,kBAAC,IAAD,CAAQ6E,MAAM,QAAQC,KAAM,MAEhC,kBAACV,EAAA,EAAKW,MAAN,KAAazE,EAAE0E,aACf,kBAACZ,EAAA,EAAKa,KAAN,KACK3E,EAAE4E,cAIX,kBAACC,EAAA,EAAD,CAAWvD,UAAU,oBACjB,kBAACwD,EAAA,EAAD,eAAuB,IAAIC,KAAK/E,EAAEgF,cAAcC,gBAChD,kBAACH,EAAA,EAAD,aAAqB,IAAIC,KAAK/E,EAAEkF,YAAYD,gBAC5C,kBAACH,EAAA,EAAD,cAAsB9E,EAAEmF,MAAxB,WAKZ,kCA7IhB,GAA2BvD,a,gBCvBpB,SAASmG,EAAaC,GACzB,IAAMC,EAAE,IAAIlD,KAAKiD,GAIlB,OAHCC,EAAEC,QAAQD,EAAEE,UAAU,GACLF,EAAEG,cACEC,MAAM,KACjB,GAIP,SAASC,EAAaN,GACzB,IAAMC,EAAE,IAAIlD,KAAKiD,GAIjB,OAHAC,EAAEC,QAAQD,EAAEE,UAAU,GACtBF,EAAEM,SAAS,IACMN,EAAEO,SCZhB,SAASC,EAAoB7D,GAEhC,MAAoB,KAAhBA,EACO,sBAGHA,EAAYvB,OAAS,EAClB,2BAGFuB,EAAYvB,OAAS,IACnB,0BAEJ,GAIJ,SAASqF,EAAoBhE,GAChC,MAAoB,KAAhBA,EACO,sBAGHA,EAAYrB,OAAS,EACjB,2BAGHqB,EAAYrB,OAAS,GAClB,0BAGF,KAAKqB,EAAY,IAAMA,EAAY,IAAK,IAG3C,GAFK,+CAqBT,SAASiE,EAAcxD,GAE1B,OAAKA,EAIGA,EAAQ,EACL,0BAGFA,EAAQ,IACN,oBAEJ,GAVI,gB,WC3BFyD,EAAb,kDAKI,WAAmB1H,GAAa,IAAD,8BAC3B,cAAMA,IAJFe,sBAGuB,IAFvBC,YAEuB,IAyFxB2G,eAAiB,SAACrD,GACrB,IACIC,EADEb,EAAcY,EAAKE,OAAOC,MAGhCF,EAAYgD,EAAoB7D,GAEhC,IAAMmB,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAO+C,iBAAmBrD,EAC1B,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAASnE,YAAcA,EACvB,EAAKxD,SAAS,CAAE2H,cArGW,EAuGxBC,eAAiB,SAACxD,GACrB,IACIC,EADEf,EAAcc,EAAKE,OAAOC,MAGhCF,EAAYiD,EAAoBhE,GAEhC,IAAMqB,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOkD,iBAAmBxD,EAC1B,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAASrE,YAAcA,EACvB,EAAKtD,SAAS,CAAE2H,cAnHW,EAsHxBG,UAAY,SAAC1D,GAChB,IAAMnB,EAAMmB,EAAKE,OAAOC,MAKxB,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOoD,SDxHJ,GCyHH,EAAK/H,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS1E,IAAMA,EACf,EAAKjD,SAAS,CAAE2H,cAlIW,EAoIxBK,gBAAkB,SAAC5D,GACtB,IAAMR,EAAeQ,EAAKE,OAAOC,MAKjC,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOsD,kBDlIJ,GCmIH,EAAKjI,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UAEjCA,EAAS/D,aAAeA,EACxB,EAAK5D,SAAS,CAAE2H,cAjJW,EAmJxBO,cAAgB,SAAC9D,GACpB,IAAMN,EAAaM,EAAKE,OAAOC,MAK/B,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOwD,gBD7IJ,GC8IH,EAAKnI,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UAEjCA,EAAS7D,WAAaA,EACtB,EAAK9D,SAAS,CAAE2H,cAhKW,EAmKvBS,SAAW,SAAChE,GAChB,IACIC,EADEN,GAASK,EAAKE,OAAOC,MAG3BF,EAAYkD,EAAcxD,GAE1B,IAAMY,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAO0D,WAAahE,EACpB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS5D,MAAQA,EACjB,EAAK/D,SAAS,CAAE2H,cA/KW,EA2LxBW,OA3LwB,sBA2Lf,4BAAAtH,EAAA,sEAEFuH,EAFE,eAEsB,EAAKxI,MAAM4H,UACzCa,QAAQC,IAAIF,GACZC,QAAQC,IAAIhI,EAAOC,WAJX,SAKFQ,IAAMwH,IAAN,UAAajI,EAAOC,UAApB,2BAAgD,EAAKZ,MAAM7C,MAAM0L,OAAOzC,IAC1EqC,GANI,OAORC,QAAQC,IAAI,eACZF,EAAiB3E,aAAesD,EAAaqB,EAAiB3E,cAC9D2E,EAAiBzE,WAAaoD,EAAaqB,EAAiBzE,YAC5DrG,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWkB,gBAAiBH,QAASsK,IAC5D,EAAKzH,OAAOM,KAAK,uCAAwCmH,GACzD,EAAKzI,MAAMyB,QAAQ9C,KAAK,UAZhB,qDAgBR+J,QAAQC,IAAI,OACZD,QAAQC,IAAR,MAC0B,mCAAtB,KAAIpH,SAASC,KAlBT,wBAmBJhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB,EAAKxB,MAAMyB,QAAQ9C,KAAK,UArBpB,8BAyBuB,uBAAtB,KAAI4C,SAASC,KAzBd,wBA0BJ,EAAKxB,MAAMyB,QAAQ9C,KAAK,UA1BpB,2BA+BJ+C,MAAM,EAAD,IA/BD,0DAvLZ,EAAKzB,MAAQ,CACT5B,UAAWV,EAAMoE,WAAW1D,UAC5BwJ,SAAU,GACVhD,OAAQ,CAAE+C,iBAAkB,GAAIG,iBAAkB,GAAIE,SAAU,GAAIE,kBAAmB,GAAIE,gBAAiB,GAAIE,WAAY,KAPrG,EALnC,kMAsBQ1I,KAAKmB,OAASgB,IAAGC,QAAQ,yBAIzBpC,KAAKkB,iBAAmBpD,EAAMuE,WAAU,WACpC,IAAM7D,EAAYV,EAAMoE,WAAW1D,UACnC,EAAK6B,SAAS,CAAE7B,iBAIfmB,eAAeC,QAAQ,UAAaD,eAAeC,QAAQ,QAhCxE,uBAiCYI,KAAKG,MAAMyB,QAAQ9C,KAAK,UAjCpC,0BAsCkBW,KAAKC,MAAMC,eAAeC,QAAQ,SAAS/B,SACjDmC,KAAKG,MAAMyB,QAAQ9C,KAAK,KAvCpC,qBA+CgBkB,KAAKI,MAAM5B,UAAU8D,OAAS,GA/C9C,+BAiD8BtC,KAAKI,MAAM5B,WAjDzC,IAiDgB,4BAASS,EAA2B,SAC1BN,cAAgBqB,KAAKG,MAAM7C,MAAM0L,OAAOzC,KAC1CyB,EAAQ,eAAS/I,IAnDzC,WAAAgK,EAAA,0DA4DoB1H,IAAMgB,IAAN,UAA4BzB,EAAOC,UAAnC,2BAA+Df,KAAKG,MAAM7C,MAAM0L,OAAOzC,KA5D3G,QA2DsB7E,EA3DtB,OA6DgBsG,EAAWtG,EAASC,KA7DpC,QAkEYqG,EAAS/D,aAAe+C,EAAagB,EAAS/D,cAC9C+D,EAAS7D,WAAa6C,EAAagB,EAAS7D,YAC5CnE,KAAKK,SAAS,CAAE2H,aApE5B,qDAwEsC,mCAAtB,KAAItG,SAASC,KAxE7B,wBAyEgBhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB3B,KAAKG,MAAMyB,QAAQ9C,KAAK,UA3ExC,2BAgFgB+C,MAAM,EAAD,IAhFrB,6JAyFQ7B,KAAKkB,mBACLlB,KAAKmB,OAAO4F,eA1FpB,oCAwLQ,IAAK,IAAMjB,KAAQ9F,KAAKI,MAAM4E,OAC1B,GAA2C,KAAvChF,KAAKI,MAAM4E,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,IA7Lf,+BAsOQ,OACI,yBAAKxF,UAAU,gBACX,kBAAC,EAAD,MACA,6BACA,kBAAC2I,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAASrE,aAAe,GAAI8C,SAAUzG,KAAKiI,iBACvH,kBAACiB,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOkD,mBAI3B,kBAACgB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAASnE,aAAe,GAAI4C,SAAUzG,KAAK8H,iBACvH,kBAACoB,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAO+C,mBAI3B,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAAS1E,KAAO,GAAImD,SAAUzG,KAAKmI,YAC/G,kBAACe,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOoD,WAI3B,kBAACc,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAAS/D,cAAgB,GAAIwC,SAAUzG,KAAKqI,kBACxH,kBAACa,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOsD,mBAGvB,kBAACY,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAAS7D,YAAc,GAAIsC,SAAUzG,KAAKuI,gBACtH,kBAACW,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOwD,iBAGvB,kBAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAAS5D,OAAS,GAAIqC,SAAUzG,KAAKyI,WACjH,kBAACS,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAO0D,aAI3B,kBAAChI,EAAA,EAAD,CAAQ0C,QAAQ,UAAUjF,KAAK,SAASuI,UAAW1G,KAAK6F,cAAelF,QAASX,KAAK2I,QAArF,eAtRhB,GAAkC9H,aC7BrB0I,G,OAET,WACW1F,EACAF,EACAL,EACAW,EACAE,EACAC,EACAzF,EACAN,EACAO,GAAqB,yBARrBiF,cAQoB,KAPpBF,cAOoB,KANpBL,MAMoB,KALpBW,eAKoB,KAJpBE,aAIoB,KAHpBC,QAGoB,KAFpBzF,aAEoB,KADpBN,UACoB,KAApBO,aCwBF4K,EAAb,kDAII,WAAmBrJ,GAAa,IAAD,8BAC3B,cAAMA,IAHFgB,YAEuB,IA+BvB2G,eAAiB,SAACrD,GACtB,IACIC,EADEb,EAAcY,EAAKE,OAAOC,MAGhCF,EAAYgD,EAAoB7D,GAEhC,IAAMmB,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAO+C,iBAAmBrD,EAC1B,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAASnE,YAAcA,EACvB,EAAKxD,SAAS,CAAE2H,cA3CW,EA+CvBC,eAAiB,SAACxD,GACtB,IACIC,EADEf,EAAcc,EAAKE,OAAOC,MAIhCF,EAAYiD,EAAoBhE,GAEhC,IAAMqB,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOkD,iBAAmBxD,EAC1B,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAASrE,YAAcA,EACvB,EAAKtD,SAAS,CAAE2H,cA5DW,EAgEvBG,UAAY,SAAC1D,GACjB,IAAMnB,EAAMmB,EAAKE,OAAOC,MAMxB,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOoD,SHxEJ,GGyEH,EAAK/H,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS1E,IAAMA,EACf,EAAKjD,SAAS,CAAE2H,cA7EW,EAgFvBK,gBAAkB,SAAC5D,GACvB,IAAMR,EAAeQ,EAAKE,OAAOC,MAKjC,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOsD,kBHnFJ,GGoFH,EAAKjI,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS/D,aAAeA,EACxB,EAAK5D,SAAS,CAAE2H,cA5FW,EA+FvBO,cAAgB,SAAC9D,GACrB,IAAMN,EAAaM,EAAKE,OAAOC,MAK/B,IAAMI,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAOwD,gBH9FJ,GG+FH,EAAKnI,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS7D,WAAaA,EACtB,EAAK9D,SAAS,CAAE2H,cA3GW,EA+GvBS,SAAW,SAAChE,GAChB,IACIC,EADEN,GAASK,EAAKE,OAAOC,MAI3BF,EAAYkD,EAAcxD,GAE1B,IAAMY,EAAM,eAAQ,EAAK5E,MAAM4E,QAC/BA,EAAO0D,WAAahE,EACpB,EAAKrE,SAAS,CAAE2E,WAEhB,IAAMgD,EAAQ,eAAQ,EAAK5H,MAAM4H,UACjCA,EAAS5D,MAAQA,EACjB,EAAK/D,SAAS,CAAE2H,cA5HW,EA0IvByB,IA1IuB,sBA0IjB,8BAAApI,EAAA,+EAEiBE,IAAMC,KAAoBV,EAAOC,UAAU,iBAC9D,EAAKX,MAAM4H,UAHT,OAEAtG,EAFA,QAIAgI,EAAehI,EAASC,MAChBtD,QAAQ,EACtBqL,EAAczF,aAAesD,EAAamC,EAAczF,cACxDyF,EAAcvF,WAAaoD,EAAamC,EAAcvF,YACtD0E,QAAQC,IAAIY,GACZ5L,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWsB,eAAgBP,QAASoL,IAC3D,EAAKvI,OAAOM,KAAK,qCAAsCiI,GACvD,EAAKvJ,MAAMyB,QAAQ9C,KAAK,UAXlB,qDAeoB,mCAAtB,KAAI4C,SAASC,KAfX,wBAiBFhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB,EAAKxB,MAAMyB,QAAQ9C,KAAK,UAnBtB,8BAuByB,uBAAtB,KAAI4C,SAASC,KAvBhB,wBAwBF,EAAKxB,MAAMyB,QAAQ9C,KAAK,UAxBtB,2BA6BF+C,MAAM,EAAD,IA7BH,0DAvIV,EAAKzB,MAAQ,CACT4H,SAAU,IAAIuB,EACdvE,OAAQ,CAAE+C,iBAAkB,IAAKG,iBAAkB,IAAKE,SAAU,IAAKE,kBAAmB,IAAKE,gBAAiB,IAAKE,WAAY,MAL1G,EAJnC,6KAkBa/I,eAAeC,QAAQ,UAAaD,eAAeC,QAAQ,QAlBxE,uBAmBYI,KAAKG,MAAMyB,QAAQ9C,KAAK,UAnBpC,0BAwBkBW,KAAKC,MAAMC,eAAeC,QAAQ,SAAS/B,SACjDmC,KAAKG,MAAMyB,QAAQ9C,KAAK,KAzBpC,OA6BQkB,KAAKmB,OAASgB,IAAGC,QAAQ,yBA7BjC,0IAqIQ,IAAK,IAAM0D,KAAQ9F,KAAKI,MAAM4E,OAC1B,GAA2C,KAAvChF,KAAKI,MAAM4E,OAAOc,GAAMC,WACxB,OAAO,EAGf,OAAO,IA1If,6CAkLQ/F,KAAKmB,OAAO4F,eAlLpB,+BAuLQ,OACI,yBAAKxG,UAAU,gBACX,kBAAC,EAAD,MACA,6BACA,6CAEA,kBAAC2I,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAASrE,aAAe,GAAI8C,SAAUzG,KAAKiI,iBACvH,kBAACiB,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOkD,mBAI3B,kBAACgB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAASnE,aAAe,GAAI4C,SAAUzG,KAAK8H,iBACvH,kBAACoB,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAO+C,mBAI3B,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,YAAY5B,MAAO5E,KAAKI,MAAM4H,SAAS1E,KAAO,GAAImD,SAAUzG,KAAKmI,YACvG,kBAACe,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOoD,WAI3B,kBAACc,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAQyG,MAAO5E,KAAKI,MAAM4H,SAAS/D,cAAgB,GAAIwC,SAAUzG,KAAKqI,kBACzF,kBAACa,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOsD,mBAGvB,kBAACY,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOyG,MAAO5E,KAAKI,MAAM4H,SAAS7D,YAAc,GAAIsC,SAAUzG,KAAKuI,gBACtF,kBAACW,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAOwD,iBAGvB,kBAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnL,KAAK,OAAOqI,YAAY,oBAAoB5B,MAAO5E,KAAKI,MAAM4H,SAAS5D,OAAS,GAAIqC,SAAUzG,KAAKyI,WACjH,kBAACS,EAAA,EAAKtF,KAAN,CAAWrD,UAAU,cAChBP,KAAKI,MAAM4E,OAAO0D,aAI3B,kBAAChI,EAAA,EAAD,CAAQ0C,QAAQ,UAAUjF,KAAK,SAASuI,UAAW1G,KAAK6F,cAAelF,QAASX,KAAKyJ,KAArF,eAzOhB,GAAiC5I,a,kBCnC1B,SAAS8I,IACZ,IAAMC,EAAEC,KAAKC,MAAoB,IAAdD,KAAKE,UAClBC,EAAEH,KAAKC,MAAoB,IAAdD,KAAKE,UAClBE,EAAEJ,KAAKC,MAAoB,IAAdD,KAAKE,UAExB,MAAM,QAAN,OAAeH,EAAf,YAAoBI,EAApB,YAAyBC,EAAzB,SCiBG,IAAMC,EAAb,kDAKI,WAAmB/J,GAAa,IAAD,8BAC3B,cAAMA,IAJFe,sBAGuB,IAFvBC,YAEuB,EAE3B,EAAKf,MAAQ,CACT5B,UAAWV,EAAMoE,WAAW1D,UAC5BH,QAASP,EAAMoE,WAAW7D,QAC1B8L,sBAAuB,GACvBC,iBAAkB,GAClBC,OAAQ,IAPe,EALnC,8LAqBa1K,eAAeC,QAAQ,UAAaD,eAAeC,QAAQ,QArBxE,uBAsBYI,KAAKG,MAAMyB,QAAQ9C,KAAK,UAtBpC,0BA2BkBW,KAAKC,MAAMC,eAAeC,QAAQ,SAAS/B,SACjDmC,KAAKG,MAAMyB,QAAQ9C,KAAK,KA5BpC,OAgCQkB,KAAKmB,OAASgB,IAAGC,QAAQ,yBAGzBpC,KAAKkB,iBAAmBpD,EAAMuE,WAAU,WACpC,IAAM7D,EAAYV,EAAMoE,WAAW1D,UAC7BH,EAAUP,EAAMoE,WAAW7D,QACjC,EAAKgC,SAAS,CAAE7B,YAAWH,eAKK,IAAhC2B,KAAKI,MAAM5B,UAAU8D,QAA4C,IAA5BtC,KAAKI,MAAM/B,QAAQiE,OACxDtC,KAAK8G,mBAICqD,EAAwB,GACxBC,EAAmB,GACnBC,EAAS,GAEfrK,KAAKI,MAAM5B,UAAUgB,SAAQ,SAAAP,GACrBA,EAAEZ,QAAU,IACZ8L,EAAsBrL,KAAKG,EAAE0E,aAC7ByG,EAAiBtL,KAAKG,EAAEZ,SACxBgM,EAAOvL,KAAK6K,SAKpB3J,KAAKK,SAAS,CAAE8J,wBAAuBC,mBAAkBC,YAO7DrK,KAAKmB,OAAOuB,GAAG,8BAA8B,SAAAE,GACzC,EAAKkE,qBAET9G,KAAKmB,OAAOuB,GAAG,gCAAgC,SAAAG,GAC3C,EAAKiE,qBAET9G,KAAKmB,OAAOuB,GAAG,8BAAf,sBAA8C,sBAAArB,EAAA,sDAC1C,EAAKyF,kBADqC,4CA1EtD,oSAmFgBvF,IAAMgB,IAAqBzB,EAAOC,UAAU,kBAnF5D,cAkFkBW,EAlFlB,OAoFkBlD,EAAYkD,EAASC,KApFvC,SAuFgBJ,IAAMgB,IAAmBzB,EAAOC,UAAU,gBAvF1D,OAsFkByB,EAtFlB,OAwFkBnE,EAAUmE,EAAUb,KAE1B7D,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWa,eAAgBE,QAASD,IAC3DP,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAWgB,iBAAkBD,QAASE,IAC7DV,EAAM2E,SAAS,CAAEtE,KAAMZ,EAAW+B,0BA5F9C,qDA+FsC,mCAAtB,KAAIoC,SAASC,KA/F7B,wBAgGgBhC,eAAeW,QACfuB,MAAM,KAAIH,SAASC,MACnB3B,KAAKG,MAAMyB,QAAQ9C,KAAK,UAlGxC,2BAuGgB+C,MAAM,EAAD,IAvGrB,QA6GcsI,EAAwB,GACxBC,EAAmB,GACnBC,EAAS,GAIfrK,KAAKI,MAAM5B,UAAUgB,SAAQ,SAAAP,GACrBA,EAAEZ,QAAU,IACZ8L,EAAsBrL,KAAKG,EAAE0E,aAC7ByG,EAAiBtL,KAAKG,EAAEZ,SACxBgM,EAAOvL,KAAK6K,SAMpB3J,KAAKK,SAAS,CAAE8J,wBAAuBC,mBAAkBC,WA7HjE,6JAoIQrK,KAAKkB,mBACLlB,KAAKmB,OAAO4F,eArIpB,+BA0IQ,OAEI,yBAAKxG,UAAU,WACX,kBAAC,EAAD,MACA,6BACA,kBAAC,MAAD,CACIoB,KACI,CACI2I,OAAQtK,KAAKI,MAAM+J,sBACnBI,SAAU,CACN,CACIC,MAAO,UACP7I,KAAM3B,KAAKI,MAAMgK,iBACjBK,gBAAiBzK,KAAKI,MAAMiK,UAK5CK,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,EACbC,aAAc,SAAUP,EAAOQ,EAAOV,GAElC,GAAIT,KAAKC,MAAMU,KAAWA,EACtB,OAAOA,eApKnD,GAA6B3J,aCThBoK,GAAb,kDAEI,WAAmB9K,GAAa,IAAD,6BAC3B,cAAMA,GACNoB,IAAM2J,aAAaC,QAAQC,KAAI,SAAAC,GAE3B,OADAA,EAAIC,QAAQC,cAAgB,UAAU5L,eAAeC,QAAQ,SACtDyL,KAGX9J,IAAM2J,aAAaxJ,SAAS0J,KAAI,SAAAI,GAC5B,OAAOA,KARgB,EAFnC,qDAeQ,OACI,yBAAKjL,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIE,OAAK,EACLgL,KAAM,IACNC,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EAAD,iBACQA,EADR,CACe+C,IAAK,eAI5B,kBAAC,IAAD,CACIzC,OAAK,EACLgL,KAAM,SAAUvI,IAAK,QACrBwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIM,OAAK,EACLgL,KAAM,gBAAiBvI,IAAK,eAC5BwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIM,OAAK,EACLgL,KAAM,SAAUvI,IAAK,eACrBwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIM,OAAK,EACLgL,KAAM,aAAcvI,IAAK,MACzBwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIM,OAAK,EACLgL,KAAM,aAAcvI,IAAK,OACzBwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,MAIhB,kBAAC,IAAD,CACIM,OAAK,EACLgL,KAAM,WAAYvI,IAAK,UACvBwI,OAAQ,SAAAvL,GAAK,OACT,kBAAC,EACOA,aA9ExC,GAAyBU,a,OCNzB8K,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,StBgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvH,GACL+D,QAAQ/D,MAAMA,EAAMsB,c","file":"static/js/main.9581a9a2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum ActionType {\r\n    SaveAllVacations,\r\n    SaveAllFollows,\r\n    PrepareVacationsForUser,\r\n    saveOneVacation,\r\n    addOneVacation,\r\n    deleteOneVacation,\r\n    AddFollow,\r\n    RemoveFollow\r\n}\r\n","\r\nexport class UserModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public firstName?: string,\r\n        public lastName?: string,\r\n        public userName?: string,\r\n        public password?: string,\r\n        public isAdmin?: boolean,\r\n        ) {\r\n    }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { reduce } from \"./reducer\";\r\nimport { AppState } from \"./app-state\";\r\n\r\nexport const store = createStore(reduce, new AppState());\r\n\r\n","import { AppState } from \"./app-state\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./action-type\";\r\nexport function reduce(oldAppState: AppState, action: Action): AppState {\r\n\r\n    const newAppState = { ...oldAppState }; // Duplicate the old state into a new state.\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case ActionType.SaveAllFollows:\r\n            newAppState.follows = action.payload;\r\n            break;\r\n\r\n        case ActionType.SaveAllVacations:\r\n            newAppState.vacations = action.payload;\r\n            break;\r\n\r\n        case ActionType.saveOneVacation:\r\n\r\n            for (let i in newAppState.vacations) {\r\n                if (newAppState.vacations[i].vacationId === action.payload.vacationId) {\r\n                    const follows=newAppState.vacations[i].follows;\r\n                    const isFollow=newAppState.vacations[i].isFollow;\r\n                    newAppState.vacations[i] = action.payload;\r\n                    newAppState.vacations[i].follows=follows;\r\n                    newAppState.vacations[i].isFollow=isFollow;\r\n                    \r\n                }\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        case ActionType.addOneVacation:\r\n            newAppState.vacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.deleteOneVacation:\r\n            // for(let i in newAppState.vacations){\r\n            newAppState.vacations = newAppState.vacations.filter(v => { return v.vacationId !== action.payload });\r\n            break;\r\n\r\n        case ActionType.AddFollow:\r\n            newAppState.follows.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.RemoveFollow:\r\n            // for(let i in newAppState.vacations){\r\n            newAppState.follows = newAppState.follows.filter(f => { return f.followId !== action.payload });\r\n            break;\r\n\r\n        case ActionType.PrepareVacationsForUser:\r\n            //add per vacation number of followers and if the user is following\r\n            let counter = 0;\r\n            newAppState.vacations.forEach((v) => {\r\n                v.isFollow = false;\r\n                newAppState.follows.forEach((f) => {\r\n                    if (f.vacationId === v.vacationId) {\r\n                        counter++;\r\n                        if (f.userName === JSON.parse(sessionStorage.getItem(\"user\")).userName) {\r\n                            v.isFollow = true;\r\n                        }\r\n                    }\r\n                });\r\n                v.follows = counter;\r\n                counter = 0;\r\n            });\r\n\r\n            //sort array by followed vacations first\r\n            const isFollow = newAppState.vacations.filter((v) => v.isFollow === true);\r\n            const isNotFollow = newAppState.vacations.filter((v) => v.isFollow === false);\r\n            newAppState.vacations = isFollow.concat(isNotFollow);\r\n\r\n            break;\r\n\r\n        default: break;\r\n    }\r\n\r\n    return newAppState;\r\n}","import { VacationModel } from \"../models/vacation-model\";\r\nimport { FollowModel } from \"../models/follow-model\";\r\nimport { UserModel } from \"../models/user-model\";\r\n\r\nexport class AppState {\r\n    \r\n    public vacations: VacationModel[];\r\n    public follows: FollowModel[];\r\n    public user: UserModel;\r\n\r\n    public constructor() {\r\n        this.vacations = [];\r\n        this.follows=[];\r\n        this.user=new UserModel();\r\n    }\r\n}","export class FollowModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public followId?: number,\r\n        public userName?: string,\r\n        public vacationId?: number) {\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./navBar.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserModel } from \"../../models/user-model\";\r\n\r\ninterface userState {\r\n    user: UserModel\r\n}\r\n\r\n\r\nexport class NavBar extends Component<any, userState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: new UserModel()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"user\")) {\r\n            const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n            this.setState({ user });\r\n        }\r\n\r\n    }\r\n\r\n    private logOut() {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"barMenu\">\r\n                <div className=\"left\">\r\n                    <NavLink to=\"/\" exact>Home</NavLink>\r\n                    {this.state.user.isAdmin ? (<span> |\r\n                                                <NavLink to=\"/admin\" exact> Admin </NavLink>\r\n                                                <span>|</span>\r\n                                                <NavLink to=\"/admin/add\" exact> Add Vacation</NavLink>\r\n                                                <span>|</span>\r\n                                                <NavLink to=\"/reports\" exact> Reports </NavLink>\r\n                                            </span>):null}\r\n\r\n                    <div className=\"right\">Hello {this.state.user.userName} </div>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/login\" exact>\r\n                        <Button onClick={this.logOut}>Log out</Button>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","export class Config{\r\n\r\n    public static serverUrl;\r\n\r\n    public static _initialize(){\r\n        if(process.env.NODE_ENV === \"production\"){\r\n            Config.serverUrl=\"https://itay-vacations.herokuapp.com\";\r\n        }\r\n\r\n        else{\r\n            Config.serverUrl=\"http://localhost:3000\";\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nConfig._initialize();","import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { FollowModel } from \"../../models/follow-model\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { StarFill } from 'react-bootstrap-icons';\r\nimport io from \"socket.io-client\";\r\nimport { NavBar } from \"../nav-bar/navBar\";\r\nimport { Config } from \"../../config\";\r\n\r\n\r\n\r\ninterface VacationsState {\r\n    vacations: VacationModel[];\r\n    follows: FollowModel[];\r\n}\r\n\r\nexport class Home extends Component<any, VacationsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations and follows from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            follows: store.getState().follows\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        //if there is no token, link to the login page\r\n        if (!sessionStorage.getItem(\"token\") || !sessionStorage.getItem(\"user\")) {\r\n            this.props.history.push(\"/login\");\r\n            return;\r\n        }\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(\"http://localhost:3000\");\r\n\r\n        //if is there any changes in the store get the vacations and the follows from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            const follows = store.getState().follows;\r\n            this.setState({ vacations, follows });\r\n        });\r\n\r\n        //if the store is empty, get the data with ajax\r\n        if (!(store.getState().follows.length > 0 && store.getState().vacations.length > 0)) {\r\n\r\n            try {\r\n                const response = await\r\n                    axios.get<VacationModel[]>(Config.serverUrl+\"/api/vacations\");\r\n                const vacations = response.data;\r\n\r\n                const response2 = await\r\n                    axios.get<FollowModel[]>(Config.serverUrl+\"/api/follows\");\r\n                const follows = response2.data;\r\n\r\n                store.dispatch({ type: ActionType.SaveAllFollows, payload: follows });\r\n                store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n                store.dispatch({ type: ActionType.PrepareVacationsForUser });\r\n            }\r\n\r\n            catch (err) {\r\n                if (err.response.data === \"Your login session has expired\") {\r\n                    sessionStorage.clear();\r\n                    this.props.history.push(\"/login\");\r\n                    return;\r\n                }\r\n\r\n                else {\r\n                    alert(err);\r\n                }\r\n            }\r\n        }\r\n\r\n        //listen to actions from the server\r\n        this.socket.on(\"Admin-updated-a-vacation-from-server\", vacationUpdated => {\r\n            store.dispatch({ type: ActionType.saveOneVacation, payload: vacationUpdated });\r\n        });\r\n        this.socket.on(\"added-vacation-from-server\", vacationAdded => {\r\n            store.dispatch({ type: ActionType.addOneVacation, payload: vacationAdded });\r\n        });\r\n        this.socket.on(\"removed-vacation-from-server\", vacationRemoved => {\r\n            store.dispatch({ type: ActionType.deleteOneVacation, payload: vacationRemoved });\r\n        });\r\n        this.socket.on(\"follows-updated-from-server\", async () => {\r\n            const response2 = await\r\n                axios.get<FollowModel[]>(Config.serverUrl+\"/api/follows\");\r\n            const follows = response2.data;\r\n            store.dispatch({ type: ActionType.SaveAllFollows, payload: follows });\r\n            store.dispatch({ type: ActionType.PrepareVacationsForUser });\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    //add a follow for vacation in the database, and emit\r\n    private addFollow = async (vacationId) => {\r\n        const followToAdd = new FollowModel();\r\n        followToAdd.userName = JSON.parse(sessionStorage.getItem(\"user\")).userName;\r\n        followToAdd.vacationId = vacationId;\r\n        try {\r\n            await axios.post<FollowModel>(Config.serverUrl+\"/api/follows\", followToAdd);\r\n            this.socket.emit(\"user-changed-a-follow-from-client\");\r\n        }\r\n\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    //add a follow for vacation in the database, and emit\r\n    private removeFollow = async (vacationId) => {\r\n\r\n        const userName = JSON.parse(sessionStorage.getItem(\"user\")).userName;\r\n\r\n        const followToRemove = this.state.follows.find(f => {\r\n            return f.userName === userName && f.vacationId === vacationId\r\n        });\r\n\r\n        try {\r\n            await axios.delete(`${Config.serverUrl}/api/follows/${followToRemove.followId}`);\r\n            this.socket.emit(\"user-changed-a-follow-from-client\");\r\n        }\r\n\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    /*\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n        this.socket.disconnect();\r\n    }*/\r\n\r\n\r\n\r\n    public render() {\r\n\r\n        return (\r\n            <div className=\"home\">\r\n                <NavBar />\r\n                <br />\r\n                <div className=\"cardContainer\">\r\n                    {this.state.vacations.map(v =>\r\n\r\n\r\n                        <Card style={{ width: '18rem' }} className=\"card\"  key={v.vacationId}>\r\n                            <Card.Img variant=\"top\" className=\"img\" src={\"/assets/images/vacations/\" + v.img} />\r\n                            <Card.Body>\r\n                                {v.isFollow ? <StarFill color=\"yellow\" size={20} onClick={() => this.removeFollow(v.vacationId)} /> : <StarFill color=\"grey\" size={20} onClick={() => this.addFollow(v.vacationId)} />}\r\n\r\n                                <Card.Title>{v.destination}</Card.Title>\r\n                                <Card.Text>\r\n                                    {v.description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem>Follows: {v.follows}</ListGroupItem>\r\n                                <ListGroupItem>Start: {new Date(v.startingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>end: {new Date(v.endingDate).toDateString()}</ListGroupItem>\r\n                                <ListGroupItem>Cost: {v.price}$</ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","export function validateAvailableUserName(userName,usersNames){\r\n    let error=\"\";\r\n    usersNames.forEach(user=>{\r\n        if(userName===user.userName){\r\n            error=\"user name is not available\";\r\n        }\r\n    });\r\n    return error;\r\n}\r\n\r\nexport function validateUserName(userName){\r\n\r\n    if (userName === \"\") {\r\n        return \"Missing user name\";\r\n    }\r\n\r\n    else if(userName.length < 2){\r\n        return \"User name too short\";\r\n    }\r\n\r\n    else if (userName.length > 15) {\r\n        return \"User name too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateFirstName(firstName){\r\n    if (firstName === \"\") {\r\n        return \"Missing first name\";\r\n    }\r\n\r\n    else if(firstName.length < 2){\r\n        return  \"first name is too short\";\r\n    }\r\n    \r\n    else if (firstName.length > 10) {\r\n        return  \"first name is too long\";\r\n    }\r\n\r\n    else if(!('A'<=firstName[0] && firstName[0] <='Z')){\r\n        return  \"first name must start with a capital letter\";\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateLastName(lastName){\r\n    if (lastName === \"\") {\r\n        return  \"Missing last name\";\r\n    }\r\n\r\n    else if(lastName.length < 2){\r\n        return  \"last name is too short\";\r\n    }\r\n    \r\n    else if (lastName.length > 10) {\r\n        return  \"last name is too long\";\r\n    }\r\n\r\n    else if(!('A'<=lastName[0] && lastName[0] <='Z')){\r\n        return  \"first name must start with a capital letter\";\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\n\r\n\r\nexport function validatePassword(password){\r\n    if (password === \"\") {\r\n        return \"Missing password\";\r\n    }\r\n\r\n    else if(password.length < 6){\r\n        return \"password is too short\";\r\n    }\r\n    \r\n    else if (password.length > 10) {\r\n        return \"password is too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport function verifyPassword(verifyPassword,password){\r\n    if(verifyPassword===\"\"){\r\n        return \"Missing verified password\";\r\n    }\r\n    else if (verifyPassword !== password) {\r\n        return \"verify password\";\r\n    }\r\n    return \"\";\r\n}","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./registration.css\";\r\nimport axios from \"axios\";\r\nimport { UserModel } from \"../../models/user-model\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    validateAvailableUserName,\r\n    validateUserName,\r\n    validateFirstName,\r\n    validateLastName,\r\n    validatePassword,\r\n    verifyPassword}\r\n     from \"../../services/user-validation\";\r\nimport { Config } from \"../../config\";\r\n\r\ninterface UserState {\r\n    user: UserModel;\r\n    usersNames: UserModel[];\r\n    errors: {   userNameError: string,\r\n                firstNameError: string,\r\n                lastNameError: string,\r\n                passwordError: string,\r\n                verifyPasswordError: string\r\n              };\r\n\r\n}\r\n\r\nexport class Registration extends Component<any,UserState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: new UserModel(),\r\n            usersNames: [],\r\n            errors: { userNameError: \"*\", firstNameError: \"*\", lastNameError: \"*\",passwordError:\"*\",verifyPasswordError:\"*\"}\r\n        };\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = args.target.value;\r\n\r\n        let nameError;\r\n\r\n        nameError = validateAvailableUserName(userName,this.state.usersNames);\r\n        if(nameError!==\"user name is not available\"){\r\n            nameError=validateUserName(userName);\r\n        }\r\n        \r\n        const errors = { ...this.state.errors };\r\n        errors.userNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.userName = userName;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private setFirstName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const firstName = args.target.value;\r\n\r\n        let nameError = validateFirstName(firstName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.firstNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.firstName = firstName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setLastName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const lastName = args.target.value;\r\n\r\n        let nameError = validateLastName(lastName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.lastNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.lastName = lastName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n\r\n        let nameError = validatePassword(password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.passwordError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.password = password;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private verifyPasswordUser = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const verifiedPassword = args.target.value;\r\n        const user = { ...this.state.user };\r\n        \r\n        let nameError = verifyPassword(verifiedPassword,user.password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.verifyPasswordError = nameError;\r\n        this.setState({ errors });\r\n    }\r\n\r\n    private isFormLegal = () => {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private register = async () => {\r\n\r\n        try {\r\n            const response = await axios.post(Config.serverUrl+\"/api/auth/register\",\r\n                this.state.user);\r\n\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n            sessionStorage.setItem(\"token\", response.data.token);\r\n\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        catch (err) {\r\n            alert(err.message);\r\n        }\r\n\r\n    }\r\n\r\n    public async getAllUsersNames(){\r\n        try{\r\n            const response = await axios.get<UserModel[]>(Config.serverUrl+\"/api/auth/usersNames\");\r\n            const usersNames=response.data;\r\n\r\n            this.setState({usersNames});\r\n        }\r\n\r\n        catch(err)\r\n        {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n\r\n    public componentDidMount(){\r\n        //if the user is logged in, navigate to home page\r\n        if (sessionStorage.getItem(\"token\")) {\r\n            this.props.history.push(\"/\");\r\n            return;\r\n        }\r\n\r\n        this.getAllUsersNames();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"registration\">\r\n                <div className=\"cardRegistration\">\r\n                    <h1>Sign up</h1>\r\n                    <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"User Name\" onChange={this.setUserName}/>\r\n                    <span>{this.state.errors.userNameError}</span>\r\n                    <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"First Name\" onChange={this.setFirstName}/>\r\n                    <span>{this.state.errors.firstNameError}</span>\r\n                    <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"Last Name\" onChange={this.setLastName}/>\r\n                    <span>{this.state.errors.lastNameError}</span>\r\n                    <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Password\" onChange={this.setPassword}/>\r\n                    <span>{this.state.errors.passwordError}</span>\r\n                    <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Verify Password\" onChange={this.verifyPasswordUser}/>\r\n                    <span>{this.state.errors.verifyPasswordError}</span>\r\n                    <br/>\r\n                    <button disabled={!this.isFormLegal()} onClick={this.register}>Sign up</button>\r\n                    <NavLink className=\"navigateLogin\" to=\"/login\" exact>Do you have an account? Sign in now</NavLink>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./login.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserModel } from \"../../models/user-model\";\r\nimport {validateUserName,validatePassword} from \"../../services/user-validation\";\r\nimport { Config } from \"../../config\";\r\n\r\n\r\n\r\ninterface UserState {\r\n    user: UserModel;\r\n    errors: {   \r\n        userNameError: string,\r\n        passwordError: string,\r\n      };\r\n}\r\n\r\nexport class Login extends Component<any, UserState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: new UserModel(),\r\n            errors: { userNameError: \"*\",passwordError:\"*\"}\r\n\r\n        };\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const userName = args.target.value;\r\n\r\n        let nameError = validateUserName(userName);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.userNameError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.userName = userName;\r\n        this.setState({ user });\r\n\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n\r\n        let nameError = validatePassword(password);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.passwordError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const user = { ...this.state.user };\r\n        user.password = password;\r\n        this.setState({ user });\r\n    }\r\n\r\n    private login = async () => {\r\n\r\n        try {\r\n            const response = await axios.post(Config.serverUrl+\"/api/auth/login\",\r\n                this.state.user);\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n            sessionStorage.setItem(\"token\", response.data.token);\r\n\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        catch (err) {\r\n            if(err.response.data===\"Illegal username or password\"){\r\n                alert(err.response.data);\r\n                return;\r\n            }\r\n\r\n            else{\r\n                alert(err.message);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //check if the form is legal\r\n    private isFormLegal = () => {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public componentDidMount() {\r\n        //if the user is logged in, navigate to Home page\r\n        if (sessionStorage.getItem(\"token\") && JSON.parse(sessionStorage.getItem(\"user\")) ) {\r\n            this.props.history.push(\"/\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"cardLogIn\">\r\n                    <h1>Login</h1>\r\n                    <input type=\"text\" name=\"\" id=\"userBox\" placeholder=\"User Name\" onChange={this.setUserName} />\r\n                    <input type=\"password\" name=\"\" id=\"userBox\" placeholder=\"Password\" onChange={this.setPassword} />\r\n                    <br/>\r\n                    <button disabled={!this.isFormLegal()} onClick={this.login}>Login</button>\r\n                    <NavLink className=\"navigate\" to=\"/registration\" exact>Not a member? Sign up now</NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./admin.css\";\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { Pencil } from 'react-bootstrap-icons';\r\nimport io from \"socket.io-client\";\r\nimport { NavBar } from \"../nav-bar/navBar\";\r\nimport { Config } from \"../../config\";\r\n\r\n\r\n\r\ninterface VacationsState {\r\n    vacations: VacationModel[];\r\n}\r\n\r\nexport class Admin extends Component<any, VacationsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations\r\n        };\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        \r\n        //if there is no token, link to the login page\r\n        if (!sessionStorage.getItem(\"token\") || !sessionStorage.getItem(\"user\")) {\r\n            this.props.history.push(\"/login\");\r\n            return;\r\n        }\r\n\r\n        //if user is not admin, link to the Home page\r\n        else if (!JSON.parse(sessionStorage.getItem(\"user\")).isAdmin) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(\"http://localhost:3000\");\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            this.setState({ vacations });\r\n        });\r\n\r\n\r\n        // if the store is not empty, cancel the function and don't use axios\r\n        if (this.state.vacations.length > 0) {\r\n            return;\r\n        }\r\n\r\n        //if the store is empty, get the data with ajax\r\n        this.getDataWithAjax();\r\n\r\n        //listen to actions from the server\r\n        this.socket.on(\"Admin-updated-a-vacation-from-server\", vacationUpdated => {\r\n            store.dispatch({ type: ActionType.saveOneVacation, payload: vacationUpdated });\r\n        });\r\n        this.socket.on(\"added-vacation-from-server\", vacationAdded => {\r\n            store.dispatch({ type: ActionType.addOneVacation, payload: vacationAdded });\r\n        });\r\n        this.socket.on(\"removed-vacation-from-server\", vacationRemoved => {\r\n            store.dispatch({ type: ActionType.deleteOneVacation, payload: vacationRemoved });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    //function for getting the vacations with ajax and save in the store\r\n    private getDataWithAjax= async ()=>{\r\n        try {\r\n            const response = await\r\n                axios.get<VacationModel[]>(Config.serverUrl+\"/api/vacations\");\r\n            const vacations = response.data;\r\n            store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n        }\r\n\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //delete a vacation from the database and the store, and emit\r\n    private async delete(vacationId) {\r\n        try {\r\n            await axios.delete(`${Config.serverUrl}/api/vacations/${vacationId}`);\r\n            store.dispatch({ type: ActionType.deleteOneVacation, payload: vacationId });\r\n            this.socket.emit(\"Admin-removed-a-vacation-from-client\", vacationId);\r\n        }\r\n\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <NavBar />\r\n                <br/>\r\n\r\n                <div className=\"cardContainer\">\r\n                {this.state.vacations.map(v =>\r\n\r\n                    <Card style={{ width: '18rem' }}  key={v.vacationId}>\r\n                        <Card.Img variant=\"top\" className=\"img\" src={\"/assets/images/vacations/\"+v.img} />\r\n                        <Card.Body>\r\n                            <X color=\"black\" size={20} onClick={() => this.delete(v.vacationId)} />\r\n                            <NavLink to={\"/admin/\" + v.vacationId}>\r\n                                <Pencil color=\"black\" size={20} />\r\n                            </NavLink>\r\n                            <Card.Title>{v.destination}</Card.Title>\r\n                            <Card.Text>\r\n                                {v.description}\r\n                            </Card.Text>\r\n\r\n                        </Card.Body>\r\n                        <ListGroup className=\"list-group-flush\">\r\n                            <ListGroupItem>Start: {new Date(v.startingDate).toDateString()}</ListGroupItem>\r\n                            <ListGroupItem>end: {new Date(v.endingDate).toDateString()}</ListGroupItem>\r\n                            <ListGroupItem>Cost: {v.price}$</ListGroupItem>\r\n                        </ListGroup>\r\n                    </Card>\r\n                )}\r\n                </div>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","export function JsonToString(date){\r\n    const d=new Date(date);\r\n    d.setDate(d.getDate()+1);\r\n    const stringDate=d.toISOString();\r\n    const arr=stringDate.split(\"T\");\r\n   return arr[0];\r\n   \r\n}\r\n\r\nexport function StringToJson(date){\r\n    const d=new Date(date);\r\n    d.setDate(d.getDate()-1);\r\n    d.setHours(24);\r\n    const stringDate=d.toJSON();\r\n    return stringDate;\r\n}","\r\nexport function validateDescription(description){\r\n\r\n    if (description === \"\") {\r\n        return \"Missing description\";\r\n    }\r\n\r\n    else if(description.length < 3){\r\n        return \"Description is too short\";\r\n    }\r\n\r\n    else if (description.length > 200) {\r\n        return \"Description is too long\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateDestination(destination){\r\n    if (destination === \"\") {\r\n        return \"Missing destination\";\r\n    }\r\n\r\n    else if(destination.length < 2){\r\n        return  \"Destination is too short\";\r\n    }\r\n    \r\n    else if (destination.length > 30) {\r\n        return  \"Destination is too long\";\r\n    }\r\n\r\n    else if(!('A'<=destination[0] && destination[0] <='Z')){\r\n        return  \"Destination must start with a capital letter\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function validateImgUrl(img){\r\n    return \"\";\r\n}\r\n\r\nexport function validateStartingDate(date){\r\n    return \"\";\r\n}\r\n\r\nexport function validateEndingDate(date){\r\n    return \"\";\r\n\r\n}\r\n\r\n\r\n\r\nexport function validatePrice(price){\r\n\r\n    if (!price) {\r\n        return \"Missing price\";\r\n    }\r\n\r\n    else if(price < 0){\r\n        return \"Price can't be negative\";\r\n    }\r\n    \r\n    else if (price > 50000) {\r\n        return \"Price is too high\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./editVacation.css\";\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { JsonToString } from \"../../services/date\";\r\nimport { StringToJson } from \"../../services/date\";\r\nimport { validateDescription, validateDestination, validateImgUrl, validateStartingDate, validateEndingDate, validatePrice } from \"../../services/vacation-validation\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport io from \"socket.io-client\";\r\nimport { NavBar } from \"../nav-bar/navBar\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { Config } from \"../../config\";\r\n\r\ninterface VacationState {\r\n    vacations: VacationModel[];\r\n    vacation: VacationModel;\r\n    errors: {\r\n        descriptionError: string,\r\n        destinationError: string,\r\n        imgError: string,\r\n        startingDateError: string,\r\n        endingDateError: string,\r\n        priceError: string\r\n    };\r\n}\r\n\r\nexport class EditVacation extends Component<any, VacationState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        //get vacations from the store\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            vacation: {},\r\n            errors: { descriptionError: \"\", destinationError: \"\", imgError: \"\", startingDateError: \"\", endingDateError: \"\", priceError: \"\" }\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(\"http://localhost:3000\");\r\n\r\n\r\n        //if is there any changes in the store get the vacations from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            this.setState({ vacations });\r\n        });\r\n\r\n        //if there is no token, link to the login page\r\n        if (!sessionStorage.getItem(\"token\") || !sessionStorage.getItem(\"user\")) {\r\n            this.props.history.push(\"/login\");\r\n            return;\r\n        }\r\n\r\n        //if user is not admin, link to the Home page\r\n        else if (!JSON.parse(sessionStorage.getItem(\"user\")).isAdmin) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n\r\n        try {\r\n            let vacation;\r\n\r\n            //if the store is not empty, find the vacation for edit and don't use axios at all\r\n            if (this.state.vacations.length > 0) {\r\n\r\n                for (let v of this.state.vacations) {\r\n                    if (v.vacationId === +this.props.match.params.id) {\r\n                        vacation = ({ ...v });\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            // if the store is empty, get the vacation for edit with axios\r\n            else {\r\n                const response = await\r\n                    axios.get<VacationModel>(`${Config.serverUrl}/api/vacations/${+this.props.match.params.id}`);\r\n                vacation = response.data;\r\n\r\n            }\r\n\r\n            //treatment with json date format\r\n            vacation.startingDate = JsonToString(vacation.startingDate);\r\n            vacation.endingDate = JsonToString(vacation.endingDate);\r\n            this.setState({ vacation });\r\n        }\r\n\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //disconnect from the server and the store\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    //get the data from inputs to the state\r\n    public setDescription = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const description = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDescription(description);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.descriptionError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.description = description;\r\n        this.setState({ vacation });\r\n    }\r\n    public setDestination = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const destination = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDestination(destination);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.destinationError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.destination = destination;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    public setImgUrl = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const img = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateImgUrl(img);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.imgError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.img = img;\r\n        this.setState({ vacation });\r\n    }\r\n    public setStartingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const startingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateStartingDate(startingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.startingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        // vacation.startingDate=new Date(startingDate).toJSON();\r\n        vacation.startingDate = startingDate;\r\n        this.setState({ vacation });\r\n    }\r\n    public setEndingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const endingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateEndingDate(endingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.endingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        // vacation.endingDate = new Date(endingDate).toJSON();\r\n        vacation.endingDate = endingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const price = +args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validatePrice(price);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.priceError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.price = price;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private isFormLegal() {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public update = async () => {\r\n        try {\r\n            const vacationToUpdate = { ...this.state.vacation }\r\n            console.log(vacationToUpdate);\r\n            console.log(Config.serverUrl);\r\n            await axios.put(`${Config.serverUrl}/api/vacations/${+this.props.match.params.id}`,\r\n                vacationToUpdate);\r\n            console.log(\"after axios\");\r\n            vacationToUpdate.startingDate = StringToJson(vacationToUpdate.startingDate);\r\n            vacationToUpdate.endingDate = StringToJson(vacationToUpdate.endingDate);\r\n            store.dispatch({ type: ActionType.saveOneVacation, payload: vacationToUpdate });\r\n            this.socket.emit(\"Admin-updated-a-vacation-from-client\", vacationToUpdate);\r\n            this.props.history.push(\"/admin\");\r\n        }\r\n\r\n        catch (err) {\r\n            console.log(\"err\");\r\n            console.log(err);\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else if (err.response.data === \"You are not admin!\") {\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"EditVacation\">\r\n                <NavBar/>\r\n                <br />\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Destination</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.destination || \"\"} onChange={this.setDestination} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.destinationError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.description || \"\"} onChange={this.setDescription} />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        {this.state.errors.descriptionError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Image URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.img || \"\"} onChange={this.setImgUrl} />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        {this.state.errors.imgError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"Enter description\" value={this.state.vacation.startingDate || \"\"} onChange={this.setStartingDate} />\r\n                <Form.Text className=\"text-muted\">\r\n                    {this.state.errors.startingDateError}\r\n                </Form.Text>\r\n\r\n                <Form.Label>Ending Date</Form.Label>\r\n                <Form.Control type=\"date\" placeholder=\"Enter description\" value={this.state.vacation.endingDate || \"\"} onChange={this.setEndingDate} />\r\n                <Form.Text className=\"text-muted\">\r\n                    {this.state.errors.endingDateError}\r\n                </Form.Text>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.price || \"\"} onChange={this.setPrice} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.priceError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.update}>\r\n                    Submit\r\n                    </Button >\r\n            </div>\r\n        );\r\n    }\r\n}","export class VacationModel {\r\n\r\n    public constructor( // Compiler Magic\r\n        public description?: string,\r\n        public destination?: string,\r\n        public img?: string,\r\n        public startingDate?: string,\r\n        public endingDate?: string,\r\n        public price?: number,\r\n        public vacationId?: number,\r\n        public follows?: number,\r\n        public isFollow?: boolean) {\r\n    }\r\n}\r\n\r\n","import React, { Component, ChangeEvent } from \"react\";\r\nimport \"./addVacation.css\";\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport axios from \"axios\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport {\r\n    validateDescription,\r\n    validateDestination,\r\n    validateImgUrl,\r\n    validateStartingDate,\r\n    validateEndingDate,\r\n    validatePrice\r\n}from \"../../services/vacation-validation\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport io from \"socket.io-client\";\r\nimport { NavBar } from \"../nav-bar/navBar\";\r\nimport { StringToJson } from \"../../services/date\";\r\nimport { Config } from \"../../config\";\r\n\r\n\r\ninterface VacationState {\r\n    vacation: VacationModel;\r\n    errors: {\r\n        descriptionError: string,\r\n        destinationError: string,\r\n        imgError: string,\r\n        startingDateError: string,\r\n        endingDateError: string,\r\n        priceError: string\r\n    };\r\n\r\n}\r\n\r\nexport class AddVacation extends Component<any, VacationState>{\r\n\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            vacation: new VacationModel(),\r\n            errors: { descriptionError: \"*\", destinationError: \"*\", imgError: \"*\", startingDateError: \"*\", endingDateError: \"*\", priceError: \"*\" }\r\n\r\n        };\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        //if there is no token, link to the login page\r\n        if (!sessionStorage.getItem(\"token\") || !sessionStorage.getItem(\"user\")) {\r\n            this.props.history.push(\"/login\");\r\n            return;\r\n        }\r\n\r\n        //if user is not admin, link to the Home page\r\n        else if (!JSON.parse(sessionStorage.getItem(\"user\")).isAdmin) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(\"http://localhost:3000\");\r\n    }\r\n\r\n\r\n\r\n    //get the data from inputs to the state\r\n    private setDescription = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const description = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateDescription(description);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.descriptionError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.description = description;\r\n        this.setState({ vacation });\r\n\r\n    }\r\n\r\n    private setDestination = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const destination = args.target.value;\r\n        let nameError;\r\n\r\n\r\n        nameError = validateDestination(destination);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.destinationError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.destination = destination;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n\r\n    private setImgUrl = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const img = args.target.value;\r\n        let nameError;\r\n\r\n\r\n        nameError = validateImgUrl(img);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.imgError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.img = img;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setStartingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const startingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateStartingDate(startingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.startingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.startingDate = startingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    private setEndingDate = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const endingDate = args.target.value;\r\n        let nameError;\r\n\r\n        nameError = validateEndingDate(endingDate);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.endingDateError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.endingDate = endingDate;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const price = +args.target.value;\r\n        let nameError;\r\n\r\n\r\n        nameError = validatePrice(price);\r\n\r\n        const errors = { ...this.state.errors };\r\n        errors.priceError = nameError;\r\n        this.setState({ errors });\r\n\r\n        const vacation = { ...this.state.vacation };\r\n        vacation.price = price;\r\n        this.setState({ vacation });\r\n    }\r\n\r\n    //check if the form is legal\r\n    private isFormLegal() {\r\n        for (const prop in this.state.errors) {\r\n            if (this.state.errors[prop].toString() !== \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //add a new vacation, to database and store, emit, and redirect to /login\r\n    private add = async () => {\r\n        try {\r\n            const response = await axios.post<VacationModel>(Config.serverUrl+\"/api/vacations\",\r\n                this.state.vacation);\r\n            const addedVacation =response.data;\r\n            addedVacation.follows=0;\r\n            addedVacation.startingDate = StringToJson(addedVacation.startingDate);\r\n            addedVacation.endingDate = StringToJson(addedVacation.endingDate);\r\n            console.log(addedVacation);\r\n            store.dispatch({ type: ActionType.addOneVacation, payload: addedVacation });\r\n            this.socket.emit(\"Admin-added-a-vacation-from-client\", addedVacation);\r\n            this.props.history.push(\"/admin\");\r\n\r\n        }\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                // alert(err.response.data);\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else if (err.response.data === \"You are not admin!\") {\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    //disconnect from the server\r\n    public componentWillUnmount(): void {\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    public render() {\r\n\r\n        return (\r\n            <div className=\"EditVacation\">\r\n                <NavBar/>\r\n                <br/>\r\n                <p>Add a vacation</p>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Destination</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter destination\" value={this.state.vacation.destination || \"\"} onChange={this.setDestination} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.destinationError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.description || \"\"} onChange={this.setDescription} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.descriptionError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Image URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter img\" value={this.state.vacation.img || \"\"} onChange={this.setImgUrl} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.imgError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control type=\"date\"  value={this.state.vacation.startingDate || \"\"} onChange={this.setStartingDate} />\r\n                <Form.Text className=\"text-muted\">\r\n                    {this.state.errors.startingDateError}\r\n                </Form.Text>\r\n\r\n                <Form.Label>Ending Date</Form.Label>\r\n                <Form.Control type=\"date\" value={this.state.vacation.endingDate || \"\"} onChange={this.setEndingDate} />\r\n                <Form.Text className=\"text-muted\">\r\n                    {this.state.errors.endingDateError}\r\n                </Form.Text>\r\n\r\n                <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter description\" value={this.state.vacation.price || \"\"} onChange={this.setPrice} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        {this.state.errors.priceError}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" disabled={!this.isFormLegal()} onClick={this.add}>\r\n                    Submit\r\n                    </Button >\r\n        \r\n            </div>\r\n\r\n        );\r\n    }\r\n}","export function getRandomColor(){\r\n    const r=Math.floor(Math.random()*255);\r\n    const g=Math.floor(Math.random()*255);\r\n    const b=Math.floor(Math.random()*255);\r\n\r\n    return `rgba(${r},${g},${b},0.5)`;\r\n    \r\n}","import React, { Component } from \"react\";\r\nimport \"./reports.css\";\r\nimport { VacationModel } from \"../../models/vacation-model\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { FollowModel } from \"../../models/follow-model\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { getRandomColor } from \"../../services/color\";\r\nimport { NavBar } from \"../nav-bar/navBar\";\r\nimport { Config } from \"../../config\";\r\n\r\ninterface reportsState {\r\n    vacations: VacationModel[];\r\n    follows: FollowModel[];\r\n    vacationsDestinations;\r\n    vacationsFollows;\r\n    colors;\r\n}\r\n\r\nexport class Reports extends Component<any, reportsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    private socket;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            vacations: store.getState().vacations,\r\n            follows: store.getState().follows,\r\n            vacationsDestinations: [],\r\n            vacationsFollows: [],\r\n            colors: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public async componentDidMount() {\r\n\r\n        //if there is no token, link to the login page\r\n        if (!sessionStorage.getItem(\"token\") || !sessionStorage.getItem(\"user\")) {\r\n            this.props.history.push(\"/login\");\r\n            return;\r\n        }\r\n\r\n        //if user is not admin, link to the Home page\r\n        else if (!JSON.parse(sessionStorage.getItem(\"user\")).isAdmin) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        //create connection to the server\r\n        this.socket = io.connect(\"http://localhost:3000\");\r\n\r\n        //if is there any changes in the store get the vacations and the follows from the new store.\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const vacations = store.getState().vacations;\r\n            const follows = store.getState().follows;\r\n            this.setState({ vacations, follows });\r\n\r\n        });\r\n\r\n        // if the store is empty get the data with ajax\r\n        if (this.state.vacations.length === 0 || this.state.follows.length===0) {\r\n            this.getDataWithAjax();\r\n        }\r\n\r\n        else {\r\n            const vacationsDestinations = [];\r\n            const vacationsFollows = [];\r\n            const colors = [];\r\n\r\n            this.state.vacations.forEach(v => {\r\n                if (v.follows > 0) {\r\n                    vacationsDestinations.push(v.destination);\r\n                    vacationsFollows.push(v.follows);\r\n                    colors.push(getRandomColor());\r\n                }\r\n\r\n            });\r\n\r\n            this.setState({ vacationsDestinations, vacationsFollows, colors });\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        this.socket.on(\"added-vacation-from-server\", vacationAdded => {\r\n            this.getDataWithAjax();\r\n        });\r\n        this.socket.on(\"removed-vacation-from-server\", vacationRemoved => {\r\n            this.getDataWithAjax();\r\n        });\r\n        this.socket.on(\"follows-updated-from-server\", async () => {\r\n            this.getDataWithAjax();\r\n        });\r\n\r\n    }\r\n\r\n    private async getDataWithAjax() {\r\n        try {\r\n            const response = await\r\n                axios.get<VacationModel[]>(Config.serverUrl+\"/api/vacations\");\r\n            const vacations = response.data;\r\n\r\n            const response2 = await\r\n                axios.get<FollowModel[]>(Config.serverUrl+\"/api/follows\");\r\n            const follows = response2.data;\r\n\r\n            store.dispatch({ type: ActionType.SaveAllFollows, payload: follows });\r\n            store.dispatch({ type: ActionType.SaveAllVacations, payload: vacations });\r\n            store.dispatch({ type: ActionType.PrepareVacationsForUser });\r\n        }\r\n        catch (err) {\r\n            if (err.response.data === \"Your login session has expired\") {\r\n                sessionStorage.clear();\r\n                alert(err.response.data);\r\n                this.props.history.push(\"/login\");\r\n                return;\r\n            }\r\n\r\n            else {\r\n                alert(err);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        const vacationsDestinations = [];\r\n        const vacationsFollows = [];\r\n        const colors = [];\r\n\r\n\r\n\r\n        this.state.vacations.forEach(v => {\r\n            if (v.follows > 0) {\r\n                vacationsDestinations.push(v.destination);\r\n                vacationsFollows.push(v.follows);\r\n                colors.push(getRandomColor());\r\n            }\r\n\r\n        });\r\n\r\n\r\n        this.setState({ vacationsDestinations, vacationsFollows, colors });\r\n\r\n\r\n\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n        this.socket.disconnect();\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n\r\n            <div className=\"reports\">\r\n                <NavBar />\r\n                <br></br>\r\n                <Bar\r\n                    data={\r\n                        {\r\n                            labels: this.state.vacationsDestinations,\r\n                            datasets: [\r\n                                {\r\n                                    label: 'Follows',\r\n                                    data: this.state.vacationsFollows,\r\n                                    backgroundColor: this.state.colors\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                    options={{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    userCallback: function (label, index, labels) {\r\n                                        // when the floored value is the same as the value we have a whole number\r\n                                        if (Math.floor(label) === label) {\r\n                                            return label;\r\n                                        }\r\n\r\n                                    },\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport \"./app.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"../home/home\"\r\nimport { Registration } from \"../registration/registration\";\r\nimport { Login } from \"../login/login\";\r\nimport axios from \"axios\";\r\nimport { Admin } from \"../admin/admin\";\r\nimport { EditVacation } from \"../edit-vacation/editVacation\";\r\nimport { AddVacation } from \"../add-vacation/addVacation\";\r\nimport { Reports } from \"../reports/reports\";\r\n\r\n\r\nexport class App extends Component<any>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        axios.interceptors.request.use(req => {\r\n            req.headers.authorization = 'Bearer '+sessionStorage.getItem(\"token\");\r\n            return req;\r\n        });\r\n\r\n        axios.interceptors.response.use(res => {\r\n            return res;\r\n          });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"layout\">\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path={\"/\"}\r\n                            render={props => (\r\n                                <Home\r\n                                    {...props} key={\"layout\"}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/login\"} key={\"login\"}\r\n                            render={props => (\r\n                                <Login\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/registration\"} key={\"registration\"}\r\n                            render={props => (\r\n                                <Registration\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin\"} key={\"registration\"}\r\n                            render={props => (\r\n                                <Admin\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin/add\"} key={\"add\"}\r\n                            render={props => (\r\n                                <AddVacation\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/admin/:id\"} key={\"edit\"}\r\n                            render={props => (\r\n                                <EditVacation\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/reports\"} key={\"reports\"}\r\n                            render={props => (\r\n                                <Reports\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}